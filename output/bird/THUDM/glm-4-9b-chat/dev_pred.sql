SELECT MAX(`Percent (%) Eligible Free (K-12)`) AS HighestEligibleFreeRate FROM frpm WHERE `County Name` = 'Alameda'; 
SELECT      `School Name`,      `Percent (%) Eligible Free (Ages 5-17)` FROM      frpm WHERE      `School Type` = 'Continuation Schools' ORDER BY      `Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3; 
SELECT Zip FROM frpm WHERE `Charter School (Y/N)` = 1 AND `District Name` = 'Fresno County Office of Education'; 
SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm) 
SELECT Phone FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE `Charter School (Y/N)` = 1 AND FundingType = 'Directly funded' AND OpenDate > '2000-01-01'; 
SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath < 400 AND schools.Virtual = 'F'; 
SELECT s.CDSCode, s.School FROM schools s JOIN satscores sat ON s.CDSCode = sat.cds WHERE sat.NumTstTakr > 500 AND s.Magnet = 1; 
SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead > 1500 OR sc.AvgScrMath > 1500 OR sc.AvgScrWrite > 1500 ORDER BY sc.NumTstTakr DESC LIMIT 1; 
SELECT satscores.NumTstTakr FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm); 
SELECT COUNT(DISTINCT s.CDSCode) FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath > 560 AND sch.FundingType = 'Directly funded'; 
SELECT frpm.FRPM_Count_Ages_5_17 FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrRead IS NOT NULL ORDER BY satscores.AvgScrRead DESC LIMIT 1; 
SELECT `School Code` FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500; 
SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) AS HighestEligibleFreeRate FROM frpm WHERE `Percent (%) Eligible FRPM (Ages 5-17)` > 0.3 AND `Enrollment (Ages 5-17)` > 0 AND `Free Meal Count (Ages 5-17)` > 0; 
SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'SAT' AND sc.AvgScrRead IS NOT NULL AND sc.AvgScrMath IS NOT NULL AND sc.AvgScrWrite IS NOT NULL ORDER BY (sc.NumGE1500 * 1.0 / sc.NumTstTakr) DESC LIMIT 3; 
SELECT s.NCESSchool, frpm.`Enrollment (Ages 5-17)` FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode ORDER BY frpm.`Enrollment (Ages 5-17)` DESC LIMIT 5; 
SELECT      s.District,      AVG(satscores.AvgScrRead) AS AvgReadScore FROM      satscores JOIN      schools ON satscores.cds = schools.CDSCode WHERE      schools.StatusType = 'Active' GROUP BY      s.District ORDER BY      AvgReadScore DESC LIMIT 1; 
SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100; 
SELECT `Charter School Number` FROM frpm WHERE `AvgScrWrite` = 499; 
SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.County = 'Contra Costa' AND frpm.`Charter School (Y/N)` = 1 AND frpm.`Charter Funding Type` = 'Directly funded' AND satscores.NumTstTakr <= 250; 
SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrMath IS NOT NULL ORDER BY sc.AvgScrMath DESC LIMIT 1; 
SELECT COUNT(*) FROM frpm WHERE `Low Grade` = '09' AND `High Grade` = '12' AND `County Name` = 'Amador'; 
SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `Free Meal Count (K-12)` < 700; 
SELECT s.School, s.County, s.District, s.School, satscores.NumTstTakr FROM schools s JOIN satscores ON s.CDSCode = satscores.cds WHERE s.County = 'Contra Costa' ORDER BY satscores.NumTstTakr DESC LIMIT 1; 
SELECT      s.School,      s.Street,      s.StreetAbr,      s.City,      s.Zip FROM      frpm f JOIN      schools s ON f.CDSCode = s.CDSCode WHERE      ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30; 
SELECT frpm.SchoolName FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.`Percent (%) Eligible Free (K-12)` > 0.1 AND satscores.AvgScrRead >= 1500 OR satscores.AvgScrMath >= 1500 OR satscores.AvgScrWrite >= 1500; 
SELECT s.School, s.FundingType FROM schools s JOIN (     SELECT s.CDSCode, AVG(satscores.AvgScrMath) AS AvgMathScore     FROM schools s     JOIN satscores ON s.CDSCode = satscores.cds     WHERE s.County = 'Riverside'     GROUP BY s.CDSCode     HAVING AVG(satscores.AvgScrMath) > 400 ) AS avg_scores ON s.CDSCode = avg_scores.CDSCode; 
SELECT      s.School,      s.Street,      s.City,      s.State,      s.Zip FROM      frpm f JOIN      schools s ON f.CDSCode = s.CDSCode WHERE      f.County = 'Monterey'      AND f.`Percent (%) Eligible Free (Ages 5-17)` > 0      AND f.`Free Meal Count (Ages 5-17)` > 800      AND f.`School Type` = 'High Schools (Public)'; 
SELECT      s.School,      satscores.AvgScrWrite,      s.Phone FROM      satscores JOIN      schools s ON satscores.cds = s.CDSCode WHERE      (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01') 
WITH K12to17Diff AS (     SELECT          frpm.CDSCode,         frpm.SchoolName,         frpm.DOCType,         (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) AS Diff     FROM frpm     WHERE frpm.`Charter School (Y/N)` = 0 ), AvgDiff AS (     SELECT AVG(Diff) AS AverageDiff     FROM K12to17Diff ) SELECT      K12to17Diff.SchoolName,     K12to17Diff.DOCType FROM K12to17Diff, AvgDiff WHERE K12to17Diff.Diff > AvgDiff.AverageDiff; 
SELECT OpenDate FROM schools WHERE School IS NOT NULL AND District IS NOT NULL ORDER BY Enrollment (K-12) DESC LIMIT 1; 
SELECT City, SUM(`Enrollment (K-12)`) AS TotalEnrollment FROM frpm GROUP BY City ORDER BY TotalEnrollment ASC LIMIT 5; 
SELECT `Percent (%) Eligible Free (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 10 OFFSET 9; 
SELECT      `School Name`,      `FRPM Count (K-12)` / `Enrollment (K-12)` AS EligibleFreeMealRate FROM      frpm WHERE      `FRPM Count (K-12)` / `Enrollment (K-12)` = (         SELECT MAX(`FRPM Count (K-12)` / `Enrollment (K-12)`)         FROM frpm         WHERE `FRPM Count (K-12)` / `Enrollment (K-12)` < (             SELECT MAX(`FRPM Count (K-12)` / `Enrollment (K-12)`)             FROM frpm             WHERE `FRPM Count (K-12)` / `Enrollment (K-12)` < (                 SELECT MAX(`FRPM Count (K-12)` / `Enrollment (K-12)`)                 FROM frpm                 WHERE `FRPM Count (K-12)` / `Enrollment (K-12)` < (                     SELECT MAX(`FRPM Count (K-12)` / `Enrollment (K-12)`)                     FROM frpm                     WHERE `FRPM Count (K-12)` / `Enrollment (K-12)` < (                         SELECT MAX(`FRPM Count (K-12)` / `Enrollment (K-12)`)                         FROM frpm                     )                 )             )         )     )     AND `School Type` = 'Traditional'     AND `Charter School (Y/N)` = 0 ORDER BY      `FRPM Count (K-12)` / `Enrollment (K-12)` DESC LIMIT 5; 
SELECT s.School, s.Website FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000; 
SELECT      frpm.CDSCode,      frpm.`Percent (%) Eligible Free (Ages 5-17)` FROM      frpm JOIN      schools ON frpm.CDSCode = schools.CDSCode WHERE      schools.AdmFName1 = 'Kacey Gibson' AND     schools.AdmLName1 = 'Gibson'; 
SELECT s.AdmEmail1 FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Charter School (Y/N)` = 1 AND f.`Enrollment (K-12)` = (SELECT MIN(`Enrollment (K-12)`) FROM frpm WHERE `Charter School (Y/N)` = 1) AND f.CDSCode = s.CDSCode; 
SELECT      s.AdmFName1,      s.AdmLName1,      s.AdmFName2,      s.AdmLName2,      s.AdmFName3,      s.AdmLName3 FROM      satscores AS sc JOIN      schools AS s ON sc.cds = s.CDSCode WHERE      sc.NumGE1500 IS NOT NULL AND sc.NumGE1500 > 0 ORDER BY      sc.NumGE1500 DESC LIMIT 1; 
SELECT Street, City, Zip, State FROM schools WHERE CDSCode = (     SELECT CDSCode     FROM satscores     WHERE rtype = 'Overall'     ORDER BY (NumGE1500 * 1.0 / NumTstTakr) ASC     LIMIT 1 ); 
SELECT s.Website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Los Angeles' AND sc.NumTstTakr BETWEEN 2000 AND 3000; 
SELECT AVG(NumTstTakr) AS AverageTestTakers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND YEAR(schools.OpenDate) = 1980; 
SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.District = 'Fresno Unified' AND sc.AvgScrRead IS NOT NULL ORDER BY sc.AvgScrRead ASC LIMIT 1; 
SELECT s.CDSCode, s.School, AVG(satscores.AvgScrRead) AS AvgReadScore FROM satscores JOIN schools s ON satscores.cds = s.CDSCode WHERE s.Virtual = 'F' AND s.GSoffered = 'Yes' AND s.GSserved = 'Yes' GROUP BY s.CDSCode, s.School ORDER BY AvgReadScore DESC LIMIT 5; 
SELECT s.`Educational Option Type` FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrMath IS NOT NULL AND sc.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL) 
SELECT      s.County,      AVG(s.AvgScrMath + s.AvgScrRead + s.AvgScrWrite) AS AvgAllSubjectScore FROM      frpm f JOIN      schools s ON f.CDSCode = s.CDSCode GROUP BY      s.County ORDER BY      AvgAllSubjectScore LIMIT 1; 
SELECT s.City, AVG(satscores.AvgScrWrite) AS AvgWritingScore FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.NumTstTakr = (     SELECT MAX(NumTstTakr)     FROM satscores     WHERE satscores.NumGE1500 >= 1500 ) AND satscores.NumGE1500 >= 1500 GROUP BY s.City; 
SELECT      s.School,      AVG(satscores.AvgScrWrite) AS AvgWritingScore FROM      satscores JOIN      schools ON satscores.cds = schools.CDSCode JOIN      frpm ON schools.CDSCode = frpm.CDSCode JOIN      (SELECT           AdmLName1       FROM           schools       WHERE           AdmLName1 = 'Ulrich') AS admin ON      schools.CDSCode = admin.CDSCode GROUP BY      s.School; 
SELECT      s.CDSCode,      s.School,      frpm.`Enrollment (K-12)` FROM      frpm JOIN      schools s ON frpm.CDSCode = s.CDSCode WHERE      s.DOC = '31' AND     frpm.`Enrollment (K-12)` = (SELECT MAX(`Enrollment (K-12)`) FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE s.DOC = '31') 
SELECT COUNT(*) / 12 AS MonthlyAverageOpenings FROM schools WHERE County = 'Alameda' AND District = 'Elementary School District' AND DOC = '52' AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31'; 
SELECT      (SELECT COUNT(*) FROM frpm WHERE `District Type` = 'Unified School District' AND County = 'Orange') /      (SELECT COUNT(*) FROM frpm WHERE `District Type` = 'Elementary School District' AND County = 'Orange') AS Ratio 
SELECT      County,      COUNT(*) AS ClosedSchoolsCount,      GROUP_CONCAT(School ORDER BY School ASC SEPARATOR ', ') AS Schools,      GROUP_CONCAT(ClosedDate ORDER BY School ASC SEPARATOR ', ') AS ClosureDates FROM      schools WHERE      StatusType = 'Closed' GROUP BY      County ORDER BY      ClosedSchoolsCount DESC LIMIT 1; 
SELECT s.Street AS PostalStreet, s.School AS SchoolName FROM schools s JOIN (     SELECT s.CDSCode, s.Street, s.School, AVG(satscores.AvgScrMath) AS AvgMath     FROM schools s     JOIN satscores ON s.CDSCode = satscores.cds     GROUP BY s.CDSCode, s.Street, s.School     ORDER BY AvgMath DESC ) AS subquery ON s.CDSCode = subquery.CDSCode WHERE subquery.AvgMath = (     SELECT AVG(satscores.AvgScrMath)     FROM schools s     JOIN satscores ON s.CDSCode = satscores.cds     GROUP BY s.CDSCode, s.Street, s.School     ORDER BY AVG(satscores.AvgScrMath) DESC     LIMIT 5, 1 ); 
SELECT s.Street, s.City, s.State, s.Zip, s.MailingStreet, s.MailingCity, s.MailingState, s.MailingZip, frpm.SchoolName FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE frpm.AvgScrRead = (SELECT MIN(AvgScrRead) FROM frpm); 
SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Lakeport' AND (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) >= 1500; 
SELECT SUM(satscores.NumTstTakr) AS TotalTestTakers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.MailCity = 'Fresno'; 
SELECT s.School, s.MailZip FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.AdmFName1 = 'Avetik' AND s.AdmLName1 = 'Atoian'; 
SELECT      (SELECT COUNT(*) FROM schools WHERE County = 'Colusa' AND MailState = 'California') /      (SELECT COUNT(*) FROM schools WHERE County = 'Humboldt' AND MailState = 'California') AS Ratio; 
SELECT COUNT(*) FROM schools WHERE MailState = 'CA' AND District = 'San Joaquin' AND StatusType = 'Active'; 
SELECT s.Phone, s.Ext FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrWrite IS NOT NULL ORDER BY sc.AvgScrWrite DESC LIMIT 1 OFFSET 332; 
SELECT School, Phone, Ext FROM schools WHERE Zip = '95203-3704'; 
SELECT s.Website FROM schools s JOIN (     SELECT CDSCode     FROM schools     WHERE (AdmFName1 = 'Mike Larson' OR AdmLName1 = 'Larson' OR AdmFName2 = 'Mike Larson' OR AdmLName2 = 'Larson' OR AdmFName3 = 'Mike Larson' OR AdmLName3 = 'Larson')     AND (AdmFName1 = 'Dante Alvarez' OR AdmLName1 = 'Alvarez' OR AdmFName2 = 'Dante Alvarez' OR AdmLName2 = 'Alvarez' OR AdmFName3 = 'Dante Alvarez' OR AdmLName3 = 'Alvarez') ) as admins ON s.CDSCode = admins.CDSCode; 
SELECT Website FROM schools WHERE Charter = 1 AND Virtual = 'P' AND County = 'San Joaquin'; 
SELECT COUNT(*) FROM schools WHERE Charter = 1   AND DOC = '52'   AND City = 'Hickman'; 
SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Charter School (Y/N)` = 0 AND `Percent (%) Eligible Free (K-12)` < 0.18; 
SELECT s.School, s.City, a.AdmFName1, a.AdmLName1, a.AdmFName2, a.AdmLName2, a.AdmFName3, a.AdmLName3 FROM schools s JOIN schools a ON s.CDSCode = a.CDSCode WHERE s.Charter = 1 AND s.CharterNum = '00D2'; 
SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4'; 
SELECT      (COUNT(CASE WHEN frpm.CharterFundingType = 'Locally funded' THEN 1 END) * 100.0) /      COUNT(*) AS PercentageLocallyFunded FROM      frpm WHERE      frpm.CountyName = 'Santa Clara' 
SELECT COUNT(*) FROM schools WHERE FundingType = 'Directly Funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus'; 
SELECT SUM(CASE WHEN StatusType = 'Closed' AND County = 'San Francisco' AND OpenDate < '1989-01-01' THEN 1 ELSE 0 END) AS TotalClosedCCDs FROM schools WHERE StatusType = 'Community College District'; 
SELECT County, COUNT(*) AS ClosureCount FROM schools WHERE SOC = '11' AND (OpenDate BETWEEN '1980-01-01' AND '1989-12-31') GROUP BY County ORDER BY ClosureCount DESC LIMIT 1; 
SELECT NCESSchool FROM schools WHERE SOC = '31'; 
SELECT      COUNT(*) AS TotalActiveAndClosedDistrictCommunityDaySchools FROM      frpm WHERE      `School Type` = 'District Community Day Schools'     AND (StatusType = 'Active' OR StatusType = 'Closed')     AND County = 'Alpine'; 
SELECT District FROM schools WHERE City = 'Fresno' AND Magnet = 0; 
SELECT      SUM(`Enrollment (Ages 5-17)`) AS TotalEnrollment FROM      frpm WHERE      `Academic Year` = '2014-2015'      AND `School Name` = 'State Special School'      AND `District Code` = '10017'; 
SELECT `Free Meal Count (Ages 5-17)` FROM frpm WHERE `School Name` = 'Youth Authority School' AND `MailStreet` = 'PO Box 1040'; 
SELECT `Low Grade` FROM frpm WHERE `EdOpsCode` = 'SPECON' AND `NCESSchool` = '613360' ORDER BY `Low Grade` ASC LIMIT 1; 
SELECT `School Name`, `Educational Option Type` FROM frpm WHERE `Educational Option Type` = 'Breakfast Provision 2' AND `County Code` = '37'; 
SELECT s.City FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Educational Option Type` = 'Lunch Provision 2' AND f.`Low Grade` = '9' AND f.`High Grade` = '12' AND f.County Name = 'Merced' AND f.`School Type` = 'High Schools (Public)' AND f.EILCode = 'HS'; 
SELECT      frpm.SchoolName,      frpm.`Percent (%) Eligible FRPM (Ages 5-17)` FROM      frpm JOIN      schools ON frpm.CDSCode = schools.CDSCode WHERE      frpm.`Low Grade` = 'K' AND frpm.`High Grade` = '9' AND      schools.County = 'Los Angeles'; 
SELECT `Grade Span Served` AS GradeSpan, COUNT(*) AS Count FROM frpm WHERE `City` = 'Adelanto' GROUP BY `Grade Span Served` ORDER BY Count DESC LIMIT 1; 
SELECT      County,      COUNT(*) AS NumberOfSchools FROM      schools WHERE      County IN ('San Diego', 'Santa Barbara') AND      Virtual = 'F' GROUP BY      County ORDER BY      NumberOfSchools DESC LIMIT 1; 
SELECT s.School, s.Latitude FROM schools s ORDER BY s.Latitude DESC LIMIT 1; 
SELECT      City,      School,      `Low Grade` FROM      schools WHERE      State = 'CA' ORDER BY      Latitude ASC LIMIT 1; 
SELECT MAX(`High Grade`) - MIN(`Low Grade`) AS GradeSpan FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.Longitude = (SELECT MAX(Longitude) FROM schools); 
SELECT      frpm.City,     COUNT(DISTINCT frpm.School Code) AS NumberOfSchools FROM      frpm JOIN      schools ON frpm.CDSCode = schools.CDSCode WHERE      frpm.GSoffered LIKE '%K-8%'     AND schools.Magnet = 1 GROUP BY      frpm.City; 
SELECT      AdmFName1,      COUNT(AdmFName1) AS NameCount,      District,      RANK() OVER (PARTITION BY District ORDER BY COUNT(AdmFName1) DESC) AS RankInDistrict FROM      schools WHERE      AdmFName1 IS NOT NULL GROUP BY      AdmFName1, District ORDER BY      District, RankInDistrict, NameCount DESC LIMIT 2; 
SELECT      frpm.`Percent (%) Eligible Free (K-12)`,      frpm.`District Code` FROM      frpm JOIN      schools ON frpm.CDSCode = schools.CDSCode JOIN      (SELECT           CDSCode       FROM           schools       WHERE           AdmFName1 = 'Alusine') AS adm ON frpm.CDSCode = adm.CDSCode; 
SELECT      s.District,      s.County,      s.School,      a.AdmLName1 FROM      schools s JOIN      frpm f ON s.CDSCode = f.CDSCode JOIN      schools a ON f.CDSCode = a.CDSCode WHERE      f.CharterSchoolNumber = '40' 
SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND (OpenDate BETWEEN '2009-01-01' AND '2010-12-31') AND (DOC = '54' OR SOC = '62') AND StatusType = 'Public'; 
SELECT s.AdmEmail1, s.AdmEmail2, s.AdmEmail3, sname FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumGE1500 = (     SELECT MAX(sc2.NumGE1500)     FROM satscores sc2     WHERE sc2.NumGE1500 IS NOT NULL ) AND sc.NumTstTakr = (     SELECT MAX(sc3.NumTstTakr)     FROM satscores sc3     WHERE sc3.NumTstTakr IS NOT NULL ); 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN trans t ON a.account_id = t.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'East Bohemia' AND t.type = 'POPLATEK PO OBRATU'; 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'Praha' AND EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = a.account_id ); 
SELECT      CASE          WHEN AVG(CASE WHEN district.A12 IS NOT NULL THEN district.A12 ELSE 0 END) > AVG(CASE WHEN district.A13 IS NOT NULL THEN district.A13 ELSE 0 END) THEN '1995'         ELSE '1996'     END AS year_with_higher_unemployment FROM district WHERE district.A12 IS NOT NULL OR district.A13 IS NOT NULL; 
SELECT COUNT(district_id) AS num_districts FROM district WHERE A11 > 6000 AND A11 < 10000 AND A6 = 'F'; 
SELECT COUNT(DISTINCT c.client_id)  FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M'  AND d.A3 = 'North Bohemia'  AND d.A11 > 8000; 
SELECT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC LIMIT 1;  SELECT MAX(A11) - MIN(A11) AS salary_gap FROM district; 
SELECT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON a.district_id = d.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client) AND d.A11 = (SELECT MAX(A11) FROM district) GROUP BY a.account_id; 
SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND c.gender = 'Owner'; 
SELECT DISTINCT c.client_id, c.gender, c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'POPLATEK PO OBRATU'; 
SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.date BETWEEN '1997-01-01' AND '1997-12-31' AND a.frequency = 'POPLATEK TYDNE' ORDER BY l.amount ASC LIMIT 1; 
SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date LIKE '1993%' ORDER BY l.amount DESC LIMIT 1; 
SELECT COUNT(DISTINCT c.client_id)  FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F'  AND c.birth_date < '1950-01-01'  AND d.A2 = 'Slokolov'; 
SELECT account_id FROM account WHERE date LIKE '1995%' ORDER BY date ASC LIMIT 1; 
SELECT DISTINCT a.account_id FROM account a JOIN trans t ON a.account_id = t.account_id WHERE a.date < '1997-01-01' AND t.amount > 3000; 
SELECT client_id FROM card WHERE issued = '1994-03-03'; 
SELECT a.date FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.amount = 840 AND t.date = '1998-10-14' 
SELECT a.district_id FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.date = '1994-08-25'; 
SELECT MAX(t.amount) AS max_transaction_amount FROM trans t JOIN card c ON t.account_id = c.card_id JOIN client cl ON c.client_id = cl.client_id WHERE c.issued = '1996-10-21'; 
SELECT c.gender FROM client c JOIN district d ON c.district_id = d.district_id JOIN account a ON c.district_id = a.district_id WHERE d.A11 = (SELECT MAX(A11) FROM district) AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE district_id = d.district_id); 
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN (     SELECT account_id     FROM loan     ORDER BY amount DESC     LIMIT 1 ) AS largest_loan ON a.account_id = largest_loan.account_id WHERE t.date = (     SELECT MIN(trans.date)     FROM trans     WHERE trans.account_id = largest_loan.account_id ) 
SELECT COUNT(DISTINCT c.client_id)  FROM client c JOIN account a ON c.district_id = a.district_id JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'Jesenik' AND c.gender = 'F'; 
SELECT d.disp_id FROM disp d JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE t.date = '1998-09-02' AND t.amount = 5100 JOIN client c ON d.client_id = c.client_id; 
SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND YEAR(account.date) = 1996; 
SELECT d.A2 FROM client c JOIN account a ON c.account_id = a.account_id JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29'; 
SELECT c.birth_date FROM client c JOIN loan l ON c.client_id = l.account_id WHERE l.amount = 98832 AND l.date = '1996-01-03'; 
SELECT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'Praha' ORDER BY a.date ASC LIMIT 1; 
SELECT      (SELECT COUNT(client_id)       FROM client       WHERE gender = 'M' AND district_id IN       (SELECT district_id        FROM district        WHERE A3 = 'South Bohemia')) /      (SELECT COUNT(client_id)       FROM client       WHERE district_id IN       (SELECT district_id        FROM district        WHERE A3 = 'South Bohemia')) * 100 AS male_client_percentage FROM district WHERE A3 = 'South Bohemia' ORDER BY A8 DESC LIMIT 1; 
SELECT      (MAX(t.balance) - MIN(t.balance)) / MIN(t.balance) * 100 AS increase_rate FROM      trans t JOIN      account a ON t.account_id = a.account_id WHERE      a.date BETWEEN '1993-03-22' AND '1998-12-27'     AND t.date = (SELECT MIN(t2.date) FROM trans t2 JOIN account a2 ON t2.account_id = a2.account_id WHERE a2.date = '1993-07-05' AND t2.account_id = a.account_id) 
SELECT      (SUM(CASE WHEN l.status = 'A' THEN l.amount ELSE 0 END) / SUM(l.amount)) * 100 AS percentage_paid FROM      loan l; 
SELECT      (COUNT(CASE WHEN l.status = 'C' THEN 1 END) * 100.0) / COUNT(*) AS running_no_issue_percentage FROM      loan l WHERE      l.amount < 100000; 
SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.date BETWEEN '1993-01-01' AND '1993-12-31' AND a.frequency = 'POPLATEK PO OBRATU' ORDER BY a.account_id; 
SELECT a.account_id, COUNT(a.account_id) AS frequency FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district dt ON c.district_id = dt.district_id WHERE dt.A2 = 'East Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31' GROUP BY a.account_id; 
SELECT a.account_id, a.date FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Prachatice'; 
SELECT d.A2 AS district, d.A3 AS region FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.loan_id = 4990; 
SELECT a.account_id, d.A2 AS district, d.A3 AS region FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount > 300000; 
SELECT l.loan_id, d.A3, d.A11 FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.duration = 60; 
SELECT d.A2 AS district,         ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment FROM district d JOIN loan l ON d.district_id = l.account_id WHERE l.status = 'D' AND d.A12 IS NOT NULL AND d.A13 IS NOT NULL AND d.A12 < d.A13 AND d.A12 > 0 AND d.A13 > 0 AND l.date BETWEEN '1995-01-01' AND '1996-12-31'; 
SELECT      (COUNT(*) FILTER (WHERE d.A2 = 'Decin' AND a.date LIKE '1993%'))::REAL / COUNT(*) * 100 AS percentage FROM      account a JOIN      district d ON a.district_id = d.district_id; 
SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'; 
SELECT d.A2 AS district, COUNT(c.client_id) AS female_account_holders FROM district d JOIN client c ON d.district_id = c.district_id WHERE c.gender = 'F' GROUP BY d.A2 ORDER BY female_account_holders DESC LIMIT 10; 
SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals FROM district d JOIN trans t ON d.district_id = t.account_id WHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%' AND t.operation IS NULL GROUP BY d.A2 ORDER BY total_withdrawals DESC LIMIT 10; 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id LEFT JOIN card c ON a.account_id = c.account_id WHERE d.A3 = 'South Bohemia' AND c.card_id IS NULL; 
SELECT d.A3 AS district_name, COUNT(l.loan_id) AS active_loan_count FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status IN ('C', 'D') GROUP BY d.A3 ORDER BY active_loan_count DESC LIMIT 1; 
SELECT AVG(amount) AS average_loan_amount FROM loan JOIN client ON loan.account_id IN (SELECT account_id FROM disp JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M') 
SELECT d.A2 AS branch_location, d.A6 AS district_name, d.A13 AS unemployment_rate FROM district d WHERE d.A13 IS NOT NULL AND YEAR(d.A13) = 1996 ORDER BY d.A13 DESC LIMIT 10; 
SELECT COUNT(a.account_id) AS num_accounts_opened FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A16 = (SELECT MAX(A16) FROM district WHERE A4 = '1996'); 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN trans t ON a.account_id = t.account_id WHERE a.frequency = 'POPLATEK MESICNE' AND t.operation = 'VYBER KARTOU' AND t.balance < 0; 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN loan l ON a.account_id = l.account_id WHERE a.frequency = 'POPLATEK MESICNE' AND l.amount >= 250000 AND l.date BETWEEN '1995-01-01' AND '1997-12-31' AND l.status = 'APPROVED'; 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN loan l ON a.account_id = l.account_id JOIN disp d ON a.account_id = d.account_id JOIN district dt ON d.district_id = dt.district_id WHERE dt.A2 = '1' AND l.status IN ('C', 'D'); 
SELECT COUNT(c.client_id) AS male_clients_count FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A15 = (     SELECT A15     FROM district     WHERE A15 = (         SELECT MAX(A15)         FROM district         WHERE A15 < (SELECT MAX(A15) FROM district)     )     AND A15 IS NOT NULL ); 
SELECT COUNT(*) FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'GOLD' AND disp.type = 'DISPONENT'; 
SELECT COUNT(a.account_id)  FROM account a  JOIN district d ON a.district_id = d.district_id  WHERE d.A2 = 'Pisek'; 
SELECT d.A2 FROM district d JOIN account a ON d.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.date BETWEEN '1997-01-01' AND '1997-12-31' GROUP BY d.A2 HAVING SUM(t.amount) > 10000; 
SELECT DISTINCT a.account_id FROM account a JOIN `order` o ON a.account_id = o.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Pisek' AND o.k_symbol = 'SIPO'; 
SELECT DISTINCT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id WHERE d.type = 'GOLD' AND EXISTS (     SELECT 1     FROM disp d2     WHERE d2.account_id = a.account_id     AND d2.type = 'JUNIOR' ); 
SELECT AVG(amount) AS average_credit_card_withdrawn FROM trans WHERE type = 'VYBER KARTOU' AND date >= '2021-01-01' AND date < '2022-01-01'; 
SELECT a.account_id FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.date BETWEEN '1998-01-01' AND '1998-12-31' AND t.type = 'VYBER KARTOU' GROUP BY a.account_id HAVING SUM(t.amount) < (SELECT AVG(t2.amount) FROM trans t2 WHERE t2.date BETWEEN '1998-01-01' AND '1998-12-31' AND t2.type = 'VYBER KARTOU') 
SELECT DISTINCT c.client_id, c.gender, a.account_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN card cr ON a.account_id = cr.account_id JOIN loan l ON a.account_id = l.account_id WHERE c.gender = 'F' AND cr.type = 'CREDIT'; 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' AND d.A3 LIKE '%South Bohemia%'; 
SELECT a.account_id FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Tabor' AND a.frequency = 'POPLATEK MESICNE' AND a.type = 'OWNER'; 
SELECT a.account_id, a.frequency FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A11 BETWEEN 8000 AND 9000 AND a.frequency != 'POPLATEK MESICNE'; 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE d.A3 = 'North Bohemia' AND t.bank = 'AB'; 
SELECT d.A2 AS district_name FROM district d JOIN account a ON d.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ'; 
SELECT AVG(A15) AS average_crimes FROM district WHERE A15 > 4000 AND EXISTS (     SELECT 1     FROM account     WHERE account.district_id = district.district_id     AND YEAR(account.date) >= 1997 ); 
SELECT COUNT(*) FROM account JOIN disp ON account.account_id = disp.account_id JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'classic' AND disp.type = 'OWNER'; 
SELECT COUNT(client_id)  FROM client  JOIN district ON client.district_id = district.district_id  WHERE district.A2 = 'Hl.m. Praha' AND client.gender = 'M'; 
SELECT      (COUNT(CASE WHEN c.type = 'Gold' AND c.issued < '1998-01-01' THEN 1 END) * 100.0) / COUNT(c.card_id) AS gold_card_percentage FROM      card c; 
SELECT c.client_id, c.gender, c.birth_date FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan); 
SELECT SUM(A15) AS total_crimes_1995 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532); 
SELECT a.district_id FROM account a JOIN `order` o ON a.account_id = o.account_id WHERE o.order_id = 33333; 
SELECT t.account_id, t.date, t.amount FROM trans t JOIN client c ON t.account_id IN (SELECT account_id FROM disp WHERE client_id = 3356) WHERE t.operation = 'VYBER'; 
SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK TYDNE' AND EXISTS (     SELECT 1     FROM loan     WHERE loan.account_id = account.account_id     AND loan.amount < 200000 ); 
SELECT card.type FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 13539; 
SELECT d.A3 FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.client_id = 3541; 
SELECT d.district_id, COUNT(a.account_id) AS account_count FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id ORDER BY account_count DESC LIMIT 1; 
SELECT c.client_id FROM `order` o JOIN account a ON o.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE o.order_id = 32423; 
SELECT t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE d.district_id = 5; 
SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik'; 
SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.date >= '1997-01-01' AND d.type = 'junior'; 
SELECT      (COUNT(CASE WHEN c.gender = 'F' THEN 1 END) * 100.0) / COUNT(c.client_id) AS percentage_female FROM      client c JOIN      district d ON c.district_id = d.district_id WHERE      d.A11 > 10000; 
SELECT      (SUM(CASE WHEN YEAR(date) = 1997 THEN amount ELSE 0 END) -       SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END)) /       SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END) * 100 AS growth_rate FROM      loan JOIN      client ON loan.account_id IN (SELECT account_id FROM account JOIN client ON account.district_id = client.district_id WHERE client.gender = 'M') WHERE      YEAR(date) BETWEEN 1996 AND 1997; 
SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01'; 
SELECT      (SUM(CASE WHEN A3 = 'North Bohemia' AND A16 IS NOT NULL THEN A16 ELSE 0 END) -      SUM(CASE WHEN A3 = 'East Bohemia' AND A16 IS NOT NULL THEN A16 ELSE 0 END)) AS crime_difference FROM      district WHERE      A3 IN ('North Bohemia', 'East Bohemia') AND      A16 IS NOT NULL AND      EXTRACT(YEAR FROM date) = 1996; 
SELECT COUNT(DISTINCT d.client_id) AS owner_count,         COUNT(DISTINCT d.account_id) AS disponent_count FROM disp d WHERE d.account_id BETWEEN 1 AND 10; 
SELECT      COUNT(*) AS statement_requests,     SUM(CASE WHEN operation = 'Debit' AND k_symbol = 'Debiting for total amount' THEN amount ELSE 0 END) AS total_debit_amount FROM      account JOIN      trans ON account.account_id = trans.account_id WHERE      account.account_id = 3     AND trans.type = 'STATEMENT'; 
SELECT client.birth_date FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE account.account_id = 130 AND YEAR(client.birth_date) AS birth_year; 
SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN disp d ON a.account_id = d.account_id WHERE a.frequency = 'POPLATEK PO OBRATU' AND d.type = 'OWNER'; 
SELECT      SUM(CASE WHEN l.status = 'OUTSTANDING' THEN l.amount ELSE 0 END) AS total_debt,     SUM(CASE WHEN l.status = 'PAID' THEN l.amount ELSE 0 END) AS total_paid FROM      loan l JOIN      disp d ON l.account_id = d.account_id JOIN      client c ON d.client_id = c.client_id WHERE      c.client_id = 992; 
SELECT      SUM(t.amount) AS total_sum,     c.gender FROM      trans t JOIN      account a ON t.account_id = a.account_id JOIN      client c ON a.account_id = c.client_id WHERE      t.account_id = (         SELECT              account_id          FROM              disp          WHERE              client_id = (                 SELECT                      client_id                  FROM                      client                  WHERE                      client_id = 4             )     )     AND t.trans_id = 851 GROUP BY      c.gender; 
SELECT card.type FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 9; 
SELECT SUM(trans.amount) AS total_payment FROM trans JOIN account ON trans.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.client_id = 617 AND trans.date BETWEEN '1998-01-01' AND '1998-12-31'; 
SELECT c.client_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.A2 = 'East Bohemia'; 
SELECT c.client_id FROM client c JOIN loan l ON c.client_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3; 
SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN trans t ON a.account_id = t.account_id WHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND t.type = 'SIPO' AND t.amount > 4000; 
SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Beroun' AND account.date > '1996-12-31'; 
SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN card cr ON d.account_id = cr.account_id WHERE c.gender = 'F' AND cr.type = 'JUNIOR'; 
SELECT      (COUNT(CASE WHEN c.gender = 'F' THEN 1 END) * 100.0) / COUNT(c.client_id) AS female_percentage FROM      client c JOIN      account a ON c.account_id = a.account_id JOIN      district d ON c.district_id = d.district_id WHERE      d.A3 = 'Prague'; 
SELECT      (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0) / COUNT(CASE WHEN c.gender = 'M' THEN 1 END +      COUNT(CASE WHEN c.gender = 'F' THEN 1 END)) AS male_clients_percentage FROM      client c JOIN      account a ON c.district_id = a.district_id WHERE      a.frequency = 'POPLATEK TYDNE'; 
SELECT COUNT(DISTINCT c.client_id)  FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE'; 
SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' ORDER BY l.amount ASC LIMIT 1; 
SELECT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'F' AND c.birth_date = (     SELECT MIN(birth_date)     FROM client     WHERE gender = 'F' ) AND c.A11 = (     SELECT MIN(A11)     FROM client     WHERE gender = 'F' ); 
SELECT COUNT(c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date BETWEEN '1920-01-01' AND '1920-12-31' AND d.A3 = 'East Bohemia'; 
SELECT COUNT(*) FROM loan WHERE duration = 24 AND status = 'pre-payment' AND       (SELECT frequency FROM account WHERE account.account_id = loan.account_id) = 'POPLATEK TYDNE'; 
SELECT      t.date AS transaction_date,     AVG(l.amount) AS average_loan_amount FROM      trans t JOIN      loan l ON t.account_id = l.account_id WHERE      l.status IN ('C', 'D') AND     t.k_symbol = 'POPLATEK PO OBRATU' GROUP BY      t.date; 
SELECT c.client_id, d.A2 FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.type = 'OWNER'; 
SELECT c.client_id, TIMESTAMPDIFF(YEAR, c.birth_date, CURDATE()) AS age FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card crd ON d.disp_id = crd.disp_id WHERE crd.type = 'gold' AND EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = d.account_id ); 
SELECT bond_type, COUNT(bond_type) AS bond_count FROM bond GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1; 
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' AND a.element = 'cl'; 
SELECT AVG(CASE WHEN a.element = 'o' THEN 1 ELSE 0 END) AS avg_oxygen_atoms FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-' GROUP BY a.molecule_id; 
SELECT AVG(CASE WHEN m.label = '+' THEN COUNT(c.bond_id) ELSE 0 END) /         COUNT(DISTINCT a.atom_id) AS average_single_bonded_carcinogens FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN molecule m ON a.molecule_id = m.molecule_id WHERE c.bond_type = '-' AND m.label = '+'; 
SELECT COUNT(*) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'na' AND molecule.label = '-'; 
SELECT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+'; 
SELECT      (SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) * 100.0) / COUNT(a.atom_id) AS percentage_of_carbon FROM      atom a JOIN      connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN      bond b ON c.bond_id = b.bond_id WHERE      b.bond_type = ' = ' AND a.element = 'c'; 
SELECT COUNT(*) FROM bond WHERE bond_type = '#'; 
SELECT COUNT(*) FROM atom WHERE element != 'br'; 
SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'; 
SELECT DISTINCT a.molecule_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'si'; 
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR004_8_9'; 
SELECT DISTINCT a1.element AS element1, a2.element AS element2 FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = ' = ' AND a1.element != a2.element; 
SELECT m.label, COUNT(a.atom_id) AS count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' GROUP BY m.label ORDER BY count DESC LIMIT 1; 
SELECT bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom AS a1 ON connected.atom_id = a1.atom_id JOIN atom AS a2 ON connected.atom_id2 = a2.atom_id WHERE a1.element = 'te' AND a2.element = 'te'; 
SELECT DISTINCT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN bond b ON c1.bond_id = b.bond_id JOIN atom a2 ON c1.atom_id2 = a2.atom_id WHERE b.bond_type = '-'; 
SELECT DISTINCT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON a1.atom_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '-'; 
SELECT element, COUNT(*) as count FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label <> '-' ) GROUP BY element ORDER BY count ASC LIMIT 1; 
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE (connected.atom_id = 'TR004_8' AND connected.atom_id2 = 'TR004_20') OR       (connected.atom_id = 'TR004_20' AND connected.atom_id2 = 'TR004_8'); 
SELECT DISTINCT m.label FROM molecule m WHERE m.molecule_id NOT IN (     SELECT a.molecule_id     FROM atom a     WHERE a.element <> 'sn' ) AND m.label IN ('+', '-'); 
SELECT COUNT(*) FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE a.element IN ('i', 's') AND b.bond_type = '-'; 
SELECT DISTINCT a1.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN bond b ON c1.bond_id = b.bond_id WHERE b.bond_type = '#' UNION SELECT DISTINCT a2.atom_id FROM atom a2 JOIN connected c2 ON a2.atom_id = c2.atom_id2 JOIN bond b ON c2.bond_id = b.bond_id WHERE b.bond_type = '#'; 
SELECT DISTINCT a1.atom_id FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id OR a1.atom_id = c.atom_id2 JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR181'; 
SELECT      (SUM(CASE WHEN a.element = 'f' THEN 1 ELSE 0 END) / COUNT(DISTINCT m.molecule_id)) * 100 AS percent FROM      atom a JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      m.label = '+' AND a.element != 'f' 
SELECT      (SUM(CASE WHEN b.bond_type = '#' THEN 1 ELSE 0 END) * 100.0) / COUNT(b.bond_id) AS percent FROM      bond b JOIN      molecule m ON b.molecule_id = m.molecule_id WHERE      m.label = '+' 
SELECT element, COUNT(*) as count FROM atom WHERE molecule_id = 'TR000' GROUP BY element ORDER BY count DESC, element ASC LIMIT 3; 
SELECT a1.atom_id AS Atom1, a2.atom_id AS Atom2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_2_6' AND b.molecule_id = 'TR001'; 
SELECT (SELECT COUNT(*) FROM molecule WHERE label = '+') - (SELECT COUNT(*) FROM molecule WHERE label = '-') AS difference; 
SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR_000_2_5'; 
SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2'; 
SELECT m.molecule_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5; 
SELECT      (SUM(CASE WHEN bond.bond_type = ' = ' THEN 1 ELSE 0 END) * 100.0) / COUNT(bond.bond_id) AS percent FROM      bond WHERE      bond.molecule_id = 'TR008'; 
SELECT      (SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0) / COUNT(m.molecule_id) AS percent FROM      molecule m; 
SELECT      (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) * 100) / COUNT(a.atom_id) AS percent FROM      atom a WHERE      a.molecule_id = 'TR206' 
SELECT bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id OR connected.atom_id2 = atom.atom_id WHERE atom.molecule_id = 'TR000'; 
SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR060' AND m.label IN ('+', '-'); 
SELECT      bond.bond_type,      CASE          WHEN COUNT(bond.bond_type) = (SELECT MAX(bond_count) FROM                                       (SELECT COUNT(bond_type) AS bond_count                                        FROM bond                                        JOIN connected ON bond.bond_id = connected.bond_id                                        JOIN molecule ON bond.molecule_id = molecule.molecule_id                                        WHERE molecule.molecule_id = 'TR018') AS subquery) THEN 'Majority'         ELSE 'Not Majority'     END AS is_majority,     molecule.label AS carcinogenicity FROM      bond JOIN      connected ON bond.bond_id = connected.bond_id JOIN      molecule ON bond.molecule_id = molecule.molecule_id WHERE      molecule.molecule_id = 'TR018' GROUP BY      bond.bond_type, molecule.label ORDER BY      COUNT(bond.bond_type) DESC, bond.bond_type; 
SELECT m.molecule_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = '-' AND m.label = '-' GROUP BY m.molecule_id ORDER BY m.label ASC LIMIT 3; 
SELECT bond.bond_id, bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR006' ORDER BY bond.bond_type ASC LIMIT 2; 
SELECT COUNT(*) FROM connected WHERE bond_id LIKE 'TR009_%' AND (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'); 
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'br'; 
SELECT b.bond_type, a1.atom_id AS atom1, a2.atom_id AS atom2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_6_9'; 
SELECT m.molecule_id, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10'; 
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#'; 
SELECT COUNT(DISTINCT bond_id)  FROM connected  WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'; 
SELECT DISTINCT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR004'; 
SELECT COUNT(*) FROM molecule WHERE label = '-'; 
SELECT DISTINCT m.molecule_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE SUBSTRING(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+'; 
SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n'; 
SELECT m.molecule_id, COUNT(b.bond_type) AS double_bond_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = ' GROUP BY m.molecule_id HAVING m.label = '+' ORDER BY double_bond_count DESC LIMIT 1; 
SELECT AVG(COUNT(b.bond_id) / COUNT(a.atom_id)) AS average_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'i'; 
SELECT bond.bond_id, bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR000_45' OR atom.atom_id = 'TR000_45'; 
SELECT a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND c.atom_id IS NULL; 
SELECT a1.atom_id AS atom1, a2.atom_id AS atom2 FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN bond b ON c1.bond_id = b.bond_id JOIN atom a2 ON a2.atom_id = c1.atom_id2 WHERE b.molecule_id = 'TR447' AND b.bond_type = '#'; 
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR144_8_19'; 
SELECT m.molecule_id, COUNT(b.bond_type) AS double_bond_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = ' = ' GROUP BY m.molecule_id ORDER BY double_bond_count DESC LIMIT 1; 
SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY element ORDER BY count LIMIT 1; 
SELECT DISTINCT c.atom_id2 FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'pb'; 
SELECT DISTINCT a1.element FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN connected c3 ON c2.atom_id2 = c3.atom_id JOIN bond b ON c3.bond_id = b.bond_id WHERE b.bond_type = '#' AND a1.element IN ('c', 'n', 'o', 's', 'p', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca'); 
SELECT      (COUNT(bond_id) * 100) /      (SELECT COUNT(DISTINCT atom_id)       FROM atom       WHERE element = (SELECT element                        FROM atom                        GROUP BY element                        ORDER BY COUNT(*) DESC                        LIMIT 1)) AS percentage_of_common_bonds; 
SELECT      (SUM(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) * 1.0) /      COUNT(b.bond_id) AS proportion_of_carcinogenic_single_bonds FROM      bond b JOIN      molecule m ON b.molecule_id = m.molecule_id WHERE      m.label = '+' 
SELECT COUNT(*) FROM atom WHERE element IN ('c', 'h'); 
SELECT DISTINCT c.atom_id2 FROM connected c JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 's'; 
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'sn' OR a2.element = 'sn'; 
SELECT COUNT(DISTINCT a.element) AS element_count FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '-'; 
SELECT COUNT(DISTINCT a.atom_id) AS total_triple_bond_atoms FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br'); 
SELECT b.bond_id FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '+'; 
SELECT DISTINCT a.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '-' AND a.molecule_id NOT IN (     SELECT m.molecule_id     FROM molecule m     WHERE m.label = '-' ); 
SELECT      (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0) / COUNT(a.atom_id) AS percent_cl FROM      atom a JOIN      connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN      bond b ON c.bond_id = b.bond_id WHERE      b.bond_type = '-' AND a.element = 'cl'; 
SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002'); 
SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-'; 
SELECT COUNT(DISTINCT m.molecule_id) AS total_carcinogenic_molecules FROM molecule m WHERE m.molecule_id BETWEEN 'TR000' AND 'TR030' AND m.label = '+'; 
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.molecule_id BETWEEN 'TR000' AND 'TR050'; 
SELECT a1.element AS Element1, a2.element AS Element2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11'; 
SELECT COUNT(DISTINCT bond.bond_id) FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom AS atom1 ON connected.atom_id = atom1.atom_id JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id WHERE atom1.element = 'i' OR atom2.element = 'i'; 
SELECT      m.molecule_id,      CASE          WHEN MAX(CASE WHEN a.element = 'ca' THEN b.label ELSE NULL END) = '+' THEN 'Carcinogenic'         ELSE 'Non-Carcinogenic'     END AS carcinogenicity FROM      molecule m JOIN      atom a ON m.molecule_id = a.molecule_id JOIN      bond b ON a.molecule_id = b.molecule_id GROUP BY      m.molecule_id; 
SELECT EXISTS (   SELECT 1   FROM atom a1   JOIN connected c ON a1.atom_id = c.atom_id   JOIN bond b ON c.bond_id = b.bond_id   WHERE b.bond_id = 'TR001_1_8'     AND a1.element = 'cl' ) AND EXISTS (   SELECT 1   FROM atom a2   JOIN connected c ON a2.atom_id = c.atom_id2   JOIN bond b ON c.bond_id = b.bond_id   WHERE b.bond_id = 'TR001_1_8'     AND a2.element = 'c' ); 
SELECT DISTINCT a.molecule_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND b.bond_type = '#' AND m.label = '-' AND a.molecule_id IN (     SELECT a.molecule_id     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2     JOIN bond b ON c.bond_id = b.bond_id     JOIN molecule m ON a.molecule_id = m.molecule_id     WHERE a.element = 'c'     AND b.bond_type = '#'     GROUP BY a.molecule_id     HAVING COUNT(DISTINCT b.bond_type) = 3 ) LIMIT 2; 
SELECT      (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT m.molecule_id) AS percentage FROM      atom a JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      m.label = '+' 
SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001' AND a.element IS NOT NULL; 
SELECT DISTINCT c.molecule_id FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = ' = '; 
SELECT DISTINCT c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#' AND c.atom_id < c.atom_id2; 
SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id = 'TR005_16_26'; 
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '-' AND b.bond_type = '-'; 
SELECT m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_10_11'; 
SELECT b.bond_id, m.label AS carcinogenicity FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#' AND m.label = '+'; 
SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+'  AND a.atom_id = SUBSTR(a.molecule_id, 7, 1) = '4' AND a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca'); 
SELECT      m.label,     (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) * 1.0) / COUNT(a.atom_id) AS hydrogen_ratio FROM      atom a JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      a.molecule_id = 'TR006' GROUP BY      m.label; 
SELECT m.molecule_id, m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'ca' AND m.label = '+'; 
SELECT bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom AS a1 ON connected.atom_id = a1.atom_id JOIN atom AS a2 ON connected.atom_id2 = a2.atom_id WHERE a1.element = 'te' AND a2.element = 'te'; 
SELECT a1.element AS Element1, a2.element AS Element2 FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11' AND a1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND a2.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca'); 
SELECT      (SELECT COUNT(*) FROM bond WHERE bond_type = '#') * 100.0 /      (SELECT COUNT(DISTINCT molecule_id) FROM molecule) AS triple_bond_percentage; 
SELECT      (SUM(CASE WHEN bond.bond_type = ' = ' THEN 1 ELSE 0 END) * 100.0) / COUNT(bond.bond_id) AS percent FROM      bond WHERE      bond.molecule_id = 'TR047'; 
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.atom_id = 'TR001_1' AND m.label = '+'; 
SELECT m.label FROM molecule m WHERE m.molecule_id = 'TR151' AND m.label = '+'; 
SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR151' AND a.element IN ('cl', 'br', 'i', 'pb', 'te'); 
SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule m  WHERE m.label = '+'; 
SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id BETWEEN 'TR010' AND 'TR050' AND a.element = 'c'; 
SELECT COUNT(a.atom_id)  FROM atom a  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE m.label = '+'; 
SELECT bond.bond_id FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom AS atom1 ON connected.atom_id = atom1.atom_id JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND bond.bond_type = ' = '; 
SELECT COUNT(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' AND m.label = '+'; 
SELECT m.molecule_id FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE a1.atom_id = 'TR00_1_2' AND a2.atom_id = 'TR00_1'; 
SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND m.label <> '-'; 
SELECT      (SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT m.molecule_id) AS percentage_carcinogenic_with_hydrogen FROM      atom a JOIN      connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      m.label = '+' 
SELECT m.label FROM molecule m WHERE m.molecule_id = 'TR124' AND m.label = '+'; 
SELECT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.molecule_id = 'TR186'; 
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 'TR007_4_19' OR connected.atom_id2 = 'TR007_4_19'; 
SELECT a1.element AS Element1, a2.element AS Element2 FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_2_4'; 
SELECT      COUNT(b.bond_id) AS double_bond_count,     CASE          WHEN m.label = '+' THEN 'Yes'         ELSE 'No'     END AS carcinogenic FROM      bond b JOIN      molecule m ON b.molecule_id = m.molecule_id WHERE      b.molecule_id = 'TR006' AND      b.bond_type = ' = '; 
SELECT m.molecule_id, GROUP_CONCAT(a.element) AS elements FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') GROUP BY m.molecule_id; 
SELECT b.bond_id, a1.atom_id AS atom1, a2.atom_id AS atom2 FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '-'; 
SELECT m.molecule_id, GROUP_CONCAT(DISTINCT a.element ORDER BY a.element) AS elements FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE b.bond_type = '#' GROUP BY m.molecule_id; 
SELECT a1.element AS Element1, a2.element AS Element2 FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR000_2_3'; 
SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom AS a1 ON connected.atom_id = a1.atom_id JOIN atom AS a2 ON connected.atom_id2 = a2.atom_id WHERE a1.element = 'cl' OR a2.element = 'cl'; 
SELECT a.atom_id, COUNT(b.bond_id) AS bond_types_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR346' GROUP BY a.atom_id; 
SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = ' = '; 
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id AND a.element = 's' LEFT JOIN bond b ON m.molecule_id = b.molecule_id AND b.bond_type = ' = ' WHERE a.atom_id IS NULL AND b.bond_id IS NULL; 
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id WHERE c.bond_id = 'TR001_2_4' AND b.bond_type = '+'; 
SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005'; 
SELECT COUNT(*) FROM bond WHERE bond_type = '-'; 
SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'cl' AND m.label = '+'; 
SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'c' AND m.label = '-'; 
SELECT      (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT m.molecule_id) AS percentage FROM      atom a JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      m.label = '+'; 
SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'; 
SELECT COUNT(DISTINCT a.element)  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2  WHERE c.bond_id = 'TR001_3_4'; 
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 'TR000_1' AND connected.atom_id2 = 'TR000_2'; 
SELECT m.label FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id JOIN atom a2 ON m.molecule_id = a2.molecule_id WHERE a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4'; 
SELECT element FROM atom WHERE atom_id = 'TR000_1'; 
SELECT m.label FROM molecule m WHERE m.molecule_id = 'TR000'; 
SELECT      (SUM(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) * 100.0) / COUNT(a.atom_id) AS percentage FROM      atom a JOIN      connected c ON a.atom_id = c.atom_id JOIN      bond b ON c.bond_id = b.bond_id; 
SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  WHERE a.element = 'n' AND m.label = '+'; 
SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 's' AND b.bond_type = ' = '; 
SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' AND (SELECT COUNT(*) FROM atom WHERE molecule_id = m.molecule_id) > 5 GROUP BY m.molecule_id; 
SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '=' AND a.molecule_id = 'TR024'; 
SELECT m.molecule_id, COUNT(a.atom_id) AS atom_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id ORDER BY atom_count DESC LIMIT 1; 
SELECT      (SUM(CASE WHEN a.element = 'h' AND b.bond_type = '#' THEN 1 ELSE 0 END) * 100.0) / COUNT(DISTINCT a.molecule_id) AS percentage_carcinogenic_with_triple_bonded_H FROM      atom a JOIN      connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN      bond b ON c.bond_id = b.bond_id JOIN      molecule m ON a.molecule_id = m.molecule_id WHERE      m.label = '+'; 
SELECT COUNT(*) FROM molecule WHERE label = '+'; 
SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR004' AND 'TR010' AND molecule_id IN (     SELECT DISTINCT m.molecule_id     FROM bond b     JOIN connected c ON b.bond_id = c.bond_id     JOIN molecule m ON b.molecule_id = m.molecule_id     WHERE b.bond_type = '-' ); 
SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c'; 
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR004_7' AND m.label = '-' AND a.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca'); 
SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.element = 'o' AND b.bond_type = ' = ' AND a2.element = 'o'; 
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '-'; 
SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR016'; 
SELECT a1.atom_id FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a1.element = 'c' AND b.bond_type = ' = ' AND a1.molecule_id = 'TR012'; 
SELECT a.atom_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'o'; 
