SELECT MAX(T1.`Percent (%) Eligible Free (K-12)`) AS percent_eligible_free FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Alameda'
SELECT T1.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Low Grade` = '5' AND T1.`High Grade` = '17' AND T2.`School Type` = 'CONTINUATION' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3
SELECT DISTINCT T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Fresno County, CA' AND T2.`Charter School (Y/N)` = 1
SELECT T2.street, T2.streetabr, T2.city, T2.mailcity, T2.zip, T2.state FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cdscode WHERE T1.`frpm count (k-12)` = (SELECT max(`frpm count (k-12)`) FROM frpm)
SELECT phone FROM schools WHERE CHARTER = 1 AND CHARTErNUM LIKE '%Direct%' AND OpenDate > '2000-01-01';
SELECT COUNT(T1.CDSCode) FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Virtual (Y/N)` = 1 AND T1.`Enrollment (Ages 5-17)` > 0 AND T1.`2013-14 CALPADS Fall 1 Certification Status` IS NOT NULL AND T2.`AvgScrMath` < 400
SELECT DISTINCT S.school FROM schools AS S INNER JOIN satscores AS SS ON S.CDSCode = SS.cds WHERE S.Magnet = 1 AND SS.NumTstTakr > 500
SELECT Phone FROM schools WHERE NCESSchool IN (SELECT T1.NCESSchool FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'District Name' AND T2.NumTstTakr > 0 AND T2.AvgScrRead > 1500 AND T2.AvgScrMath > 1500 AND T2.AvgScrWrite > 1500 AND T2.NumGE1500 > 0)
SELECT COUNT(satscores.NumTstTakr) FROM satscores  JOIN frpm ON satscores.cds = frpm.CDSCode  WHERE frpm.`FRPM Count (K-12)` = (     SELECT MAX(frpm.`FRPM Count (K-12)`) FROM frpm )
SELECT COUNT(DISTINCT T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.cds WHERE T3.AvgScrMath > 560 AND T2.Charter = 1
SELECT t1.`FRPM Count (Ages 5-17)`  FROM frpm AS t1  INNER JOIN satscores AS t2 ON t1.CDSCode = t2.cds  WHERE t2.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores)  ORDER BY t1.`FRPM Count (Ages 5-17)` DESC  LIMIT 1;
SELECT DISTINCT CDSCode FROM frpm WHERE "Enrollment (K-12)" > 500
SELECT MAX(T2.`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Enrollment (Ages 5-17)` > 0 AND T1.`Percent (%) Eligible FRPM (Ages 5-17)` > 0 AND T2.NumTstTakr > 0 AND T2.AvgScrMath IS NOT NULL AND T2.AvgScrRead IS NOT NULL AND T2.AvgScrWrite IS NOT NULL AND T2.AvgScrRead > 0 AND T2.AvgScrWrite > 0 AND T2.AvgScrMath > 0 AND T2.NumGE1500 IS NOT NULL AND T2.PctGE1500 IS NOT NULL AND T2.PctGE1500 > 0 AND T2.sname IS NOT NULL AND T2.dname IS NOT NULL AND T2.cname IS NOT NULL
SELECT T1.phone, T1.school FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.cds = T2.cds ORDER BY T2.AvgScrRead DESC LIMIT 3
SELECT T2.NCESSchool FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.Enrollment DESC LIMIT 5
SELECT AVG(t1.AvgScrRead) FROM satscores AS t1 INNER JOIN schools AS t2 ON t1.cds = t2.CDSCode INNER JOIN frpm AS t3 ON t2.CDSCode = t3.CDSCode WHERE t2.DistrictType = 'active'
SELECT COUNT(*) FROM (( SELECT s.cds FROM ( SELECT T1.cds FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CountyName = 'ALAMEDA' AND T2.School IS NOT NULL ) AS T3 INNER JOIN satscores AS T4 ON T3.cds = T4.cds WHERE T4.NumTstTakr < 100 ) AS T1 JOIN frpm AS T2 ON T1.cds = T2.CDSCode)
SELECT DISTINCT CHARTERNUM FROM schools WHERE CHARTERNUM IS NOT NULL ORDER BY CHARTERNUM DESC LIMIT 1
SELECT COUNT(T2.cds) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Funding Type` = 'Contra Costa (directly funded)' AND T2.NumTstTakr <= 250
SELECT t2.phone FROM satscores AS t1 INNER JOIN schools AS t2 ON t1.cds = t2.cds ORDER BY t1.avgscrmath DESC LIMIT 1
SELECT COUNT(DISTINCT T3.SchoolCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.SchoolCode = T2.CDSCode INNER JOIN schools AS T3 ON T3.DistrictCode = T1.DistrictCode WHERE T1.`Low Grade` = 9 AND T1.`High Grade` = 12 AND T2.County = 'Amador'
SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.county = 'Los Angeles' AND ( T2.`Free Meal Count (K-12)` > 500 AND T2.`Free Meal Count (K-12)` < 700 )
SELECT T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.rtype = 'All Students' ORDER BY T2.NumTstTakr DESC LIMIT 1
SELECT T1.School, T1.Street, T1.City, T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE ABS(T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)`) > 30
SELECT T1.school FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cdscode = T2.cdscode WHERE T2.`percent (%) eligible free (k-12)` > 0.1 INNER JOIN satscores AS T3 ON T3.cds = T1.cdscode WHERE T3.numtsttakr >= 1500
SELECT t2.fundingtype FROM schools AS t1 INNER JOIN frpm AS t2 ON t1.CDSCode = t2.CDSCode INNER JOIN satscores AS t3 ON t1.CDSCode = t3.cds WHERE t1.county = 'Riverside' AND t3.AvgScrMath > 400
SELECT T1.School, T1.Street, T1.City, T1.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`High Grade` = '12' AND T2.`Low Grade` = '6' AND T2.`Enrollment (Ages 5-17)` > 800 AND T2.`Percent (%) Eligible Free (Ages 5-17)` > 0
SELECT T1.school, AVG(T2.avgscrmath)  FROM schools AS T1  INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds  WHERE (T1.OpenDate > '1991-12-31' OR T1.ClosedDate < '2000-01-01') AND T2.avgscrmath IS NOT NULL  GROUP BY T2.avgscrmath
WITH LocalFunded AS (   SELECT      CDSCode,      DOCType    FROM      schools    WHERE      FundingType = 'Local' ),  K12Averages AS (   SELECT      AVG(Enrollment(`12`)) as K12AvgEnrollment    FROM      frpm  ),  FifteenSeventeenAverages AS (   SELECT      AVG(Enrollment(`15-17`)) as FSEAvgEnrollment    FROM      frpm  ),  AvgDifferences AS (   SELECT      LocalFunded.DOCType,      LocalFunded.CDSCode,      ABS(f.Enrollment('12') - s.Enrollment('15-17')) as AvgDifference    FROM      LocalFunded      JOIN frpm f ON LocalFunded.CDSCode = f.CDSCode      JOIN frpm s ON LocalFunded.CDSCode = s.CDSCode    WHERE      f.`12` IS NOT NULL      AND s.`15-17` IS NOT NULL ),  LocalFundedAverages AS (   SELECT      SUM(AvgDifference) as TotalDifference    FROM      AvgDifferences      JOIN LocalFunded ON AvgDifferences.CDSCode = LocalFunded.CDSCode ) SELECT    DISTINCT T1.SchoolName  FROM    frpm as T1    JOIN LocalFunded as T2 ON T2.CDSCode = T1.CDSCode    JOIN AvgDifferences as T3 ON T3.CDSCode = T1.CDSCode WHERE    T3.AvgDifference > (SELECT LocalFundedAverages.TotalDifference FROM LocalFundedAverages)
SELECT OpenDate FROM schools ORDER BY Enrollment DESC LIMIT 1
SELECT t1.city FROM schools AS t1 INNER JOIN frpm AS t2 ON t1.cdscode = t2.cdscode WHERE t2.Lowgrade = '1' AND t2.higrade = '12' ORDER BY t2.enrollment ASC LIMIT 5
SELECT CAST(SUM(CASE WHEN SUBSTR("High Grade", 1, 2) = '11' THEN Percent_('Free (K-12)') ELSE 0 END) AS REAL) / COUNT(*) AS Pct_Free_11 FROM frpm JOIN (     SELECT CDSCode, COUNT(*) AS total_enrollment     FROM frpm     WHERE SUBSTR("High Grade", 1, 2) IN ('10', '11', '12')     GROUP BY CDSCode     ORDER BY total_enrollment DESC     LIMIT 10 ) subquery ON frpm.CDSCode = subquery.CDSCode;  -- Calculate the total number of students in grades 1 through 12 and the percentage of them eligible for free meal for the 10th and 11th schools with the highest enrollment SELECT T2.County, T2.District, T2.School,         CAST(SUM(CASE WHEN SUBSTR(T1.`High Grade`, 1, 2) IN ('10', '11', '12') THEN T1.Enrollment END) AS REAL) AS total_students,        CAST(SUM(CASE WHEN SUBSTR(T1.`High Grade`, 1, 2) = '11' THEN T1.`Percent (%) Eligible Free (K-12)` ELSE 0 END) AS REAL) / SUM(CASE WHEN SUBSTR(T1.`High Grade`, 1, 2) IN ('10', '11', '12') THEN T1.Enrollment ELSE 0 END) * 100 AS Pct_Free_11 FROM frpm T1 JOIN schools T2 ON T1.CDSCode = T2.CDSCode WHERE SUBSTR(T1.`High Grade`, 1, 2) IN ('10', '11', '12') GROUP BY T2.County, T2.District, T2.School ORDER BY total_students DESC LIMIT 10;
SELECT T2.school, T2.`Free Meal Count (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cds WHERE T2.countycode = '66' ORDER BY T2.`Free Meal Count (K-12)` DESC LIMIT 5
SELECT T1.School, T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000
SELECT T1.`% Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Kacey' AND T2.AdmLName1 = 'Gibson'
SELECT T2.AdmEmail1  FROM frpm AS T1  JOIN schools AS T2  WHERE T2.Charter = 1 AND T2.CDSCode = T1.CDSCode AND T1.`Enrollment (K-12)` = (SELECT MIN(`Enrollment (K-12)`) FROM frpm WHERE `Enrollment (K-12)` IS NOT NULL)
SELECT T3.AdmFName1, T3.AdmLName1 FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode INNER JOIN schools AS T3 ON T1.cds = T3.CDSCode WHERE T1.AvgScrRead >= 1500 ORDER BY T2.NumTstTakr DESC LIMIT 1
SELECT T2.Street, T2.City, T2.Zip, T2.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Percent___Eligible_Free___K___12 IS NOT NULL ORDER BY T2.Percent___Eligible_Free___K___12 ASC LIMIT 1
SELECT T1.Website FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr BETWEEN 2000 AND 3000
SELECT COUNT(NumTstTakr) FROM satscores WHERE rtype = 'Fresno' AND dname IN ( SELECT District FROM schools WHERE OpenDate >= '1980-01-01' AND OpenDate <= '1980-12-31' )
SELECT Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE rtype = 'fall' AND sname = 'fresno unified' AND AvgScrRead = ( SELECT MIN(AvgScrRead) FROM satscores WHERE rtype = 'fall' AND sname = 'fresno unified' )
SELECT school FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds INNER JOIN frpm AS T3 ON T1.CDSCode = T3.CDSCode WHERE T2.AvgScrRead IS NOT NULL AND T3.Virtual = 1 ORDER BY T2.AvgScrRead DESC LIMIT 5
SELECT T1.EDUCTYPE FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AVGScrMath = ( SELECT MAX(AVGScrMath) FROM satscores )
SELECT sname, cname FROM schools t1 JOIN satscores t2 ON t1.CDSCode = t2.cds ORDER BY AvgScrMath ASC LIMIT 1
SELECT T3.city FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN schools AS T3 ON T3.cds = T2.CDSCode WHERE T2.district = ( SELECT T2.district FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode GROUP BY T2.district ORDER BY COUNT(T1.NumTstTakr) DESC LIMIT 1 ) AND T1.NumTstTakr >= 1500 ORDER BY T3.city
SELECT T1.`School Name`, AVG(T2.AvgScrWrite) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.rtype = 'Schoolwide' AND T1.EdOpsName = 'Ricci Ulrich' GROUP BY T1.`School Name`
SELECT T1.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Grade = 'K-12' GROUP BY T1.State ORDER BY COUNT(*) DESC LIMIT 1
SELECT SUM(CASE WHEN YEAR(OpenDate) = 1980 AND County = 'ALAMEDA' THEN 1 ELSE 0 END) / 12 AS monthly_average  FROM schools
SELECT COUNT(CASE WHEN s.DistrictType = 'Unified School District' THEN 1 END) * 100.0 / COUNT(CASE WHEN s.DistrictType = 'Elementary School District' THEN 1 END) AS ratio FROM schools s WHERE s.County = 'Orange County' AND s.DistrictType IN ('Unified School District', 'Elementary School District')
SELECT T1.County, T2.school, T2.ClosedDate FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.closeddate IS NOT NULL GROUP BY T1.County ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Street, T2.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1, 1
SELECT T2.street, T3.school FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cdscode INNER JOIN satscores AS T3 ON T1.cdscode = T3.cds WHERE T3.rtype = 'A' ORDER BY T3.avgscrread ASC LIMIT 1
SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr > 1500 AND T1.MailCity = 'Lakeport'
SELECT COUNT(t1.`NumTstTakr`) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'
SELECT City, Zip FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'
SELECT      CASE         WHEN COUNT(CASE WHEN T1.`County Name` = 'Colusa' THEN 1 ELSE NULL END) = 0 THEN 'No school located in Colusa county'         ELSE CAST(COUNT(CASE WHEN T1.`County Name` = 'Humboldt' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T1.`County Name` = 'Colusa' THEN 1 ELSE NULL END)     END AS `Ratio of schools located in Humboldt county against the school located in Colusa county` FROM     schools AS T1 WHERE     T1.`State` = 'California' AND T1.`Mailing County` IS NOT NULL
SELECT COUNT(DISTINCT T1.school_name) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cds_code = T2.cds_code WHERE T1.mailing_state = 'CA' AND T1.city = 'San Joaquin'
SELECT T1.phone, T1.ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.rtype = 'W' ORDER BY T2.AvgScrWrite DESC LIMIT 1 OFFSET 332
SELECT T.School, T.Phone, T.Ext FROM schools AS T WHERE T.Zip = '95203-3704'
SELECT Website FROM schools WHERE AdmFName1 = 'Mike' AND AdmLName1 = 'Larson' OR AdmFName2 = 'Mike' AND AdmLName2 = 'Larson' OR AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez' OR AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez'
SELECT T1.Website FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Charter (Y/N)` = 1 AND T2.`Charter School Number` LIKE 'P%' AND T1.County = 'SAN JOAQUIN'
SELECT COUNT(*) FROM schools AS t1 INNER JOIN frpm AS t2 ON t1.CDSCode = t2.CDSCode WHERE t1.District = 'Elementary School District' AND t1.city = 'Hickman' AND t1.Charter = 1
SELECT SUM(CASE WHEN DISTRICT = 'Los Angeles Unified District' AND CHARTER = 0 THEN 1 ELSE 0 END) FROM schools WHERE `Percent (%) Eligible Free (K-12)` < 0.018
SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3, T3.School, T3.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN schools AS T3 ON T2.CDSCode = T3.CDSCode WHERE T1.Charter = 1 AND T1.CharterNum = '00D2'
SELECT COUNT(*) FROM schools WHERE County = 'Hickman' AND CHARTERNUM = '00D4'
SELECT CAST(SUM(CASE WHEN FUNDINGTYPE = 'Local' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS Ratio FROM schools WHERE COUNTY = 'Santa Clara'
SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.District = 'Stanislaus County Public Schools' AND T2.`Charter School (Y/N)` = 1 AND T2.`Charter Funding Type` = 'Directly Funded' AND T2.`Open Date` BETWEEN '2000-01-01' AND '2005-12-31'
SELECT SUM(CASE WHEN YEAR = 1989 AND city = 'San Francisco' THEN 1 ELSE 0 END) FROM frpm
SELECT T1.County FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Academic Year` LIKE '198%' AND T2.`School Type` LIKE 'Youth Authority Facilities (CEA)' ORDER BY T1.County DESC LIMIT 1
SELECT DISTINCT T2.NCESDist FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`School Type` = 'State Special School'
SELECT COUNT(DISTINCT DistrictName) FROM schools WHERE County = 'Alpine' AND SchoolType = 'District Community Day School'
SELECT DistrictCode FROM schools WHERE City = 'Fresno' AND Magnet = 1
SELECT SUM(T2.Enrollment\((Ages 5-17)\)) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.School = 'State Special School' AND T1.City = 'Fremont' AND T1.Zip = '94507' AND T2.`Academic Year` = '2014-2015'
SELECT SUM(t1.Enrollment__Ages_5_17_, t1.Free_Meal_Count__Ages_5_17_, t1.Percent__Eligible_Free__Ages_5_17_, t1.FRPM_Count__Ages_5_17_, t1.Percent__Eligible_FRPM__Ages_5_17_) FROM frpm AS t1 INNER JOIN schools AS t2 ON t1.CDSCode = t2.CDSCode WHERE t2.School = 'Youth Authority School' AND t2.MailingStreet = 'PO Box 1040'
SELECT T1.`Low Grade` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`District Name` = 'District Special Education Consortia School' AND T2.`NCESDist` = '613360'
SELECT DISTINCT T1.`School Type`, T3.`School Name` FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T1.`Educational Option Type` = 'Breakfast Provision 2' AND T3.`County Code` = 37
SELECT DISTINCT s.City FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Merced' AND f.`Low Grade` = '9' AND f.`High Grade` = '12' AND f.`NSLP Provision Status` = '2'
SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.`High Grade` = '9' AND T1.`Low Grade` = 'Kindergarten'
SELECT T1.`Grade Span` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.City = 'Adelanto' GROUP BY T1.`Grade Span` ORDER BY COUNT(*) DESC LIMIT 1
SELECT MIN(CASE WHEN StatusType = 'Public' THEN 1 ELSE 0 END) AS non_physical_school_count FROM schools WHERE (District IN (SELECT District FROM schools WHERE County = 'San Diego') OR District IN (SELECT District FROM schools WHERE County = 'Santa Barbara')) AND NOT EXISTS(SELECT 1 FROM frpm WHERE schools.CDSCode = frpm.CDSCode)
SELECT T1.School_Name, T1.Latitude FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.Latitude DESC LIMIT 1
SELECT T3.school FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T1.latitude = ( SELECT MIN(latitude) FROM frpm WHERE T1.state = 'CA' ) AND T3.state = 'CA' GROUP BY T3.school ORDER BY MIN(T1.low_grade)
SELECT high_grade FROM schools ORDER BY longitude DESC LIMIT 1
SELECT COUNT(T2.CDSCode) AS NumberOfSchools, T3.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN schools AS T3 ON T3.District = T2.District WHERE T1.`School Type` = 'Magnet' AND T1.`Grade Span` = 'Kindergarten to 8th grade' GROUP BY T3.City
SELECT t1.AdmFName1 AS first_name, t1.District AS district, COUNT(*) AS occurrences  FROM schools AS t1  WHERE t1.AdmFName1 IS NOT NULL AND t1.AdmFName2 IS NOT NULL AND t1.AdmFName3 IS NOT NULL  GROUP BY t1.AdmFName1, t1.District  ORDER BY occurrences DESC  LIMIT 2
SELECT T1.DistrictCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine' AND T2.`Percent (%) Eligible Free (K-12)` IS NOT NULL
SELECT DISTINCT T1.District, T1.County, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.CharterNumber = 40
SELECT a.AdmEmail1 FROM schools AS a JOIN frpm AS b ON a.CDSCode = b.CDSCode WHERE b.`County Name` = 'San Bernardino County' AND b.`District Name` LIKE '%District of San Bernardino City Unified%' AND b.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND b.`School Type` IN ('Public Intermediate/Middle Schools', 'Unified Schools')
SELECT admemail1 FROM schools WHERE CDSCode IN  (SELECT cds FROM satscores WHERE NumTstTakr IN  (SELECT MAX(NumTstTakr) FROM satscores WHERE AvgScrRead >= 1500))
SELECT COUNT(t1.account_id) FROM account AS t1 INNER JOIN disp AS t2 ON t1.account_id = t2.account_id INNER JOIN district AS t3 ON t1.district_id = t3.district_id WHERE t1.frequency = 'Monthly' AND t3.A2 = 'East Bohemia'
SELECT COUNT(DISTINCT T2.account_id) AS accounts_with_prague_region FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Prague' AND T2.status = 'E'
SELECT CASE WHEN T3.unemp_rate > T4.unemp_rate THEN '1995' ELSE '1996' END AS 'Higher Percentage' FROM district AS T1 INNER JOIN ( SELECT T1.district_id, AVG(T2.unemp_rate) AS 'unemp_rate' FROM district AS T1 INNER JOIN loan AS T2 ON T1.district_id = T2.district_id WHERE T2.date BETWEEN '1995-01-01' AND '1995-12-31' GROUP BY T1.district_id ) AS T3 ON T3.district_id = T1.district_id INNER JOIN ( SELECT T1.district_id, AVG(T2.unemp_rate) AS 'unemp_rate' FROM district AS T1 INNER JOIN loan AS T2 ON T1.district_id = T2.district_id WHERE T2.date BETWEEN '1996-01-01' AND '1996-12-31' GROUP BY T1.district_id ) AS T4 ON T4.district_id = T1.district_id
Sure, I can help you with that. Here's the SQL query:  ```sql SELECT COUNT(district_id) FROM (   SELECT district_id   FROM client   WHERE gender = 'F'   GROUP BY district_id   HAVING AVG(EXTRACT(YEAR FROM ABS(CURRENT_DATE - birth_date))) >= 40   AND AVG(EXTRACT(YEAR FROM ABS(CURRENT_DATE - birth_date))) <= 60 ) as female_clients JOIN account ON client.client_id = account.district_id WHERE account.amount BETWEEN 6000 AND 10000 GROUP BY district_id HAVING COUNT(*) > 0; ```  This SQL query first selects the `district_id` of all female clients whose age is between 40 and 60. It then joins the `account` table on the `client_id` to obtain the average balance of accounts in those districts. It filters for districts where the average balance is between 6000 and 10000 and counts the number of such districts. Finally, it only includes districts where the count is greater than 0.
SELECT COUNT(client_id) FROM (SELECT DISTINCT client_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'male' AND T1.district_id = 4 AND T2.A2 = 'north bohemia') AS T3 WHERE T3.client_id IN (SELECT DISTINCT client_id FROM account AS T4 INNER JOIN disp AS T5 ON T4.account_id = T5.account_id INNER JOIN client AS T6 ON T5.client_id = T6.client_id WHERE T6.gender = 'male' AND T6.district_id = 4 AND T6.birth_date < CURDATE() AND T4.frequency = 'domestic')
SELECT T2.account_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC LIMIT 1
SELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN ( SELECT account_id FROM account GROUP BY client_id HAVING AVG(amount) = ( SELECT MAX(AVG(amount)) FROM account GROUP BY client_id ) ) AS T3 ON T1.account_id = T3.account_id ORDER BY T2.birth_date LIMIT 1
SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'W' AND T1.gender = 'Male'
SELECT DISTINCT client_id FROM disp WHERE type = 'Disponent'
SELECT account_id FROM account WHERE DATE(date) = '1997-01-01' AND status = 'A' ORDER BY amount ASC LIMIT 1
SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'A' AND T2.date BETWEEN '1993-01-01' AND '1993-12-31' AND T1.duration > 12 ORDER BY T1.amount DESC LIMIT 1
SELECT COUNT(DISTINCT T2.client_id) FROM account AS T1 INNER JOIN disp AS T3 ON T3.account_id = T1.account_id INNER JOIN client AS T2 ON T3.client_id = T2.client_id INNER JOIN district AS T4 ON T2.district_id = T4.district_id WHERE T1.date BETWEEN DATE '1950-01-01' AND DATE '1959-12-31' AND T2.gender = 'F' AND T4.A2 = 'Slokolov'
SELECT account_id FROM account WHERE EXTRACT(YEAR FROM date) = 1995 ORDER BY date ASC LIMIT 1
SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.birth_date < '1997-01-01' AND T1.amount > 3000
SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1994-03-03'
SELECT T2.date FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'C' AND T1.amount = 840 AND STRFTIME('%Y/%m/%d', T2.date) = '1998/10/14';
SELECT T1.district_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.date = '1994-08-25'
SELECT MAX(T3.amount) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.card_id = T3.card_id WHERE STRFTIME('%Y/%m/%d', T3.issued) = '1996/10/21'
SELECT T3.gender FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T2.date = ( SELECT MAX(T2.date) FROM account AS T2 INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A2 = 'North-West' ) ORDER BY T3.birth_date LIMIT 1
SELECT MIN(t2.amount) FROM account AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id WHERE t1.date = (SELECT MIN(date) FROM account AS t3 WHERE t3.district_id = t1.district_id AND t3.account_id = t1.account_id);
SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik' AND T1.gender = 'woman'
SELECT DISTINCT T5.disp_id  FROM client AS T1  JOIN account AS T2 ON T1.client_id = T2.district_id  JOIN `order` AS T3 ON T1.client_id = T3.account_id  JOIN trans AS T4 ON T2.account_id = T4.account_id  JOIN disp AS T5 ON T1.client_id = T5.client_id  WHERE T4.date = '1998-09-02' AND T4.amount = 5100
SELECT COUNT(DISTINCT T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T2.district_id = T1.district_id WHERE T2.date BETWEEN '1996-01-01' AND '1996-12-31' AND T1.A2 = 'Litomerice'
SELECT T1.district_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'FEMALE' AND T1.birth_date = '1976-01-29'
SELECT T1.birth_date FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T4.amount = 98832 AND T4.date = '1996-01-03'
SELECT T2.account_id FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Prague' LIMIT 1
SELECT CAST(SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(client_id) AS percentage_of_male_clients FROM client WHERE district_id IN (     SELECT district_id     FROM district     WHERE A2 LIKE '%South Bohemia%' )
SELECT ((SELECT balance FROM (SELECT T1.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.type = 'PRIJEM' ORDER BY T3.date, T1.date ASC LIMIT 1) AS T1) - (SELECT balance FROM (SELECT T1.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.type = 'PRIJEM' ORDER BY T3.date DESC LIMIT 1) AS T1)) / (SELECT balance FROM (SELECT T1.balance FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.type = 'PRIJEM' ORDER BY T3.date DESC LIMIT 1) AS T1)) AS T1
SELECT COUNT(*) / COUNT(T1.account_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'C'
SELECT CAST(SUM(CASE WHEN status = 'A' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 AS percentage FROM loan WHERE amount < 100000
SELECT T1.account_id, T2.A2, T2.A5 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T3.date = T1.date WHERE T3.type LIKE 'V%' AND T3.operation = 'transfer' AND T1.date BETWEEN '1993-01-01' AND '1993-12-31'
SELECT a.account_id, t.frequency  FROM account a  JOIN disp d ON a.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  JOIN district di ON c.district_id = di.district_id  WHERE di.A4 = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31'  GROUP BY a.account_id, t.frequency
SELECT T2.account_id, T2.date FROM district AS T1  JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Prachatice'
SELECT T3.district_id, T3.A2 FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.loan_id = 4990
SELECT T2.district_id, T4.A7 FROM loan AS T1  INNER JOIN account AS T2 ON T2.account_id = T1.account_id  INNER JOIN district AS T4 ON T4.district_id = T2.district_id  WHERE T1.amount > 300000
SELECT L.loan_id, D.district_id, AVG(C.A11) FROM loan AS L JOIN account AS A ON L.account_id = A.account_id JOIN client AS C ON A.district_id = C.district_id JOIN district AS D ON A.district_id = D.district_id WHERE L.duration = 60 GROUP BY L.loan_id, D.district_id
SELECT T3.district_id, T2.A12  FROM loan AS T1  INNER JOIN district AS T3 ON T1.district_id = T3.district_id  INNER JOIN district AS T2 ON T1.district_id = T2.district_id  WHERE T1.status = 'A' AND T1.account_id IN (     SELECT T4.account_id      FROM loan AS T1      INNER JOIN trans AS T2 ON T1.account_id = T2.account_id      INNER JOIN trans AS T3 ON T1.account_id = T3.account_id      INNER JOIN account AS T4 ON T1.account_id = T4.account_id      WHERE T2.balance > T3.balance )
SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T2.A2 = 'Decin'
SELECT account_id FROM account WHERE frequency = 'MONTHLY'
SELECT T4.A2 FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T3.gender = 'F' GROUP BY T4.A2 ORDER BY COUNT(*) DESC LIMIT 10
SELECT T2.district_id, T1.account_id, SUM(T1.amount) AS total_amount FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.`type` = 'W' AND T2.frequency = 'M' AND T1.date BETWEEN '1996-01-01' AND '1996-01-31' AND T1.bank = 'none' GROUP BY T2.district_id, T1.account_id ORDER BY total_amount DESC LIMIT 10;
SELECT COUNT(c.client_id) FROM client c JOIN account a ON c.client_id = a.district_id JOIN disp d ON a.account_id = d.account_id WHERE c.district_id = ( SELECT district_id FROM district WHERE A2 = 'South Bohemia' ) AND d.type = 'disp' AND d.account_id NOT IN ( SELECT t.account_id FROM trans t WHERE t.type = 'CRDOPEN' )
SELECT A2 FROM district ORDER BY A13 DESC LIMIT 1
SELECT AVG(amount) FROM loan INNER JOIN client ON loan.account_id = account.account_id WHERE client.gender = 'M'
SELECT T1.A3, T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.date LIKE '1996%' ORDER BY T2.amount DESC LIMIT 1
SELECT COUNT(DISTINCT t1.account_id) FROM account AS t1 INNER JOIN trans AS t2 ON t1.account_id = t2.account_id WHERE t2.`type` = 'CRI' AND t1.date BETWEEN '1996-01-01' AND '1996-12-31' GROUP BY t2.k_symbol ORDER BY COUNT(t2.k_symbol) DESC LIMIT 1
SELECT COUNT(t3.account_id) FROM account AS t1 INNER JOIN card AS t2 ON t1.account_id = t2.account_id INNER JOIN disp AS t3 ON t3.account_id = t2.disp_id WHERE t1.frequency = 'P' AND t2.type = 'credit' AND t3.type = 'disposal' AND t3.issued BETWEEN '2010-01-01' AND '2010-12-31' AND t1.balance < 0
SELECT COUNT(T1.loan_id) AS Total_loans FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'monthly' AND T1.amount >= 250000 AND T1.status = 'approved' AND T1.date BETWEEN '1995-01-01' AND '1997-12-31'
SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A2 = 'Branch location 1'
Without constraints, this would involve multiple sub-queries, joined tables and calculations, which are not allowed in SQL. However, based on the provided information and the task given, we can form a few queries that can provide the relevant information:  To determine the district with the second highest number of crimes in 1995, we first need to count the crimes in each district in 1995. Then we need to get the second highest number of crimes. Finally, we need to join this with the clients and count the number of male clients in that district.  Assuming the 'Crime' table exists:  ```sql SELECT COUNT(*)  FROM district  WHERE district_id = (     SELECT district_id      FROM (         SELECT district_id, COUNT(*) AS crime_count          FROM crime          WHERE year = 1995          GROUP BY district_id          ORDER BY crime_count DESC          LIMIT 1,1     )      AS second_highest ) ```  To find the number of male clients in the aforementioned district:  ```sql SELECT COUNT(*)  FROM client  WHERE gender = 'male'  AND district_id = (     SELECT district_id      FROM (         SELECT district_id, COUNT(*) AS crime_count          FROM crime          WHERE year = 1995          GROUP BY district_id          ORDER BY crime_count DESC          LIMIT 1,1     )      AS second_highest ) ```  Remember that the structure and exact column names in the database are not specified. Adjust the queries accordingly based on the database's structure.
SELECT count(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'disponent'
SELECT COUNT(account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'
SELECT DISTINCT T2.district_id FROM trans AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T1.amount > 10000 AND YEAR(T1.date) = 1997
SELECT T1.loan_id FROM loan AS T1 INNER JOIN `order` AS T2 ON T1.loan_id = T2.loan_id WHERE T2.k_symbol = 'PISEK'
SELECT T2.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' INTERSECT SELECT T2.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'junior'
SELECT AVG(amount) FROM card AS t1 INNER JOIN disp AS t2 ON t1.disp_id = t2.disp_id INNER JOIN account AS t3 ON t3.account_id = t2.account_id WHERE t1.issued BETWEEN '2021-01-01' AND '2021-12-31' AND t3.date BETWEEN '2021-01-01' AND '2021-12-31'
SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T3.client_id = T2.client_id INNER JOIN loan AS T4 ON T4.account_id = T1.account_id WHERE T4.date BETWEEN '1998-01-01' AND '1998-12-31' AND T4.status = 'A' AND T4.amount BETWEEN ( SELECT AVG(T4.amount) FROM loan AS T4 WHERE T4.date BETWEEN '1998-01-01' AND '1998-12-31' AND T4.status = 'A' ) AND ( SELECT AVG(T4.amount) FROM loan AS T4 WHERE T4.date BETWEEN '1998-01-01' AND '1998-12-31' AND T4.status = 'A' )
SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T3.disp_id = T2.disp_id INNER JOIN loan AS T4 ON T4.account_id = T2.account_id WHERE T1.gender = 'F' AND T3.type = 'credit card' AND T4.status = 'A'
SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'female' AND T2.A2 = 'South Bohemia'
SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Tabor'
SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id INNER JOIN district AS T5 ON T4.district_id = T5.district_id WHERE T5.A13 > 8000 AND T5.A13 <= 9000
SELECT COUNT(T1.trans_id) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.bank = 'AB' AND T2.district_id IN ( SELECT T3.district_id FROM district AS T3 WHERE T3.A2 = 'North Bohemia' )
SELECT T1.name FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'V'
The problem can be solved using SQL by joining the necessary tables and filtering out the relevant information. Here's the SQL query:  ``` SELECT avg(amount)  FROM trans  JOIN account ON trans.account_id = account.account_id  WHERE type = 'Crime' AND year(date) = 1995  AND district_id IN (     SELECT district_id      FROM account      WHERE year(date) >= 1997 AND district_id IN (         SELECT district_id          FROM district          WHERE A8 > 4000     ) ) ```  This SQL statement does the following: - Selects the average amount from the `trans` table. - It joins the `trans` table with the `account` table using `account_id`. - It filters the transactions to only include 'Crime' type transactions that were committed in 1995. - It further filters the transactions to only include those that occurred in regions where the number of crimes exceeds 4000 and the region has accounts that are opened starting from the year 1997. - It calculates the average amount of crimes committed in the relevant regions and years.
SELECT COUNT(DISTINCT card.card_id) FROM card AS card INNER JOIN disp AS disp ON card.disp_id = disp.disp_id WHERE card.type = 'classic'
SELECT COUNT(client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Hl. m. Praha' AND T1.gender = 'Male'
SELECT CAST(COUNT(CASE WHEN T2.issued < '1998-01-01' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.card_id) AS "Percantage" FROM card AS T1 INNER JOIN disp AS T2 ON T2.card_id = T1.card_id WHERE T1.type = 'Gold'
SELECT T1.name FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id ORDER BY T4.amount DESC LIMIT 1
SELECT COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T3.district_id = T2.district_id WHERE T3.A2 = 'Kysucke Nadcik' AND T1.date LIKE '1995%' AND T1.status = 'C'
SELECT district_id FROM account AS T1 INNER JOIN order AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 33333
SELECT type FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 3356) AND type = 'withdrawal' AND operation = 'cash'
SELECT COUNT(T2.account_id) AS c FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'WEEKLY' AND T2.amount < 200000
SELECT T2.type FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 13539
SELECT a.A2 FROM district AS a WHERE a.district_id = ( SELECT t1.district_id FROM client AS t1 INNER JOIN account AS t2 ON t1.client_id = t2.district_id WHERE t2.account_id = 3541 )
SELECT T1.A2  FROM district AS T1  JOIN account AS T2 ON T2.district_id = T1.district_id  JOIN loan AS T3 ON T3.account_id = T2.account_id  WHERE T3.status = 'finished with no problems'  GROUP BY T1.A2  ORDER BY COUNT(T3.loan_id) DESC  LIMIT 1
SELECT T1.name FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.trans_id = 32423
SELECT t.trans_id, t.account_id, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank  FROM account a  JOIN disp d ON a.account_id = d.account_id  JOIN client c ON c.client_id = d.client_id  JOIN district r ON r.district_id = c.district_id  JOIN trans t ON t.account_id = a.account_id  WHERE r.district_id = 5
SELECT COUNT(account_id) FROM account WHERE district_id = ( SELECT T1.district_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Jesenik' )
SELECT client_id FROM disp WHERE type = 'junior' AND issued > '1996-01-01'
