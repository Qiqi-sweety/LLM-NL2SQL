Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
 NOTES: 1. Find the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade. 2. Find the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city. 3. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 4. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 5. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 6. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 7. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 8. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 9. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 10. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 11. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 12. Find the number of schools that offers a magnet program serving a grade span of Kindergarten to 8th grade and indicate how many schools are there serving such grade span. 13. Find the number of schools that offers a magnet program serving a grade span of	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	california_schools
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	financial
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT` and `FROM` are required. SELECT COUNT(*) FROM (     SELECT DISTINCT molecule_id FROM connected WHERE bond_type = 'carbonyl' ) AS carcinogenic_molecule_count;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT COUNT(*) FROM <table>` is not allowed. SELECT COUNT(*) FROM atom WHERE element IN ('I', 'S') AND bond_type ='single';	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT <column>` and `FROM <table>` are required. SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE molecule_id = 'TR000';	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT` and `FROM` are required. SELECT DISTINCT bond_id, bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE molecule_id = 'TR006' ORDER BY bond_type ASC LIMIT 2;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT <column>` and `FROM <table>` are required. SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT <column>` and `FROM <table>` are required. SELECT bond_type FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id BETWEEN 'TR000' AND 'TR050' ORDER BY molecule.molecule_id;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT` and `FROM` are required. SELECT DISTINCT a.molecule_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.atom_id = 'TR001_1' AND b.bond_type = 'carbonyl'	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
 `SELECT` and `FROM` are required. SELECT DISTINCT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'carbon' AND a.element = 'carbon' AND NOT EXISTS (SELECT 1 FROM connected c2 WHERE c2.atom_id = a.atom_id AND c2.atom_id2 = a.atom_id2 AND c2.bond_id = c.bond_id);	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
 `SELECT` and `FROM` are required. SELECT DISTINCT molecule_id FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE element = 'cl'  SELECT DISTINCT molecule_id FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE element = 'cl' AND molecule_id IN (SELECT molecule_id FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE element = 'c')	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	toxicology
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value of rarity is mythic - The table name is sets - The column name is block - The value of block is gladiator - The table name is cards - The column name is rarity - The value	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is "cards" - The column name is "type" - The value of "type" is "Legendary Creature" - The answer is "Legendary Creature"  SELECT type FROM cards WHERE name = "Ancestor's Chosen";	card_games
Create table If Not Exists Employee (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Salary) values ('1', '100'); insert into Employee (Id, Salary) values ('2', '200'); insert into Employee (Id, Salary) values ('3', '300'); insert into Employee (Id, Salary) values ('4', '400'); insert into Employee (Id, Salary) values ('5', '500'); insert into Employee (Id, Salary) values ('6', '600'); insert into Employee (Id, Salary) values ('7', '700'); insert into Employee (Id, Salary) values ('8', '800'); insert into Employee (Id, Salary) values ('9', '900'); insert into Employee (Id, Salary) values ('10', '1000');	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The answer is 10. SELECT COUNT(*) FROM cards WHERE isStarter = 1 AND status ='restricted';	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: 1. Find the percentage of cards whose language is French among the Story Spotlight cards. 2. Find the percentage of cards whose language is French among the Story Spotlight cards. 3. Find the percentage of cards whose language is French among the Story Spotlight cards. 4. Find the percentage of cards whose language is French among the Story Spotlight cards. 5. Find the percentage of cards whose language is French among the Story Spotlight cards. 6. Find the percentage of cards whose language is French among the Story Spotlight cards. 7. Find the percentage of cards whose language is French among the Story Spotlight cards. 8. Find the percentage of cards whose language is French among the Story Spotlight cards. 9. Find the percentage of cards whose language is French among the Story Spotlight cards. 10. Find the percentage of cards whose language is French among the Story Spotlight cards. 11. Find the percentage of cards whose language is French among the Story Spotlight cards. 12. Find the percentage of cards whose language is French among the Story Spotlight cards. 13. Find the percentage of cards whose language is French among the Story Spotlight cards. 14. Find the percentage of cards whose language is French among the Story Spotlight cards. 15. Find the percentage of cards whose language is French among the Story Spotlight cards. 16. Find the percentage of cards whose language is French among the Story Spotlight cards. 17. Find the percentage of cards whose language is French among the Story Spotlight cards. 18. Find the percentage of cards whose language is French among the Story Spotlight cards. 19. Find the percentage of cards whose language is French among the Story Spotlight cards. 20. Find the percentage of cards whose language is French among the Story Spotlight cards. 21. Find the percentage of cards whose language is French among the Story Spotlight cards. 22. Find the percentage of cards whose language is French among the Story Spotlight cards. 23. Find the percentage of cards whose language is French among the Story Spotlight cards. 24. Find the percentage of cards whose language is French among the Story Spotlight cards. 25. Find the percentage of cards whose language is French among the Story Spotlight cards. 26. Find the percentage of cards whose language is French among the Story Spotlight	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is "cards" - The column name is "edhrecRank" - The value example of "frameVersion" is "2015" - The value example of "edhrecRank" is "1" - The value example of "artist" is "None" - The value example of "availability" is "None" - The value example of "borderColor" is "None" - The value example of "cardKingdomFoilId" is "None" - The value example of "cardKingdomId" is "None" - The value example of "colorIdentity" is "None" - The value example of "colorIndicator" is "None" - The value example of "colors" is "None" - The value example of "convertedManaCost" is "None" - The value example of "duelDeck" is "None" - The value example of "edhrecRank" is "None" - The value example of "faceConvertedManaCost" is "None" - The value example of "faceName" is "None" - The value example of "flavorName" is "None" - The value example of "flavorText" is "None" - The value example of "frameEffects" is "None" - The value example of "frameVersion" is "None" - The value example of "hand" is "None" - The value example of "hasAlternativeDeckLimit" is "0" - The value example of "hasContentWarning" is "0" - The value example of "hasFoil" is "0" - The value example of "hasNonFoil" is "0" - The value example of "isAlternative" is "0" - The value example of "isFullArt" is "0" - The value example of "isOnlineOnly" is "0" - The value example of "isOversized" is "0" - The value example of "isPromo" is "0" - The value example of "isReprint" is "0" - The value example of "isReserved" is "0" - The value example of "isStarter" is "0" - The value example of "isStorySpotlight" is "0	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create a table named 'employees' with the following columns: id (integer), first_name (string), last_name (string), email (string), phone_number (string), hire_date (date), job_id (string), salary (integer), commission_pct (integer), manager_id (integer), department_id (integer)  The table should have the following constraints: id should be a primary key email should be unique phone_number should be unique hire_date should be a date job_id should be a foreign key referencing the 'jobs' table salary should be a non-negative integer commission_pct should be a non-negative integer manager_id should be a foreign key referencing the 'employees' table department_id should be a foreign key referencing the 'departments' table  The 'departments' table should have the following columns: id (integer), name (string)  The 'jobs' table should have the following columns: id (string), title (string), min_salary (integer), max_salary (integer)  The 'employees' table should have the following foreign key constraints: department_id should reference the 'departments' table job_id should reference the 'jobs' table manager_id should reference the 'employees' table	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is "cards" - The column name is "isOversized", "isReprint", "isPromo" - The value of "isOversized" is 1, "isReprint" is 1, "isPromo" is 1 - The result should be 1000  SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create a table named 'employees' with the following columns: id (integer), first_name (string), last_name (string), email (string), phone_number (string), hire_date (date), job_id (string), salary (integer), commission_pct (integer), manager_id (integer), department_id (integer)  The table should have the following constraints: id should be a primary key email should be unique phone_number should be unique hire_date should be a date job_id should be a foreign key referencing the 'jobs' table salary should be a non-negative integer commission_pct should be a non-negative integer manager_id should be a foreign key referencing the 'employees' table department_id should be a foreign key referencing the 'departments' table  The 'jobs' table should have the following columns: id (string), title (string), min_salary (integer), max_salary (integer)  The 'departments' table should have the following columns: id (integer), name (string)  The 'employees' table should have the following foreign key constraints: job_id should reference the 'id' column in the 'jobs' table manager_id should reference the 'id' column in the 'employees' table department_id should reference the 'id' column in the 'departments' table	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is "cards" - The column name is "convertedManaCost" - The value of "Ancestor's Chosen" is "1" - The answer is "1"  SELECT cards.convertedManaCost FROM cards WHERE cards.name = "Ancestor's Chosen";	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is 'cards' - The column name is 'rulings' - The value of 'rulings' is 'Reminisce' - The column name is 'date' - The value of 'date' is '2019-01-01' - The column name is 'text' - The value of 'text' is 'This ruling was created on 2019-01-01.'  SELECT rulings.date, rulings.text FROM rulings JOIN cards ON cards.uuid = rulings.uuid WHERE cards.name = 'Reminisce' ORDER BY rulings.date ASC;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: 1. Find the set code of Coldsnap 2. Find the number of cards in Coldsnap 3. Find the number of incredibly powerful cards in Coldsnap 4. Find the percentage of incredibly powerful cards in Coldsnap */ SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap'; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 15; SELECT COUNT(*) FROM cards WHERE setCode = 'coldsnap' AND power >= 	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The answer should be a single SQL query. - The answer should be correct and complete. - The answer should be in English. - The answer should be in SQLite syntax. - The answer should be in a single line. - The answer should be in a single table. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in a single row. - The answer should be in a single value. - The answer should be in a single column. - The answer should be in	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: 1. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 2. SELECT name FROM sets WHERE code ='mirrodin'; 3. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 4. SELECT name FROM sets WHERE code ='mirrodin'; 5. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 6. SELECT name FROM sets WHERE code ='mirrodin'; 7. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 8. SELECT name FROM sets WHERE code ='mirrodin'; 9. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 10. SELECT name FROM sets WHERE code ='mirrodin'; 11. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 12. SELECT name FROM sets WHERE code ='mirrodin'; 13. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 14. SELECT name FROM sets WHERE code ='mirrodin'; 15. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 16. SELECT name FROM sets WHERE code ='mirrodin'; 17. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 18. SELECT name FROM sets WHERE code ='mirrodin'; 19. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 20. SELECT name FROM sets WHERE code ='mirrodin'; 21. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 22. SELECT name FROM sets WHERE code ='mirrodin'; 23. SELECT name FROM set_translations WHERE setCode ='mirrodin' AND language = 'zh-Hans'; 24. SELECT name	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create table If Not Exists Employee (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Salary) values ('1', '100'); insert into Employee (Id, Salary) values ('2', '200'); insert into Employee (Id, Salary) values ('3', '300'); insert into Employee (Id, Salary) values ('4', '400'); insert into Employee (Id, Salary) values ('5', '500'); insert into Employee (Id, Salary) values ('6', '600'); insert into Employee (Id, Salary) values ('7', '700'); insert into Employee (Id, Salary) values ('8', '800'); insert into Employee (Id, Salary) values ('9', '900'); insert into Employee (Id, Salary) values ('10', '1000');	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is "cards" - The column name is "frameEffects" - The value of "frameEffects" is "None" - The column name is "isFoil" - The value of "isFoil" is 1 - The column name is "isNonFoil" - The value of "isNonFoil" is 0 - The column name is "isFoilOnly" - The value of "isFoilOnly" is 0 - The column name is "isNonFoilOnly" - The value of "isNonFoilOnly" is 0 - The column name is "isOnlineOnly" - The value of "isOnlineOnly" is 0 - The column name is "isPartialPreview" - The value of "isPartialPreview" is 0 - The column name is "isReserved" - The value of "isReserved" is 0 - The column name is "isStarter" - The value of "isStarter" is 0 - The column name is "isStorySpotlight" - The value of "isStorySpotlight" is 0 - The column name is "isTextless" - The value of "isTextless" is 0 - The column name is "isTimeshifted" - The value of "isTimeshifted" is 0 - The column name is "hasAlternativeDeckLimit" - The value of "hasAlternativeDeckLimit" is 0 - The column name is "hasContentWarning" - The value of "hasContentWarning" is 0 - The column name is "hasFoil" - The value of "hasFoil" is 1 - The column name is "hasNonFoil" - The value of "hasNonFoil" is 1 - The column name is "isAlternative" - The value of "isAlternative" is 0 - The column name is "isFullArt" - The value of "isFullArt" is 0 - The column name is "isPromo" - The value of "isPromo" is 0 - The column name is "isReprint" - The value of "isReprint" is 0 - The column name is "multiverseId" -	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: 1. Find the oldest mythic card released. 2. Find the legal play formats of the oldest mythic card. 3. Find the oldest mythic card released in each format. 4. Find the legal play formats of the oldest mythic card in each format. 5. Find the oldest mythic card released in each format and its legal play formats. 6. Find the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats. 7. Find the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats. 8. Find the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats. 9. Find the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats. 10. Find the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats. 11. Find the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats, and the oldest mythic card released in each format and its legal play formats	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create a table named 'employees' with the following columns: id (integer), first_name (string), last_name (string), email (string), phone_number (string), hire_date (date), job_id (string), salary (integer), commission_pct (integer), manager_id (integer), department_id (integer)  The table should have the following constraints: id should be a primary key email should be unique phone_number should be unique hire_date should be a date job_id should be a foreign key referencing the 'jobs' table salary should be a non-negative integer commission_pct should be a non-negative integer manager_id should be a foreign key referencing the 'employees' table department_id should be a foreign key referencing the 'departments' table  The 'jobs' table should have the following columns: id (string), title (string), min_salary (integer), max_salary (integer)  The 'departments' table should have the following columns: id (integer), name (string)  The 'employees' table should have the following foreign key constraints: job_id should reference the 'id' column in the 'jobs' table manager_id should reference the 'id' column in the 'employees' table department_id should reference the 'id' column in the 'departments' table	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
 NOTES: - The table name is "cards" - The column name is "borderColor" - The value of "borderColor" is "black" - The table name is "cards" - The column name is "availability" - The value of "availability" is "arena" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is "None" - The table name is "cards" - The column name is "artist" - The value of "artist" is	card_games
 NOTES: - The table name is "cards" - The column name is "legalities" - The value of "format" is "old school" - The value of "status" is "restricted" or "banned" - The value of "uuid" is the uuid of the card - The result should be the uuid of the card in which the old school format is restricted or banned  SELECT uuid FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE format = 'old school' AND status ='restricted' OR status = 'banned';	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	card_games
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
 NOTES: 1. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users); 2. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0; 3. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0; 4. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0; 5. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0; 6. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0; 7. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0; 8. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0; 9. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0; 10. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0 AND Reputation!= 0; 11. SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation)	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
 NOTES: 1. SELECT UserId, MAX(ViewCount) FROM Users GROUP BY UserId; 2. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC; 3. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10; 4. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10 OFFSET 10; 5. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10 OFFSET 20; 6. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10 OFFSET 30; 7. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10 OFFSET 40; 8. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10 OFFSET 50; 9. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10 OFFSET 60; 10. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT 10 OFFSET 70; 11. SELECT Users.UserId, Users.DisplayName, Users.ViewCount FROM Users JOIN PostHistory ON Users.UserId = PostHistory.UserId GROUP BY Users.UserId ORDER BY Users.ViewCount DESC LIMIT	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
 NOTES: 1. Find the table that contains the column that you want to select 2. Find the column that you want to select 3. Write the sql 4. Add constraints 5. Add comments  SELECT COUNT(*) FROM votes WHERE UserId = 1;  SELECT COUNT(*) FROM votes WHERE UserId = 1;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.25. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.25;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
 NOTES: 1. Find the most influential user 2. Find the most recent post of the most influential user 3. Find the most recent comment of the most recent post of the most influential user 4. Find the most recent post of the most recent comment of the most influential user 5. Find the most recent comment of the most recent post of the most recent comment of the most influential user 6. Find the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 7. Find the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 8. Find the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 9. Find the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 10. Find the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 11. Find the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 12. Find the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 13. Find the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most influential user 14. Find the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent post of the most recent comment of the most recent	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.25. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.25;	codebase_community
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage greater than 0.5. SELECT name FROM employee WHERE salary > 2000 AND commission_pct > 0.5;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
 NOTES: - The table name is case sensitive, so please use the correct case. - The column name is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so please use the correct case. - The value in the [Value examples] is case sensitive, so	superhero
 NOTES: - The table name is superhero - The column name is superpower - The value of column is power_name - The value of column is power_id - The value of column is hero_id - The value of column is id - The value of column is superhero_name - The value of column is full_name - The value of column is gender_id - The value of column is eye_colour_id - The value of column is hair_colour_id - The value of column is skin_colour_id - The value of column is race_id - The value of column is publisher_id - The value of column is alignment_id - The value of column is height_cm - The value of column is weight_kg - The value of column is attribute_id - The value of column is attribute_name - The value of column is attribute_value - The value of column is colour - The value of column is gender - The value of column is publisher_name - The value of column is race - The value of column is alignment - The value of column is power_name - The value of column is power_id - The value of column is hero_id - The value of column is id - The value of column is superhero_name - The value of column is full_name - The value of column is gender_id - The value of column is eye_colour_id - The value of column is hair_colour_id - The value of column is skin_colour_id - The value of column is race_id - The value of column is publisher_id - The value of column is alignment_id - The value of column is height_cm - The value of column is weight_kg - The value of column is attribute_id - The value of column is attribute_name - The value of column is attribute_value - The value of column is colour - The value of column is gender - The value of column is publisher_name - The value of column is race - The value of column is alignment - The value of column is power_name - The value of column is power_id - The value of column is hero_id - The value of column is id 	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
 NOTES: - The table name is superhero - The column name is superhero_name - The value of superhero_name is 'Batman' - The column name is full_name - The value of full_name is '<NAME>' - The column name is gender_id - The value of gender_id is 1 - The column name is eye_colour_id - The value of eye_colour_id is 1 - The column name is hair_colour_id - The value of hair_colour_id is 1 - The column name is skin_colour_id - The value of skin_colour_id is 1 - The column name is race_id - The value of race_id is 1 - The column name is publisher_id - The value of publisher_id is 1 - The column name is alignment_id - The value of alignment_id is 1 - The column name is height_cm - The value of height_cm is 170 - The column name is weight_kg - The value of weight_kg is 70 - The table name is attribute - The column name is attribute_name - The value of attribute_name is 'Intelligence' - The column name is attribute_value - The value of attribute_value is 100 - The table name is colour - The column name is colour - The value of colour is 'Blue' - The table name is gender - The column name is gender - The value of gender is 'Male' - The table name is publisher - The column name is publisher_name - The value of publisher_name is 'DC Comics' - The table name is race - The column name is race - The value of race is 'Human' - The table name is superpower - The column name is power_name - The value of power_name is 'Super Speed' - The table name is hero_attribute - The column name is hero_id - The value of hero_id is 1 - The column name is attribute_id - The value of attribute_id is 1 - The column name is attribute_value - The value of attribute_value is 100 - The table name is	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
 NOTES: 1. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1; 2. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND alignment_id = 2; 3. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND alignment_id = 2 AND alignment_id = 3; 4. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3; 5. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3 AND alignment_id = 4; 6. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3 AND alignment_id = 4 AND alignment_id = 5; 7. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3 AND alignment_id = 4 AND alignment_id = 5 AND alignment_id = 6; 8. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3 AND alignment_id = 4 AND alignment_id = 5 AND alignment_id = 6 AND alignment_id = 7; 9. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3 AND alignment_id = 4 AND alignment_id = 5 AND alignment_id = 6 AND alignment_id = 7 AND alignment_id = 8; 10. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3 AND alignment_id = 4 AND alignment_id = 5 AND alignment_id = 6 AND alignment_id = 7 AND alignment_id = 8 AND alignment_id = 9; 11. SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 OR alignment_id = 2 OR alignment_id = 3 AND alignment_id = 4 AND alignment_id = 5 AND alignment_id = 6 AND alignment_id = 7 AND alignment_id = 8 AND alignment_id = 	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
 NOTES: 1. SELECT eye_colour_id FROM colour WHERE colour = 'Black'; 2. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black'; 3. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black' GROUP BY superhero.id; 4. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black' GROUP BY superhero.id ORDER BY eye_colour_id ASC; 5. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black' GROUP BY superhero.id ORDER BY eye_colour_id ASC LIMIT 1; 6. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black' GROUP BY superhero.id ORDER BY eye_colour_id ASC LIMIT 1; 7. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black' GROUP BY superhero.id ORDER BY eye_colour_id ASC LIMIT 1; 8. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black' GROUP BY superhero.id ORDER BY eye_colour_id ASC LIMIT 1; 9. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour = 'Black' GROUP BY superhero.id ORDER BY eye_colour_id ASC LIMIT 1; 10. SELECT superhero.id, superhero_name, eye_colour_id FROM superhero JOIN colour ON superhero.eye_colour_id = colour	superhero
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	superhero
josephchoe/database-message-store -- Verify database-message-store:privileges/reader/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.read_stream(varchar)', 'execute');  ROLLBACK;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int); Truncate table Employee; insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3'); insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4'); insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', null); insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', null);	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int); Truncate table Employee; insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3'); insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4'); insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', null); insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', null);	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int); Truncate table Employee; insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3'); insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4'); insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', null); insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', null);	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int); Truncate table Employee; insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3'); insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4'); insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', null); insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', null);	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Salary) values ('1', '100'); insert into Employee (Id, Salary) values ('2', '200'); insert into Employee (Id, Salary) values ('3', '300'); insert into Employee (Id, Salary) values ('4', '400'); insert into Employee (Id, Salary) values ('5', '500'); insert into Employee (Id, Salary) values ('6', '600'); insert into Employee (Id, Salary) values ('7', '700'); insert into Employee (Id, Salary) values ('8', '800'); insert into Employee (Id, Salary) values ('9', '900'); insert into Employee (Id, Salary) values ('10', '1000');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int); Truncate table Employee; insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3'); insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4'); insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', null); insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', null);	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int); Truncate table Employee; insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3'); insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4'); insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', null); insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', null);	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
 NOTES: - The table name is case sensitive, so be careful about the case. - The column name is case sensitive, so be careful about the case. - The value in the table is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case sensitive, so be careful about the case. - The value in the column is case	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int); Truncate table Employee; insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3'); insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4'); insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', null); insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', null);	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/writer/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.write(varchar, varchar, varchar, jsonb)', 'execute');  ROLLBACK;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
josephchoe/database-message-store -- Verify database-message-store:privileges/reader/functions on pg  BEGIN;  SELECT has_function_privilege('message_store.read_stream(varchar)', 'execute');  ROLLBACK;	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	formula_1
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	formula_1
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
 NOTES: - The table name is case sensitive. - The column name is case sensitive. - The value in the table is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
 NOTES: - The table name is case sensitive. - The column name is case sensitive. - The value in the table is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column is case sensitive. - The value in the column	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 and s.Salary < 80000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 and s.Salary < 80000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
 NOTES: - The table name is Player_Attributes - The column name is player_fifa_api_id - The value of player_fifa_api_id is 100 - The column name is player_api_id - The value of player_api_id is 100 - The column name is date - The value of date is 2019-01-01 - The column name is overall_rating - The value of overall_rating is 100 - The column name is potential - The value of potential is 100 - The column name is preferred_foot - The value of preferred_foot is 'Left' - The column name is attacking_work_rate - The value of attacking_work_rate is 'High' - The column name is defensive_work_rate - The value of defensive_work_rate is 'High' - The column name is crossing - The value of crossing is 100 - The column name is finishing - The value of finishing is 100 - The column name is heading_accuracy - The value of heading_accuracy is 100 - The column name is short_passing - The value of short_passing is 100 - The column name is volleys - The value of volleys is 100 - The column name is dribbling - The value of dribbling is 100 - The column name is curve - The value of curve is 100 - The column name is free_kick_accuracy - The value of free_kick_accuracy is 100 - The column name is long_passing - The value of long_passing is 100 - The column name is ball_control - The value of ball_control is 100 - The column name is acceleration - The value of acceleration is 100 - The column name is sprint_speed - The value of sprint_speed is 100 - The column name is agility - The value of agility is 100 - The column name is reactions - The value of reactions is 100	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 and s.Salary < 80000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
 NOTES: 1. Select the player_api_id of Aaron Lennon and Abdelaziz Barrada 2. Select the player_api_id of the older player 3. Select the player_name of the older player 4. Select the player_name of the younger player 5. Select the difference between the age of the two players 6. Select the difference between the age of the two players in years 7. Select the difference between the age of the two players in months 8. Select the difference between the age of the two players in days 9. Select the difference between the age of the two players in hours 10. Select the difference between the age of the two players in minutes 11. Select the difference between the age of the two players in seconds 12. Select the difference between the age of the two players in milliseconds 13. Select the difference between the age of the two players in microseconds 14. Select the difference between the age of the two players in nanoseconds 15. Select the difference between the age of the two players in picoseconds 16. Select the difference between the age of the two players in femtoseconds 17. Select the difference between the age of the two players in attoseconds 18. Select the difference between the age of the two players in zeptoseconds 19. Select the difference between the age of the two players in yoctoseconds 20. Select the difference between the age of the two players in exasoseconds 21. Select the difference between the age of the two players in femtoseconds 22. Select the difference between the age of the two players in attoseconds 23. Select the difference between the age of the two players in zeptoseconds 24. Select the difference between the age of the two players in yoctoseconds 25. Select the difference between the age of the two players in exasoseconds 26. Select the difference between the age of the two players in femtoseconds 27. Select the difference between the age of the two players in attoseconds 28. Select the difference between the age of the two players in zeptoseconds 29. Select the difference between the age of the two players in yoctoseconds 30. Select the difference between the age of the two players in exasoseconds 	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 and s.Salary < 80000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all the students who have a grade of 80 or higher in the course 'CS251'. SELECT name FROM students WHERE grade >= 80 AND course = 'CS251';	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
 NOTES: - The table name is Player_Attributes - The column name is sprint_speed, agility, acceleration - The value of sprint_speed, agility, acceleration is between 0 and 100 - The table name is Player - The column name is player_api_id - The value of player_api_id is 203025 - The table name is Team_Attributes - The column name is team_api_id - The value of team_api_id is 1001 - The table name is Team - The column name is team_api_id - The value of team_api_id is 1001 - The table name is Match - The column name is home_player_1 - The value of home_player_1 is 203025 - The table name is Match - The column name is away_player_1 - The value of away_player_1 is 203025 - The table name is Match - The column name is home_player_2 - The value of home_player_2 is 203025 - The table name is Match - The column name is away_player_2 - The value of away_player_2 is 203025 - The table name is Match - The column name is home_player_3 - The value of home_player_3 is 203025 - The table name is Match - The column name is away_player_3 - The value of away_player_3 is 203025 - The table name is Match - The column name is home_player_4 - The value of home_player_4 is 203025 - The table name is Match - The column name is away_player_4 - The value of away_player_4 is 203025 - The table name is Match - The column name is home_player_5 - The value of home_player_5 is 203025 - The table name is Match - The column name is away_player_5 - The value of away_player_5 is 20	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution 1(self, correct) select e.Name as Employee from Employee e left join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;  -- Solution 2(reference, correct) select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int); Create table If Not Exists Department (Id int, Name varchar(255)); Truncate table Employee; insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1'); insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Henry', '80000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Sam', '60000', '2'); insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Max', '90000', '1'); Truncate table Department; insert into Department (Id, Name) values ('1', 'IT'); insert into Department (Id, Name) values ('2', 'Sales');	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	european_football_2
Create table If Not Exists Employee (Id int, Name varchar(255)); Create table If Not Exists Salary (Id int, Salary int); Truncate table Employee; insert into Employee (Id, Name) values ('1', 'Joe'); insert into Employee (Id, Name) values ('2', 'Henry'); insert into Employee (Id, Name) values ('3', 'Sam'); insert into Employee (Id, Name) values ('4', 'Max'); Truncate table Salary; insert into Salary (Id, Salary) values ('1', '70000'); insert into Salary (Id, Salary) values ('2', '80000'); insert into Salary (Id, Salary) values ('3', '60000'); insert into Salary (Id, Salary) values ('4', '90000');  -- Solution  select e.Name as Employee from Employee e join Salary s on e.Id = s.Id where s.Salary > 70000 and s.Salary < 80000 order by e.Name;	european_football_2
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage greater than 0.5. SELECT name FROM employee WHERE salary > 2000 AND commission_pct > 0.5;	thrombosis_prediction
 NOTES: - The table name is case sensitive.  - The column name is case sensitive.  - The value in the table is case insensitive.  - The value in the column is case sensitive.  SELECT Patient.ID, Patient.Birthday, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgA > 1000 ORDER BY Patient.Birthday ASC;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
 NOTES: 1. Select the patients who has a normal level of anti-centromere and a normal level of anti-SSB. 2. Select the male patients. 3. Count the number of male patients.  SELECT COUNT(*) FROM Patient WHERE SEX = 'Male' AND CENTROMEA = 'Normal' AND SSB = 'Normal';	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	thrombosis_prediction
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all the students who have a grade of 80 or higher in the course "CS251". SELECT name FROM students WHERE grade >= 80 AND course = 'CS251';	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
 `SELECT` and `FROM` are required. SELECT last_name FROM member WHERE link_to_major = 'Law and Constitutional Studies';	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
 `SELECT <column>` and `FROM <table>` are required. SELECT SUM(cost)/COUNT(cost) AS average_cost FROM expense WHERE link_to_member = 'Elijah Allen' AND expense_date BETWEEN '2020-09-01' AND '2020-10-31';	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
 `SELECT <column>` and `FROM <table>` are required. SELECT * FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'School of Applied Sciences, Technology and Education';	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
 `SELECT <column>` and `FROM <table>` are required. SELECT member.first_name, member.last_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Interior Design' JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater';	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
 `SELECT <column>` and `FROM <table>` are required. SELECT source, SUM(amount) AS total_amount FROM income WHERE date_received LIKE '%2019-09%' GROUP BY source ORDER BY total_amount DESC;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
 `SELECT <column>` and `FROM <table>` are required. SELECT expense_description, SUM(cost) AS total_cost FROM expense JOIN budget ON budget.budget_id = expense.link_to_budget WHERE event_status = 'Approved' AND event_date = 'October Meeting' GROUP BY expense_description;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
 `SELECT` and `FROM` are required. SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' ORDER BY last_name ASC;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
 `SELECT <column>` and `FROM <table>` are required. SELECT member.first_name ||'' || member.last_name AS full_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense);	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.10;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	student_club
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.10;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
 NOTES: 1. Select the segment with the least consumption SELECT Segment FROM customers LEFT JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1; 2. Select the date with the least consumption SELECT Date FROM yearmonth LEFT JOIN customers ON yearmonth.CustomerID = customers.CustomerID GROUP BY Date ORDER BY SUM(Consumption) ASC LIMIT 1; 3. Select the gas station with the least consumption SELECT gasstations.GasStationID, gasstations.ChainID, gasstations.Country, gasstations.Segment, SUM(yearmonth.Consumption) AS Consumption FROM gasstations LEFT JOIN yearmonth ON gasstations.GasStationID = yearmonth.GasStationID GROUP BY gasstations.GasStationID ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1; 4. Select the product with the least consumption SELECT products.ProductID, products.Description, SUM(yearmonth.Consumption) AS Consumption FROM products LEFT JOIN yearmonth ON products.ProductID = yearmonth.ProductID GROUP BY products.ProductID ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1; 5. Select the customer with the least consumption SELECT customers.CustomerID, customers.Segment, customers.Currency, SUM(yearmonth.Consumption) AS Consumption FROM customers LEFT JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY customers.CustomerID ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1; 6. Select the card with the least consumption SELECT CardID, SUM(yearmonth.Consumption) AS Consumption FROM yearmonth GROUP BY CardID ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1; 7. Select the transaction with the least consumption SELECT TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price, SUM(yearmonth.Consumption) AS Consumption FROM yearmonth GROUP BY TransactionID ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.10;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.10. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.10;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000.  SELECT name FROM employee WHERE salary > 2000;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.1. SELECT name FROM employee WHERE salary > 2000 AND commission_pct = 0.1;	debit_card_specializing
Create a SQL query to find the names of all employees who have a salary greater than 2000 and a commission percentage of 0.15. SELECT name FROM employees WHERE salary > 2000 AND commission_pct = 0.15;	debit_card_specializing
