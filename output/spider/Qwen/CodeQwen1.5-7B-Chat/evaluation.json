[
  {
    "idx": 0,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT count(*) FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(Singer_ID) FROM singer",
    "exec_result": 1
  },
  {
    "idx": 2,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC",
    "exec_result": 1
  },
  {
    "idx": 3,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC",
    "exec_result": 1
  },
  {
    "idx": 4,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT avg(age) as average, min(age) as minimum, max(age) as maximum FROM singer WHERE country = 'France'",
    "exec_result": 1
  },
  {
    "idx": 5,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT avg(age), min(age), max(age) FROM singer WHERE Country = 'France'",
    "exec_result": 1
  },
  {
    "idx": 6,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT t1.name, t1.song_release_year  FROM singer AS t1  JOIN singer_in_concert AS t2 ON t1.singer_id = t2.singer_id  WHERE t1.age = (SELECT min(age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 7,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT S.Name, S.Song_release_year FROM singer AS S WHERE S.Age = (SELECT min(Age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 8,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT Country FROM singer WHERE Age > 20",
    "exec_result": 1
  },
  {
    "idx": 9,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT country FROM singer WHERE age > 20",
    "exec_result": 1
  },
  {
    "idx": 10,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT T1.Country, COUNT(T2.Singer_ID) FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Country",
    "exec_result": 0
  },
  {
    "idx": 11,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT COUNT(T1.Singer_ID) ,  T2.Country FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Country",
    "exec_result": 0
  },
  {
    "idx": 12,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT DISTINCT SINGER.Song_Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE singer.Age > (SELECT AVG(Age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 13,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
    "exec_result": 1
  },
  {
    "idx": 14,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT location ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "exec_result": 1
  },
  {
    "idx": 15,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT `Location`, `Name` FROM `stadium` WHERE `Capacity` BETWEEN 5000 AND 10000",
    "exec_result": 1
  },
  {
    "idx": 16,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select max(capacity), average from stadium",
    "pred": "SELECT MAX(Capacity) , AVG(Average) FROM stadium",
    "exec_result": 0
  },
  {
    "idx": 17,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select avg(capacity) ,  max(capacity) from stadium",
    "pred": "SELECT AVG(Capacity) as avg_capacity, MAX(Capacity) as max_capacity FROM stadium",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT T1.name ,  T1.capacity FROM stadium AS T1 JOIN singer_in_concert AS T2 ON T1.stadium_id = T2.stadium_id JOIN singer AS T3 ON T3.singer_id = T2.singer_id WHERE T3.song_name = (SELECT MAX(song_name) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 19,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Capacity FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T2.Stadium_ID ORDER BY AVG(T2.Average) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 20,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(DISTINCT Year) FROM concert WHERE Year IN ('2014', '2015')",
    "exec_result": 1
  },
  {
    "idx": 21,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(concert_ID) FROM concert WHERE YEAR IN (2014, 2015)",
    "exec_result": 1
  },
  {
    "idx": 22,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT t1.name, count(*) FROM stadium AS t1 JOIN concert AS t2 ON t1.stadium_id  =  t2.stadium_id GROUP BY t1.name",
    "exec_result": 1
  },
  {
    "idx": 23,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT COUNT(*) FROM concert",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name, capacity FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year >= 2014 GROUP BY stadium_id ORDER BY count(*) DESC LIMIT 1);",
    "exec_result": 1
  },
  {
    "idx": 25,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "pred": "SELECT T1.Location, T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > 2013 GROUP BY T1.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 26,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Year, COUNT(*) as Number_of_Concerts FROM concert GROUP BY Year ORDER BY Number_of_Concerts DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 27,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 28,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)",
    "exec_result": 1
  },
  {
    "idx": 29,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT T1.Location, T1.Name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Stadium_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 30,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "pred": "SELECT T2.Country FROM singer AS T1 JOIN singer AS T2 ON T1.Name = T2.Name WHERE T1.Is_male = 1 AND T1.Age > 40 AND T2.Is_male = 0 AND T2.Age < 30",
    "exec_result": 0
  },
  {
    "idx": 31,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT s.Name FROM stadium AS s JOIN concert AS c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year != '2014'",
    "exec_result": 0
  },
  {
    "idx": 32,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT T2.name FROM stadium AS T1 LEFT JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year != '2014' OR T2.stadium_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 33,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "pred": "SELECT t1.concert_Name ,  t1.Theme ,  count(t2.Singer_ID) FROM concert AS t1 JOIN singer_in_concert AS t2 ON t1.concert_ID  =  t2.concert_ID GROUP BY t1.concert_Name ,  t1.Theme",
    "exec_result": 1
  },
  {
    "idx": 34,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "pred": "SELECT C.concert_name, C.theme, COUNT(SI.Singer_ID) FROM concert C JOIN singer_in_concert SI ON C.concert_id = SI.concert_id GROUP BY C.concert_name, C.theme",
    "exec_result": 1
  },
  {
    "idx": 35,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT T1.Name, COUNT(T3.concert_ID) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID GROUP BY T1.Name",
    "exec_result": 1
  },
  {
    "idx": 36,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT s.name, COUNT(sc.concert_id) FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.singer_id, s.name",
    "exec_result": 1
  },
  {
    "idx": 37,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT T2.Name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID WHERE T3.Year = 2014",
    "exec_result": 1
  },
  {
    "idx": 38,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT DISTINCT s.Name  FROM singer s  JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID  JOIN concert c ON sic.concert_ID = c.concert_ID  WHERE c.Year = '2014'",
    "exec_result": 1
  },
  {
    "idx": 39,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT Name FROM singer WHERE Song_Name LIKE '%Hey%'",
    "exec_result": 0
  },
  {
    "idx": 40,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT T1.Name, T1.Country FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T2.concert_ID = T3.concert_ID WHERE T3.concert_Name LIKE '%Hey%'",
    "exec_result": 0
  },
  {
    "idx": 41,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT DISTINCT T1.name ,  T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = '2014' INTERSECT SELECT DISTINCT T1.name ,  T1.location FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id WHERE T2.year = '2015'",
    "exec_result": 1
  },
  {
    "idx": 42,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT Name, Location FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE Year IN ('2014', '2015') GROUP BY Stadium_ID HAVING COUNT(DISTINCT Year) = 2)",
    "exec_result": 1
  },
  {
    "idx": 43,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(DISTINCT C.concert_ID) FROM stadium AS S JOIN concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE S.Capacity = (SELECT MAX(Capacity) FROM stadium)",
    "exec_result": 1
  },
  {
    "idx": 44,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(*) FROM concert AS t1 JOIN stadium AS t2 ON t1.Stadium_ID = t2.Stadium_ID WHERE t2.Capacity = (SELECT MAX(Capacity) FROM stadium)",
    "exec_result": 1
  },
  {
    "idx": 45,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(PetID) FROM Pets WHERE weight > 10",
    "exec_result": 1
  },
  {
    "idx": 46,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.weight > 10",
    "exec_result": 1
  },
  {
    "idx": 47,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT weight FROM Pets WHERE PetType = 'Dog' ORDER BY pet_age ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 48,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT MIN(P.weight) FROM Pets AS P JOIN Has_Pet AS HP ON P.PetID = HP.PetID ORDER BY P.pet_age ASC",
    "exec_result": 1
  },
  {
    "idx": 49,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT PetType, MAX(weight)  FROM Pets  GROUP BY PetType",
    "exec_result": 1
  },
  {
    "idx": 50,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT P.PetType, max(P.weight) FROM Pets P JOIN Has_Pet HP on HP.PetID = P.PetID",
    "exec_result": 0
  },
  {
    "idx": 51,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*) FROM Has_Pet INNER JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20",
    "exec_result": 1
  },
  {
    "idx": 52,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(T1.StuID) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20",
    "exec_result": 1
  },
  {
    "idx": 53,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(p.PetID) AS num_dogs_female FROM Has_Pet hp JOIN Student s ON hp.StuID = s.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog' AND s.Sex = 'F'",
    "exec_result": 1
  },
  {
    "idx": 54,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(*) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType = 'dog' AND T2.Sex = 'F'",
    "exec_result": 1
  },
  {
    "idx": 55,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) FROM Pets",
    "exec_result": 1
  },
  {
    "idx": 56,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) FROM Pets",
    "exec_result": 1
  },
  {
    "idx": 57,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT StuID FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.PetType = 'cat' OR T2.PetType = 'dog'",
    "exec_result": 0
  },
  {
    "idx": 58,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT T3.fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T2.PetID WHERE T3.PetType = 'Cat' OR T3.PetType = 'Dog'",
    "exec_result": 0
  },
  {
    "idx": 59,
    "db_id": "pets_1",
    "question": "",
    "gold": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "pred": "SELECT StuID FROM Student WHERE StuID IN ( SELECT Student.StuID FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' INTERSECT SELECT Student.StuID FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' ) INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID",
    "exec_result": 0
  },
  {
    "idx": 60,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT T2.Fname FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T1.PetID = T3.PetID WHERE T3.PetType IN ('Cat', 'Dog') GROUP BY T2.Fname HAVING COUNT(DISTINCT T3.PetType) = 2",
    "exec_result": 1
  },
  {
    "idx": 61,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')",
    "exec_result": 1
  },
  {
    "idx": 62,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT T2.Major, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType != 'cat'",
    "exec_result": 0
  },
  {
    "idx": 63,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT DISTINCT StuID FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType <> 'Cat' OR Pets.PetType IS NULL",
    "exec_result": 0
  },
  {
    "idx": 64,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT DISTINCT s.StuID FROM Student s LEFT JOIN Has_Pet hp ON s.StuID = hp.StuID LEFT JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType IS NULL OR p.PetType <> 'cat'",
    "exec_result": 0
  },
  {
    "idx": 65,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT T.fname, T.age FROM Student AS T  JOIN Has_Pet AS H ON T.stuid = H.stuid  JOIN Pets AS P ON H.petid = P.petid  WHERE P.pettype = 'dog' AND T.stuid NOT IN (SELECT H.stuid FROM Has_Pet AS H JOIN Pets AS P ON H.petid = P.petid WHERE P.pettype = 'cat')",
    "exec_result": 1
  },
  {
    "idx": 66,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Dog')) AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat'))",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT PetType, weight FROM Pets ORDER BY pet_age ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 68,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT PetType, weight FROM ( SELECT T1.PetType, T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID ORDER BY T1.weight ASC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 69,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT PetID, weight FROM Pets WHERE pet_age > 1",
    "exec_result": 1
  },
  {
    "idx": 70,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT PetID, weight FROM Pets WHERE pet_age  >  1",
    "exec_result": 1
  },
  {
    "idx": 71,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaxAge FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",
    "exec_result": 1
  },
  {
    "idx": 72,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) AS average_age, MAX(pet_age) AS max_age FROM Pets GROUP BY PetType",
    "exec_result": 1
  },
  {
    "idx": 73,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT AVG(weight) FROM Pets",
    "exec_result": 0
  },
  {
    "idx": 74,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT p.PetType, AVG(p.weight) AS avg_weight FROM Pets p JOIN Has_Pet hp ON p.PetID = hp.PetID GROUP BY p.PetType",
    "exec_result": 1
  },
  {
    "idx": 75,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT Fname , Age FROM STUDENT  JOIN Has_Pet ON STUDENT.StuID = Has_Pet.StuID",
    "exec_result": 1
  },
  {
    "idx": 76,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT T1.Fname, T1.age FROM STUDENT AS T1 JOIN HAS_PET AS T2 ON T1.StuID = T2.StuID",
    "exec_result": 1
  },
  {
    "idx": 77,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'",
    "exec_result": 0
  },
  {
    "idx": 78,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE LName = 'Smith')",
    "exec_result": 1
  },
  {
    "idx": 79,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "pred": "SELECT StuID, COUNT(Has_Pet.PetID) as PetCount FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID GROUP BY StuID;",
    "exec_result": 0
  },
  {
    "idx": 80,
    "db_id": "pets_1",
    "question": "",
    "gold": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "pred": "SELECT StuID, COUNT(DISTINCT PetID)  FROM Has_Pet GROUP BY StuID",
    "exec_result": 1
  },
  {
    "idx": 81,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT T1.Fname, T1.Sex FROM STUDENT AS T1 JOIN HAS_PET AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 82,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT T1.Fname, T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.Fname, T1.Sex HAVING COUNT(T2.PetID) > 1",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT LName FROM Student WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat' AND pet_age = 3)",
    "exec_result": 0
  },
  {
    "idx": 84,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT Lname FROM student JOIN has_pet ON student.StuID = has_pet.StuID JOIN pets ON has_pet.PetID = pets.PetID WHERE pets.PetType = 'cat' AND pets.pet_age = 3",
    "exec_result": 1
  },
  {
    "idx": 85,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(age) FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet )",
    "exec_result": 1
  },
  {
    "idx": 86,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
    "exec_result": 1
  },
  {
    "idx": 87,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(Continent) FROM continents",
    "exec_result": 1
  },
  {
    "idx": 88,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(ContId) FROM continents",
    "exec_result": 1
  },
  {
    "idx": 89,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT Continent, ContinentName, COUNT(CountryId) as NumberOfCountries FROM countries JOIN continents ON countries.Continent = continents.ContId GROUP BY Continent",
    "exec_result": 0
  },
  {
    "idx": 90,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT ContId, Continent, COUNT(CountryName) FROM countries GROUP BY ContId",
    "exec_result": 0
  },
  {
    "idx": 91,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT COUNT(*) FROM countries",
    "exec_result": 1
  },
  {
    "idx": 92,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT count(*) FROM countries",
    "exec_result": 1
  },
  {
    "idx": 93,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT FullName, id, COUNT(Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY FullName, id",
    "exec_result": 1
  },
  {
    "idx": 94,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT T3.id ,  T2.fullname ,  COUNT(T4.model) FROM car_makers AS T1 JOIN countries AS T2 ON T2.CountryId = T1.Country JOIN model_list AS T4 ON T4.Maker = T1.Id GROUP BY T3.id ,  T2.fullname",
    "exec_result": 0
  },
  {
    "idx": 95,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT T2.Model FROM car_names AS T1 JOIN model_list AS T2 ON T1.MakeId = T2.ModelId ORDER BY T2.Horsepower ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT Model FROM model_list WHERE Id = ( SELECT Maker FROM car_makers WHERE Horsepower = ( SELECT MIN(Horsepower) FROM car_makers ) )",
    "exec_result": 0
  },
  {
    "idx": 97,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT T4.Model FROM cars_data AS T1  JOIN car_names AS T2 ON T2.MakeId = T1.Id  JOIN model_list AS T3 ON T3.Model = T2.Model  JOIN car_makers AS T4 ON T4.Id = T3.Maker  WHERE T1.Weight < (SELECT AVG(T1.Weight) FROM cars_data AS T1  JOIN car_names AS T2 ON T2.MakeId = T1.Id)",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data)",
    "exec_result": 1
  },
  {
    "idx": 99,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = 1970",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT Maker  FROM car_makers  WHERE Year = 1970",
    "exec_result": 0
  },
  {
    "idx": 101,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT cn.Make, cn.Model FROM car_names AS cn INNER JOIN cars_data AS cd ON cn.MakeId = cd.Id ORDER BY cd.Year ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 102,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT Maker FROM car_makers WHERE Id IN (SELECT Maker FROM car_names GROUP BY Model ORDER BY MIN(MakeId) ASC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 103,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT car_names.Model FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.Year > 1980",
    "exec_result": 0
  },
  {
    "idx": 104,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.Make IN ( SELECT Country FROM car_makers WHERE YEAR > 1980 )",
    "exec_result": 0
  },
  {
    "idx": 105,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT t1.continent, count(*) FROM countries AS t1 JOIN car_makers AS t2 ON t1.countryid  =  t2.country GROUP BY t1.continent",
    "exec_result": 0
  },
  {
    "idx": 106,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT C.Continent, COUNT(M.Id) FROM continents AS C JOIN countries AS Co ON C.ContId = Co.Continent JOIN car_makers AS M ON Co.CountryId = M.Country GROUP BY C.Continent",
    "exec_result": 1
  },
  {
    "idx": 107,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T1.Id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 108,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId GROUP BY T2.CountryName ORDER BY COUNT(T2.CountryId) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 109,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "pred": "SELECT Count(*), T2.FullName FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.FullName",
    "exec_result": 1
  },
  {
    "idx": 110,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "pred": "SELECT maker, count(*), id, fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model GROUP BY maker",
    "exec_result": 0
  },
  {
    "idx": 111,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT accelerate FROM cars_data WHERE Make IN (SELECT Id FROM car_makers WHERE FullName = 'amc hornet sportabout (sw)')",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT AVG(Accelerate) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'amc hornet sportabout' AND T2.Make = 'sw'",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(DISTINCT T2.Id) FROM countries AS T1  JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = 'France'",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = \"France\"",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(Model) FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Country IN (SELECT CountryId FROM countries WHERE CountryName = 'USA'))",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(Model) FROM model_list WHERE Country IN (SELECT CountryId FROM countries WHERE CountryName = 'United States')",
    "exec_result": 0
  },
  {
    "idx": 117,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(T3.MPG) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Cylinders = 4",
    "exec_result": 0
  },
  {
    "idx": 118,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(cars_data.MPG) FROM cars_data INNER JOIN model_list ON cars_data.Id = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Country = 1 AND car_makers.FullName = 'Mazda'",
    "exec_result": 0
  },
  {
    "idx": 119,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT Weight FROM cars_data WHERE Cylinders = 8 AND Year = 1974 ORDER BY Weight ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 120,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT MIN(t1.Weight) FROM cars_data AS t1 JOIN car_names AS t2 ON t1.Id = t2.MakeId JOIN model_list AS t3 ON t2.Model = t3.Model WHERE t1.Cylinders = 8 AND t1.Year = 1974",
    "exec_result": 1
  },
  {
    "idx": 121,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT Maker, Model FROM model_list",
    "exec_result": 1
  },
  {
    "idx": 122,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT Maker FROM car_makers",
    "exec_result": 0
  },
  {
    "idx": 123,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT CountryName ,  CountryId FROM countries",
    "exec_result": 0
  },
  {
    "idx": 124,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT DISTINCT CountryName FROM countries",
    "exec_result": 0
  },
  {
    "idx": 125,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT count(*) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Id WHERE Horsepower  >  150",
    "exec_result": 0
  },
  {
    "idx": 126,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150",
    "exec_result": 1
  },
  {
    "idx": 127,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT AVG(T2.Weight) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Year",
    "exec_result": 0
  },
  {
    "idx": 128,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT Year ,  AVG(weight) ,  AVG(Year) FROM cars_data GROUP BY Year",
    "exec_result": 0
  },
  {
    "idx": 129,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') AND CountryId IN (SELECT Country FROM car_makers WHERE Maker IN (SELECT Id FROM car_makers WHERE Country IN (SELECT CountryId FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')))) AND CountryId IN (SELECT DISTINCT Country FROM car_makers WHERE Maker IN (SELECT Id FROM car_makers WHERE Country IN (SELECT CountryId FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')))) GROUP BY CountryName HAVING COUNT(DISTINCT Maker) >= 3",
    "exec_result": 0
  },
  {
    "idx": 130,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT T1.Continent FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent HAVING COUNT(DISTINCT T3.Maker)  >=  3",
    "exec_result": 0
  },
  {
    "idx": 131,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT HORSEPOWER, Make FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cylinders = 3 ORDER BY HORSEPOWER DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 132,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT car_makers.Maker FROM car_makers WHERE car_makers.Country = ( SELECT countries.CountryId FROM countries WHERE countries.Continent = ( SELECT continents.ContId FROM continents WHERE continents.Continent = \"North America\" ) ) AND model_list.Model IN ( SELECT cars_data.Make FROM cars_data WHERE cars_data.Cylinders = 3 ) ORDER BY cars_data.Horsepower DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 133,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "pred": "SELECT Model FROM car_names WHERE MakeId IN ( SELECT Id FROM cars_data ORDER BY MPG DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 134,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "pred": "SELECT T4.Model FROM model_list AS T1 JOIN car_names AS T2 ON T2.Model = T1.ModelId JOIN cars_data AS T3 ON T3.MakeId = T1.Model JOIN car_makers AS T4 ON T4.Id = T1.Maker ORDER BY T3.MPG DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 135,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "pred": "SELECT AVG(T1.Horsepower) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Year < 1980",
    "exec_result": 0
  },
  {
    "idx": 136,
    "db_id": "car_1",
    "question": "",
    "gold": "select avg(horsepower) from cars_data where year  <  1980;",
    "pred": "SELECT AVG(Horsepower) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Year < 1980",
    "exec_result": 0
  },
  {
    "idx": 137,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(T1.Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo'",
    "exec_result": 1
  },
  {
    "idx": 138,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(Edispl) FROM cars_data WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker = 'volvo'))",
    "exec_result": 0
  },
  {
    "idx": 139,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",
    "exec_result": 1
  },
  {
    "idx": 140,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT MAX(Accelerate) FROM cars_data",
    "exec_result": 0
  },
  {
    "idx": 141,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model GROUP BY model ORDER BY COUNT(T2.Make) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 142,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Model  FROM model_list  GROUP BY Model  ORDER BY COUNT(*) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 143,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(Id) FROM cars_data WHERE Cylinders > 4",
    "exec_result": 1
  },
  {
    "idx": 144,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders > 4",
    "exec_result": 1
  },
  {
    "idx": 145,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Year = 1980",
    "exec_result": 1
  },
  {
    "idx": 146,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*) FROM car_names WHERE Make IN (SELECT Id FROM car_names WHERE Year = 1980)",
    "exec_result": 0
  },
  {
    "idx": 147,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(model_list.ModelId)  FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.FullName = 'American Motor Company'",
    "exec_result": 1
  },
  {
    "idx": 148,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT count(T1.Model) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Id WHERE T2.Maker  =  'American Motor Company'",
    "exec_result": 0
  },
  {
    "idx": 149,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT T1.fullname, T1.id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id = T2.maker GROUP BY T1.fullname, T1.id HAVING COUNT(*) > 3",
    "exec_result": 1
  },
  {
    "idx": 150,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT Id, Maker FROM car_makers WHERE Id IN ( SELECT Maker FROM model_list GROUP BY Maker HAVING count(Model) > 3 )",
    "exec_result": 0
  },
  {
    "idx": 151,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT model FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE FullName = 'General Motors') AND Model IN (SELECT Model FROM cars_data WHERE Weight > 3500)",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT T3.Model FROM model_list AS T1  JOIN car_makers AS T2 ON T1.Maker = T2.Id  JOIN car_names AS T3 ON T1.Model = T3.Model  JOIN cars_data AS T4 ON T3.MakeId = T4.Id  WHERE T2.Maker IN ('General Motors')  OR T4.Weight > 3500;",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000",
    "exec_result": 1
  },
  {
    "idx": 154,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT Year FROM cars_data WHERE Weight < 4000 UNION SELECT Year FROM cars_data WHERE Weight > 3000",
    "exec_result": 0
  },
  {
    "idx": 155,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT MAX(Horsepower), cn.Model, cm.Maker FROM car_names cn JOIN car_makers cm ON cn.Make = cm.Maker JOIN cars_data cd ON cd.Id = cm.Id WHERE cd.Accelerate = (SELECT MAX(Accelerate) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 156,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT MIN(Cars_data.Cylinders)  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN cars_data ON cars_data.Id = model_list.Model  WHERE car_makers.Maker = \"volvo\" AND cars_data.Accelerate = (SELECT MIN(Accelerate) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 158,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT cars_data.Cylinders FROM cars_data AS cars_data JOIN car_names AS car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'Volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 159,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "To solve this problem, we need to find the car with the largest horsepower and then count the number of cars with an accelerate greater than this car.   Here's the SQL to do this:  ```sql SELECT COUNT(*)  FROM cars_data WHERE cars_data.Id IN (     SELECT car_names.MakeId     FROM car_names     JOIN model_list ON car_names.Model = model_list.Model     JOIN car_makers ON model_list.Maker = car_makers.Id     WHERE car_makers.Horsepower > (         SELECT MAX(car_makers.Horsepower)          FROM car_makers     ) ); ```  This SQL statement works as follows:  1. It first selects the MakeId from car_names and car_makers tables where the Horsepower is greater than the maximum Horsepower. 2. It then counts the number of rows returned by the subquery, which represents the number of cars with a horsepower greater than the highest horsepower.",
    "exec_result": 0
  },
  {
    "idx": 160,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Horsepower = (SELECT MAX(Horsepower) FROM model_list))) AND Accelerate > (SELECT MAX(Accelerate) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 161,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(DISTINCT T1.CountryName) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T2.Id IN ( SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(Model)  >  2 )",
    "exec_result": 0
  },
  {
    "idx": 162,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(*) FROM countries GROUP BY CountryName HAVING COUNT(Continent) > 2",
    "exec_result": 0
  },
  {
    "idx": 163,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6",
    "exec_result": 1
  },
  {
    "idx": 164,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6",
    "exec_result": 1
  },
  {
    "idx": 165,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId  =  T2.Id WHERE T2.Cylinders  =  4 AND T2.Horsepower  >  0 ORDER BY T2.Horsepower DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 166,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT T4.Model, T1.Horsepower  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  JOIN model_list AS T3 ON T2.Model = T3.Model  JOIN car_makers AS T4 ON T3.Maker = T4.Id  WHERE T1.Cylinders = 4  ORDER BY T1.Horsepower DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 167,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "pred": "SELECT DISTINCT T2.MakeId, T2.Make  FROM model_list AS T1  JOIN car_makers AS T2 ON T2.Id = T1.Maker  WHERE T1.Model IN (      SELECT Model      FROM cars_data      WHERE Horsepower > (          SELECT MIN(Horsepower)          FROM cars_data      )      AND Cylinders <= 3  )",
    "exec_result": 0
  },
  {
    "idx": 168,
    "db_id": "car_1",
    "question": "",
    "gold": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "pred": "SELECT id FROM cars_data WHERE Horsepower < (SELECT min(Horsepower) FROM cars_data) AND Cylinders < 4",
    "exec_result": 0
  },
  {
    "idx": 169,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT cars_data.MPG  FROM cars_data  JOIN model_list ON cars_data.Id = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Cylinders = 8 AND car_makers.Year < 1980  ORDER BY cars_data.MPG DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 170,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT MAX(T1.MPG) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T1.Cylinders = 8 OR T1.Year < 1980",
    "exec_result": 1
  },
  {
    "idx": 171,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT T3.Model  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  JOIN model_list AS T3 ON T2.Model = T3.Model  JOIN car_makers AS T4 ON T3.Maker = T4.Id  WHERE T4.FullName != 'Ford Motor Company' AND T1.Weight < 3500",
    "exec_result": 1
  },
  {
    "idx": 172,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model JOIN cars_data AS T3 ON T2.MakeId = T3.Id JOIN car_makers AS T4 ON T2.Make = T4.Maker WHERE T4.Maker != 'Ford Motor Company' AND T3.Weight < 3500",
    "exec_result": 0
  },
  {
    "idx": 173,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT CountryName FROM countries WHERE Continent NOT IN ( SELECT ContId FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY countries.Continent )",
    "exec_result": 0
  },
  {
    "idx": 174,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT DISTINCT countries.CountryName FROM countries WHERE NOT EXISTS (SELECT car_makers.Id FROM car_makers WHERE countries.CountryId = car_makers.Country)",
    "exec_result": 1
  },
  {
    "idx": 175,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "pred": "SELECT M.MakerId, M.Maker FROM car_makers AS M GROUP BY M.MakerHaving COUNT(M.Id) > 2",
    "exec_result": 0
  },
  {
    "idx": 176,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT DISTINCT T1.Id, T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker WHERE T1.Maker IN ( SELECT T2.Maker FROM model_list AS T2 GROUP BY T2.Maker HAVING COUNT(T2.Model) >= 2 ) AND T1.Maker IN ( SELECT T3.Maker FROM cars_data AS T3 GROUP BY T3.Id HAVING COUNT(T3.Id) > 3 )",
    "exec_result": 0
  },
  {
    "idx": 177,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "pred": "SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker IN (SELECT Maker FROM model_list WHERE Model = 'fiat'))) AND CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3)",
    "exec_result": 0
  },
  {
    "idx": 178,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "pred": "1. What are the ids and names of all countries that either have more than 3 car makers or produce Fiat model?  ```sql SELECT c.CountryId, c.CountryName FROM countries c JOIN (     SELECT Country     FROM car_makers     GROUP BY Country     HAVING COUNT(Maker) > 3 ) cm ON c.CountryId = cm.Country WHERE c.CountryName IN (     SELECT cm2.CountryName     FROM car_makers cm2     JOIN model_list ml ON cm2.Id = ml.Maker     WHERE ml.Model LIKE '%Fiat%' ) ``` 2. When generating SQL, we should always consider constraints: - In `SELECT <column>`, just select needed columns in the question without any unnecessary column or 1  - In `FROM <table>` or `JOIN <table>`, do not include unnecessary table  - If use max or min func, `JOIN <table>` FIRST, THEN use `SELECT MAX(<column>)` or `SELECT MIN(<column>)`  - If [Value examples] of <column> has 'None' or None, use `JOIN <table>` or `WHERE <column> is NOT NULL` is better  - If use `ORDER BY <column> ASC|DESC`, add `GROUP BY <column>` before to select distinct 1s",
    "exec_result": 0
  },
  {
    "idx": 179,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT T1.country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline JOIN airports AS T3 ON T2.SourceAirport  =  T3.AirportCode WHERE T1.Airline  =  \"JetBlue Airways\"",
    "exec_result": 0
  },
  {
    "idx": 180,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT T1.Country FROM airlines AS T1 INNER JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = 'Jetblue Airways'",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'",
    "exec_result": 1
  },
  {
    "idx": 182,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'",
    "exec_result": 0
  },
  {
    "idx": 183,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT airlines.Airline ,  airlines.Abbreviation FROM airlines JOIN airports ON airlines.Country = 'USA'",
    "exec_result": 0
  },
  {
    "idx": 184,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT Airline, Abbreviation  FROM airlines  WHERE Country = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 185,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT T1.AirportCode, T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T1.City = 'Anthony' GROUP BY T1.AirportCode, T1.AirportName",
    "exec_result": 1
  },
  {
    "idx": 186,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT count(*) FROM airlines",
    "exec_result": 1
  },
  {
    "idx": 188,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT COUNT(uid) FROM airlines",
    "exec_result": 1
  },
  {
    "idx": 189,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(*) FROM airports",
    "exec_result": 1
  },
  {
    "idx": 190,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT count(*) FROM airports",
    "exec_result": 1
  },
  {
    "idx": 191,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) FROM flights",
    "exec_result": 1
  },
  {
    "idx": 192,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(flightno)  FROM flights",
    "exec_result": 1
  },
  {
    "idx": 193,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT * FROM airlines WHERE Abbreviation='UAL'",
    "exec_result": 0
  },
  {
    "idx": 194,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT DISTINCT Country FROM airlines WHERE Abbreviation = 'UAL'  The SQL statement above retrieves distinct countries from the airlines table where the abbreviation is 'UAL'. It utilizes a WHERE clause to filter results based on the condition of Abbreviation = 'UAL'. The DISTINCT keyword ensures that only unique countries are returned.",
    "exec_result": 0
  },
  {
    "idx": 195,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) FROM airlines WHERE Country = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 196,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT count(*) FROM airlines WHERE Country = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 197,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT City, Country FROM airports WHERE AirportName = 'Alton'",
    "exec_result": 1
  },
  {
    "idx": 198,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT Country FROM airports WHERE AirportCode = 'KALA';",
    "exec_result": 1
  },
  {
    "idx": 199,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'",
    "exec_result": 1
  },
  {
    "idx": 200,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'",
    "exec_result": 1
  },
  {
    "idx": 201,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 202,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.AirportCode = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 204,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(flights.FlightNo) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 205,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'ATO'",
    "exec_result": 1
  },
  {
    "idx": 206,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'",
    "exec_result": 1
  },
  {
    "idx": 207,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 208,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'ABE'",
    "exec_result": 1
  },
  {
    "idx": 209,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(T2.FlightNo)  FROM airports AS T1  JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T1.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 210,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM airports WHERE City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 211,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T1.DestAirport = 'ASX' AND T2.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 212,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'AEY' AND DestAirport = 'SDR'",
    "exec_result": 1
  },
  {
    "idx": 213,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'JetBlue Airways'",
    "exec_result": 1
  },
  {
    "idx": 214,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(DISTINCT t2.FlightNo) FROM airlines AS t1 JOIN flights AS t2 ON t1.uid = t2.Airline WHERE t1.Airline = 'Jetblue Airways'",
    "exec_result": 0
  },
  {
    "idx": 215,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  'United Airlines' AND T2.SourceAirport  =  'ASY'",
    "exec_result": 1
  },
  {
    "idx": 216,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*) FROM airlines AS airlines_1 JOIN flights AS flights_1 ON airlines_1.uid = flights_1.Airline JOIN airports AS airports_1 ON flights_1.DestAirport = airports_1.AirportCode WHERE airlines_1.Airline = 'United Airlines' AND airports_1.AirportCode = 'ASY'",
    "exec_result": 1
  },
  {
    "idx": 217,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 INNER JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode INNER JOIN airlines AS T3 ON T1.Airline = T3.uid WHERE T3.Airline = 'United Airlines' AND T2.AirportName = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 218,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*)  FROM flights  INNER JOIN airports ON flights.SourceAirport = airports.AirportCode  INNER JOIN airlines ON flights.Airline = airlines.uid  WHERE airlines.Airline = 'United Airlines' AND airports.AirportName = 'AHD Airport'",
    "exec_result": 1
  },
  {
    "idx": 219,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*) FROM flights AS t1 JOIN airports AS t2 ON t1.DestAirport = t2.AirportCode JOIN airlines AS t3 ON t3.uid = t1.Airline WHERE t2.City = 'Aberdeen' AND t3.Airline = 'United Airlines'",
    "exec_result": 1
  },
  {
    "idx": 220,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(FlightNo) FROM flights AS t1 JOIN airlines AS t2 ON t1.Airline = t2.uid JOIN airports AS t3 ON t1.DestAirport = t3.AirportCode WHERE t2.Airline = 'United Airlines' AND t3.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 221,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t2.City FROM flights AS t1 JOIN airports AS t2 ON t1.DestAirport = t2.AirportCode GROUP BY t2.City ORDER BY COUNT(t2.City) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 222,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT DISTINCT a.City, COUNT(f.DestAirport) AS DestAirportCount  FROM airports a  JOIN flights f ON a.AirportCode = f.DestAirport  GROUP BY a.City  ORDER BY DestAirportCount DESC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 223,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.City FROM airports a JOIN flights f ON a.AirportCode = f.SourceAirport JOIN (     SELECT SourceAirport, COUNT(*) as flight_count     FROM flights     GROUP BY SourceAirport     ORDER BY flight_count DESC     LIMIT 1 ) as max_flights ON a.AirportCode = max_flights.SourceAirport",
    "exec_result": 0
  },
  {
    "idx": 224,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T2.SourceAirport ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 225,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT MIN(SourceAirport)  FROM flights",
    "exec_result": 0
  },
  {
    "idx": 226,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT AirportCode FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY AirportCode ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 227,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T3.AirportCode FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport JOIN flights AS T3 ON T1.AirportCode = T3.DestAirport GROUP BY T1.AirportCode ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 228,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT MIN(flightno) FROM flights",
    "exec_result": 0
  },
  {
    "idx": 229,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 231,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.uid = f.Airline GROUP BY f.Airline ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.uid = f.Airline GROUP BY a.Abbreviation, a.Country ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 233,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 234,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 235,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline JOIN airports ON airports.AirportCode = flights.DestAirport WHERE airports.AirportCode = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 236,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.DestAirport = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT DISTINCT t1.Airline FROM airlines AS t1 JOIN flights AS t2 ON t1.uid = t2.Airline WHERE t2.SourceAirport = 'APG' AND t2.DestAirport = 'CVO'",
    "exec_result": 1
  },
  {
    "idx": 238,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT T2.Airline FROM airlines AS T2 JOIN flights AS T1 ON T2.uid  =  T1.Airline JOIN airports AS T3 ON T3.AirportCode  =  T1.SourceAirport WHERE T3.AirportCode = 'APG' EXCEPT SELECT T2.Airline FROM airlines AS T2 JOIN flights AS T1 ON T2.uid  =  T1.Airline JOIN airports AS T3 ON T3.AirportCode  =  T1.SourceAirport WHERE T3.AirportCode = 'CVO'",
    "exec_result": 1
  },
  {
    "idx": 239,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT airlines.uid, airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'CVO' AND flights.DestAirport <> 'APG'",
    "exec_result": 1
  },
  {
    "idx": 240,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'CVO' EXCEPT SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 241,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Airline HAVING COUNT(*) >= 10",
    "exec_result": 1
  },
  {
    "idx": 242,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT a.Airline FROM flights f JOIN airlines a ON f.Airline = a.uid GROUP BY f.Airline HAVING COUNT(f.FlightNo) >= 10",
    "exec_result": 1
  },
  {
    "idx": 243,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT uid FROM airlines WHERE (SELECT COUNT(*) FROM flights WHERE Airline = airlines.uid) < 200",
    "exec_result": 0
  },
  {
    "idx": 244,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT `Abbreviation` FROM `airlines` WHERE (SELECT COUNT(*) FROM `flights` WHERE `Airline`=`uid`) < 200",
    "exec_result": 0
  },
  {
    "idx": 245,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT FlightNo FROM flights WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'United Airlines')",
    "exec_result": 1
  },
  {
    "idx": 246,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')",
    "exec_result": 1
  },
  {
    "idx": 247,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport = \"APG\"",
    "exec_result": 1
  },
  {
    "idx": 248,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT t1.FlightNo FROM flights AS t1 JOIN airports AS t2 ON t1.SourceAirport = t2.AirportCode WHERE t2.AirportCode = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 249,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE DestAirport = \"APG\"",
    "exec_result": 1
  },
  {
    "idx": 250,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE DestAirport = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 251,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')",
    "exec_result": 1
  },
  {
    "idx": 252,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')",
    "exec_result": 1
  },
  {
    "idx": 253,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT DISTINCT FlightNo  FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')",
    "exec_result": 1
  },
  {
    "idx": 254,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT FlightNo FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')",
    "exec_result": 1
  },
  {
    "idx": 255,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City IN ('Aberdeen', 'Abilene')",
    "exec_result": 1
  },
  {
    "idx": 256,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City IN ('Aberdeen', 'Abilene')",
    "exec_result": 1
  },
  {
    "idx": 257,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT T2.AirportName FROM airports AS T1 LEFT JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport LEFT JOIN flights AS T3 ON T1.AirportCode = T3.DestAirport WHERE T2.SourceAirport IS NULL AND T3.DestAirport IS NULL",
    "exec_result": 0
  },
  {
    "idx": 258,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT T1.AirportName FROM airports AS T1 LEFT JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T2.FlightNo IS NULL",
    "exec_result": 1
  },
  {
    "idx": 259,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) FROM employee",
    "exec_result": 1
  },
  {
    "idx": 260,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(T1.Name) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID",
    "exec_result": 0
  },
  {
    "idx": 261,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT Name FROM employee ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 262,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT Name FROM employee ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 263,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT City, COUNT(*) FROM employee GROUP BY City",
    "exec_result": 1
  },
  {
    "idx": 264,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT count(DISTINCT T3.city) AS `Number of employees` FROM hiring AS T1 JOIN employee AS T2 ON T1.employee_id = T2.employee_id JOIN employee AS T3 ON T3.employee_id = T1.employee_id WHERE T1.is_full_time = true GROUP BY T3.city",
    "exec_result": 0
  },
  {
    "idx": 265,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT t1.city FROM employee AS t1 JOIN hiring AS t2 ON t1.employee_id  =  t2.employee_id WHERE t1.age  <  30 GROUP BY t1.city HAVING COUNT(*)  >  1",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT t1.city FROM employee AS t1 JOIN hiring AS t2 ON t1.employee_id  =  t2.employee_id WHERE t1.age  <  30 GROUP BY t1.city HAVING count(*)  >  1",
    "exec_result": 1
  },
  {
    "idx": 267,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT COUNT(*) AS number_of_shops, location FROM shop GROUP BY location",
    "exec_result": 1
  },
  {
    "idx": 268,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT COUNT(*), location FROM shop GROUP BY location",
    "exec_result": 1
  },
  {
    "idx": 269,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT s.Manager_name, s.District  FROM shop AS s JOIN hiring AS h ON s.Shop_ID = h.Shop_ID WHERE h.Is_full_time = 'True' ORDER BY s.Number_products DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 270,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT shop.Manager_name, shop.District FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 271,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(Number_products), MAX(Number_products) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 272,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT min(Number_products), max(Number_products) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 273,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT t2.Name, t2.Location, t2.District FROM hiring AS t1 JOIN shop AS t2 ON t1.Shop_ID = t2.Shop_ID ORDER BY t2.Number_products DESC",
    "exec_result": 0
  },
  {
    "idx": 274,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC",
    "exec_result": 1
  },
  {
    "idx": 275,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT DISTINCT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Is_full_time = 'TRUE' AND s.Number_products > ( SELECT AVG(Number_products) FROM shop )",
    "exec_result": 0
  },
  {
    "idx": 276,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Name HAVING COUNT(*) > (SELECT COUNT(*) FROM hiring AS T3 JOIN shop AS T4 ON T3.Shop_ID = T4.Shop_ID GROUP BY T4.Name) / COUNT(*)",
    "exec_result": 0
  },
  {
    "idx": 277,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T3.Name FROM hiring AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN employee AS T3 ON T3.Employee_ID = T2.Employee_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 278,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T.Name FROM ( SELECT T3.Name, T3.Age FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN employee AS T3 ON T1.Employee_ID = T3.Employee_ID JOIN evaluation AS T4 ON T3.Employee_ID = T4.Employee_ID GROUP BY T3.Name ORDER BY COUNT(T4.Employee_ID) DESC LIMIT 1 ) AS T",
    "exec_result": 1
  },
  {
    "idx": 279,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT T.Name FROM (SELECT e.Name FROM employee e  JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Bonus =  (SELECT MAX(Bonus) FROM evaluation)) T",
    "exec_result": 1
  },
  {
    "idx": 280,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT Name FROM employee ORDER BY Bonus DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 281,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "exec_result": 1
  },
  {
    "idx": 283,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 284,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T2.Shop_ID ORDER BY COUNT(T2.Employee_ID) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 285,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT DISTINCT S.Name FROM shop S LEFT JOIN hiring H ON S.Shop_ID = H.Shop_ID WHERE H.Shop_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 286,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id WHERE h.shop_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 287,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT shop.Name, COUNT(hiring.Employee_ID) FROM hiring JOIN shop ON hiring.Shop_ID = shop.Shop_ID GROUP BY shop.Name",
    "exec_result": 1
  },
  {
    "idx": 288,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT DISTINCT shop.Name, COUNT(hiring.Employee_ID) as Number_of_Employees  FROM hiring  JOIN shop ON hiring.Shop_ID = shop.Shop_ID  GROUP BY shop.Name",
    "exec_result": 1
  },
  {
    "idx": 289,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT sum(Bonus) FROM evaluation",
    "exec_result": 1
  },
  {
    "idx": 290,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(Bonus) FROM evaluation",
    "exec_result": 1
  },
  {
    "idx": 291,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT E.*  FROM employee E  JOIN hiring H ON E.Employee_ID = H.Employee_ID",
    "exec_result": 0
  },
  {
    "idx": 292,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT Employee_ID, Start_from, Is_full_time FROM hiring",
    "exec_result": 0
  },
  {
    "idx": 293,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT District FROM shop WHERE Number_products < 3000 INTERSECT SELECT District FROM shop WHERE Number_products > 10000",
    "exec_result": 1
  },
  {
    "idx": 294,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT DISTINCT t1.district FROM shop AS t1 JOIN hiring AS t2 ON t1.shop_id = t2.shop_id WHERE t1.Number_products < 3000 INTERSECT SELECT DISTINCT t1.district FROM shop AS t1 JOIN hiring AS t2 ON t1.shop_id = t2.shop_id WHERE t1.Number_products > 10000",
    "exec_result": 1
  },
  {
    "idx": 295,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT Location) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 296,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT Location) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 297,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(Document_ID) FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 298,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(Document_ID) FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 299,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT DISTINCT d.Document_ID, d.Document_Name, d.Document_Description FROM Documents d",
    "exec_result": 1
  },
  {
    "idx": 300,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT Document_ID, Document_Name, Document_Description FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 301,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'",
    "exec_result": 1
  },
  {
    "idx": 302,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT T1.Document_ID ,  T2.Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T1.Document_Description LIKE '%w%'",
    "exec_result": 0
  },
  {
    "idx": 303,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT T2.Document_ID, T2.Template_ID, T1.Document_Description FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Document_Name = 'Robbin CV'",
    "exec_result": 0
  },
  {
    "idx": 304,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT DISTINCT T2.Document_ID, T2.Template_ID, T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Document_Name = 'Robbin CV'",
    "exec_result": 0
  },
  {
    "idx": 305,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT T.Template_ID) FROM Documents AS D JOIN Templates AS T ON D.Template_ID = T.Template_ID",
    "exec_result": 1
  },
  {
    "idx": 306,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT Template_ID) FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 307,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(DISTINCT D.Document_ID) AS Num_of_Documents FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID WHERE T.Template_Type_Code = 'PPT'",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT')",
    "exec_result": 1
  },
  {
    "idx": 309,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT T1.Template_ID, COUNT(T3.Document_ID) AS Num_of_Documents  FROM Templates AS T1  LEFT JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID  GROUP BY T1.Template_ID",
    "exec_result": 0
  },
  {
    "idx": 310,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT T.Template_ID, COUNT(T.Template_ID) AS Document_Count FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID",
    "exec_result": 1
  },
  {
    "idx": 311,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t1.Template_ID, t3.Template_Type_Code FROM Templates AS t1 INNER JOIN Documents AS t2 ON t1.Template_ID = t2.Template_ID INNER JOIN Ref_Template_Types AS t3 ON t1.Template_Type_Code = t3.Template_Type_Code GROUP BY t1.Template_ID, t3.Template_Type_Code ORDER BY COUNT(t2.Document_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 312,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Template_Type_Code, COUNT(T3.Document_ID) AS Number_of_Documents  FROM Documents AS T1  JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID  JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code  GROUP BY T2.Template_Type_Code  ORDER BY Number_of_Documents DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 313,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(Documents.Document_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 314,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT T2.Template_ID FROM Paragraphs AS T1  JOIN Documents AS T2  ON T1.Document_ID  =  T2.Document_ID GROUP BY T2.Template_ID HAVING COUNT(T1.Document_ID)  >  1",
    "exec_result": 0
  },
  {
    "idx": 315,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT T.Template_ID FROM Templates AS T WHERE NOT EXISTS (SELECT 1 FROM Documents AS D WHERE T.Template_ID = D.Template_ID)",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT T.Template_ID FROM Templates AS T  LEFT JOIN Documents AS D ON T.Template_ID = D.Template_ID  WHERE D.Document_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(Template_ID) FROM Templates",
    "exec_result": 1
  },
  {
    "idx": 318,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(Template_ID) AS Number_of_Templates FROM Templates",
    "exec_result": 1
  },
  {
    "idx": 319,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates",
    "exec_result": 1
  },
  {
    "idx": 320,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT T1.Template_ID, T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1",
    "exec_result": 1
  },
  {
    "idx": 321,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types",
    "exec_result": 0
  },
  {
    "idx": 322,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types",
    "exec_result": 0
  },
  {
    "idx": 323,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",
    "exec_result": 1
  },
  {
    "idx": 324,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT DISTINCT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
    "exec_result": 1
  },
  {
    "idx": 325,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV'",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(Template_ID) FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'CV'",
    "exec_result": 1
  },
  {
    "idx": 327,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Version_Number > 5",
    "exec_result": 1
  },
  {
    "idx": 328,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT DISTINCT Version_Number ,  Template_Type_Code FROM Templates WHERE Version_Number  >  5",
    "exec_result": 1
  },
  {
    "idx": 329,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Template_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 330,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT Template_Type_Code ,  COUNT(Template_ID) FROM Templates GROUP BY Template_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 331,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 332,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t.Template_Type_Code FROM Templates t GROUP BY t.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 333,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types  WHERE Template_Type_Code NOT IN (   SELECT T1.Template_Type_Code    FROM Templates AS T1   JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID   GROUP BY T1.Template_Type_Code    HAVING COUNT(DISTINCT T2.Document_ID) >= 3 )",
    "exec_result": 1
  },
  {
    "idx": 334,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types AS A JOIN Templates AS B ON A.Template_Type_Code = B.Template_Type_Code GROUP BY Template_Type_Code HAVING COUNT(B.Template_ID) < 3",
    "exec_result": 0
  },
  {
    "idx": 335,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT MIN(Version_Number), Template_Type_Code FROM Templates ORDER BY Version_Number ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 336,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT min(t1.version_number), t3.template_type_code FROM templates AS t1 JOIN ref_template_types AS t3 ON t3.template_type_code = t1.template_type_code",
    "exec_result": 1
  },
  {
    "idx": 337,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT T1.template_type_code FROM Ref_Template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.template_id = T3.template_id WHERE T3.document_name = 'Data base'",
    "exec_result": 1
  },
  {
    "idx": 338,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Document_Name = 'Data Base'",
    "exec_result": 0
  },
  {
    "idx": 339,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT T1.Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T3.Template_Type_Code = 'BK'",
    "exec_result": 1
  },
  {
    "idx": 340,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT D.Document_Name FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code WHERE R.Template_Type_Code = 'BK'",
    "exec_result": 1
  },
  {
    "idx": 341,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT T1.template_type_code, COUNT(DISTINCT T3.document_id) AS num_of_documents FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code INNER JOIN Documents AS T3 ON T2.template_id = T3.template_id GROUP BY T1.template_type_code",
    "exec_result": 1
  },
  {
    "idx": 342,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT T2.Template_Type_Code, COUNT(DISTINCT T1.Document_ID) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T2.Template_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 343,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Template_Type_Code ORDER BY COUNT(Document_ID) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 344,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  GROUP BY T1.Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 345,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code IS NULL",
    "exec_result": 0
  },
  {
    "idx": 346,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Document_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 347,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types",
    "exec_result": 1
  },
  {
    "idx": 349,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'",
    "exec_result": 1
  },
  {
    "idx": 350,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT T2.Template_Type_Description FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID JOIN Ref_Template_Types AS T3 ON T2.Template_Type_Code = T3.Template_Type_Code WHERE T3.Template_Type_Code = 'AD'",
    "exec_result": 0
  },
  {
    "idx": 351,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'",
    "exec_result": 1
  },
  {
    "idx": 353,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT rt.Template_Type_Description FROM Ref_Template_Types rt JOIN Templates t ON rt.Template_Type_Code = t.Template_Type_Code JOIN Documents d ON t.Template_ID = d.Template_ID",
    "exec_result": 1
  },
  {
    "idx": 354,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT T2.Template_Type_Description FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID",
    "exec_result": 0
  },
  {
    "idx": 355,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT Templates.Template_ID FROM Ref_Template_Types AS Ref_Template_Types INNER JOIN Templates AS Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'",
    "exec_result": 1
  },
  {
    "idx": 356,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT Templates.Template_ID FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation'",
    "exec_result": 1
  },
  {
    "idx": 357,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) FROM Paragraphs",
    "exec_result": 1
  },
  {
    "idx": 358,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) FROM Paragraphs",
    "exec_result": 1
  },
  {
    "idx": 359,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(Paragraph_ID)  FROM Documents AS D  JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  WHERE D.Document_Name = 'Summer Show'",
    "exec_result": 1
  },
  {
    "idx": 360,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(Paragraph_ID)  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Summer Show'",
    "exec_result": 1
  },
  {
    "idx": 361,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT      Paragraph_Text,     Other_Details FROM     Paragraphs WHERE     Paragraph_Text = 'Korea'",
    "exec_result": 0
  },
  {
    "idx": 362,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'",
    "exec_result": 0
  },
  {
    "idx": 363,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT paragraphs.Paragraph_ID, paragraphs.Paragraph_Text FROM paragraphs JOIN documents ON paragraphs.Document_ID = documents.Document_ID WHERE documents.Document_Name = 'Welcome to NY'",
    "exec_result": 1
  },
  {
    "idx": 364,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'",
    "exec_result": 1
  },
  {
    "idx": 365,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT Paragraph_Text FROM Paragraphs INNER JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Document_Name = 'Customer reviews'",
    "exec_result": 1
  },
  {
    "idx": 366,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Document_Name = 'Customer reviews')",
    "exec_result": 1
  },
  {
    "idx": 367,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT D.Document_ID, COUNT(P.Paragraph_ID) AS Paragraph_Count  FROM Documents D  JOIN Paragraphs P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  ORDER BY D.Document_ID",
    "exec_result": 1
  },
  {
    "idx": 368,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT D.Document_ID, COUNT(P.Paragraph_ID) as Number_of_Paragraphs FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY D.Document_ID",
    "exec_result": 1
  },
  {
    "idx": 369,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT    D.Document_ID,   D.Document_Name,   COUNT(P.Paragraph_ID) AS Num_Paragraphs FROM    Documents D    JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY    D.Document_ID,   D.Document_Name",
    "exec_result": 1
  },
  {
    "idx": 370,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT d.Document_ID, d.Document_Name, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID, d.Document_Name",
    "exec_result": 1
  },
  {
    "idx": 371,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT D.Document_ID FROM Documents AS D  JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID  GROUP BY D.Document_ID  HAVING COUNT(P.Paragraph_ID) >= 2",
    "exec_result": 1
  },
  {
    "idx": 372,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 373,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT D.Document_ID, D.Document_Name FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID, D.Document_Name ORDER BY COUNT(P.Paragraph_ID) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 374,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT TOP 1 Documents.Document_ID, Documents.Document_Name FROM Documents INNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name ORDER BY COUNT(*) DESC",
    "exec_result": 0
  },
  {
    "idx": 375,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T2.Document_ID FROM Documents AS T2 JOIN Paragraphs AS T3 ON T2.Document_ID = T3.Document_ID GROUP BY T2.Document_ID ORDER BY COUNT(T3.Paragraph_ID) LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 376,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T1.document_id FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY COUNT(T2.paragraph_id) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 377,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(*)  >=  2",
    "exec_result": 0
  },
  {
    "idx": 378,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT Paragraph_ID  FROM Paragraphs",
    "exec_result": 0
  },
  {
    "idx": 379,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT Paragraph_ID FROM Paragraphs WHERE Paragraph_Text = 'Brazil'  UNION  SELECT Paragraph_ID FROM Paragraphs WHERE Paragraph_Text = 'Ireland'",
    "exec_result": 0
  },
  {
    "idx": 380,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT DISTINCT D.Document_ID FROM Documents AS D JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text IN ('Brazil', 'Ireland')",
    "exec_result": 0
  },
  {
    "idx": 381,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(DISTINCT Teacher_ID) FROM teacher",
    "exec_result": 1
  },
  {
    "idx": 382,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(DISTINCT Teacher_ID) FROM teacher",
    "exec_result": 1
  },
  {
    "idx": 383,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT Name FROM teacher ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 384,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT Name FROM teacher ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 385,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT Age, Hometown FROM teacher",
    "exec_result": 1
  },
  {
    "idx": 386,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT Name, Age, Hometown FROM teacher",
    "exec_result": 0
  },
  {
    "idx": 387,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'",
    "exec_result": 0
  },
  {
    "idx": 388,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'",
    "exec_result": 0
  },
  {
    "idx": 389,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT Name FROM teacher WHERE Age = 32 OR Age = 33",
    "exec_result": 1
  },
  {
    "idx": 390,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT Name FROM teacher WHERE Age = 32 OR Age = 33",
    "exec_result": 1
  },
  {
    "idx": 391,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 392,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT Hometown FROM teacher WHERE Age = (SELECT MAX(Age) FROM teacher)",
    "exec_result": 0
  },
  {
    "idx": 393,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT hometown, COUNT(teacher_id)  FROM teacher  GROUP BY hometown",
    "exec_result": 1
  },
  {
    "idx": 394,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "exec_result": 1
  },
  {
    "idx": 395,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 396,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.Hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 397,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Hometown) >= 2",
    "exec_result": 1
  },
  {
    "idx": 398,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING count(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 399,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT t.Name FROM teacher AS t JOIN course_arrange AS ca ON t.Teacher_ID = ca.Teacher_ID",
    "exec_result": 0
  },
  {
    "idx": 400,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT T1.name, T3.course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN course AS T3 ON T2.course_id = T3.course_id",
    "exec_result": 1
  },
  {
    "idx": 401,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT T2.Name , T1.Course FROM course AS T1 JOIN course_arrange AS T3 ON T1.Course_ID  =  T3.Course_ID JOIN teacher AS T2 ON T2.Teacher_ID = T3.Teacher_ID ORDER BY T2.Name ASC",
    "exec_result": 1
  },
  {
    "idx": 402,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT T1.name ,  T2.course FROM teacher AS T1 JOIN course_arrange AS T3 ON T1.teacher_id  =  T3.teacher_id JOIN course AS T2 ON T3.course_id  =  T2.course_id ORDER BY T1.name ASC",
    "exec_result": 1
  },
  {
    "idx": 403,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT t.Name FROM teacher t  JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  JOIN course c ON ca.Course_ID = c.Course_ID  WHERE c.Course = 'Math'",
    "exec_result": 1
  },
  {
    "idx": 404,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT T1.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'",
    "exec_result": 1
  },
  {
    "idx": 405,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT teacher.Name, COUNT(course_arrange.Teacher_ID) AS Number_of_Courses FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name",
    "exec_result": 1
  },
  {
    "idx": 406,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT Name, COUNT(*) FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name",
    "exec_result": 1
  },
  {
    "idx": 407,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.Name FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name HAVING COUNT(DISTINCT ca.Course_ID) >= 2",
    "exec_result": 1
  },
  {
    "idx": 408,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Name HAVING COUNT(DISTINCT course_arrange.Course_ID) >= 2",
    "exec_result": 1
  },
  {
    "idx": 409,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT T.Name FROM teacher AS T LEFT JOIN course_arrange AS CA ON T.Teacher_ID = CA.Teacher_ID WHERE CA.Teacher_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 410,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT T1.Name FROM teacher AS T1 LEFT JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID WHERE T2.Course_ID  IS NULL",
    "exec_result": 1
  },
  {
    "idx": 411,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE age  <  30",
    "pred": "SELECT COUNT(*) FROM visitor WHERE age < 30",
    "exec_result": 1
  },
  {
    "idx": 412,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "pred": "SELECT v.Name FROM visitor AS v WHERE v.Level_of_membership  >  4 ORDER BY v.Level_of_membership DESC",
    "exec_result": 1
  },
  {
    "idx": 413,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "pred": "SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4",
    "exec_result": 1
  },
  {
    "idx": 414,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "pred": "SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC",
    "exec_result": 1
  },
  {
    "idx": 415,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "pred": "SELECT M.Museum_ID, M.Name FROM museum M ORDER BY M.Num_of_Staff DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 416,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "pred": "SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009",
    "exec_result": 1
  },
  {
    "idx": 417,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "pred": "SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum'",
    "exec_result": 1
  },
  {
    "idx": 418,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "pred": "SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010);",
    "exec_result": 1
  },
  {
    "idx": 419,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "pred": "SELECT v.ID, v.Name, v.Age FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY v.ID, v.Name, v.Age HAVING COUNT(DISTINCT vi.Museum_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 420,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "pred": "SELECT visitor_ID FROM visit ORDER BY Total_spent DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 421,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 422,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "pred": "SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)",
    "exec_result": 1
  },
  {
    "idx": 423,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "pred": "SELECT T2.name ,  T2.age FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_id  =  T2.id WHERE T1.num_of_ticket  =  (SELECT MAX(T1.num_of_ticket) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_id  =  T2.id)",
    "exec_result": 1
  },
  {
    "idx": 424,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "pred": "SELECT AVG(Num_of_Ticket) as Avg_Tickets_Bought, MAX(Num_of_Ticket) as Max_Tickets_Bought FROM visit",
    "exec_result": 1
  },
  {
    "idx": 425,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "pred": "SELECT SUM(v.Total_spent) FROM visit AS v JOIN visitor AS vis ON v.visitor_ID = vis.ID WHERE vis.Level_of_membership = 1",
    "exec_result": 1
  },
  {
    "idx": 426,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "pred": "SELECT v.Name  FROM visitor v  JOIN visit vv  ON v.ID = vv.visitor_ID  JOIN museum m  ON vv.Museum_ID = m.Museum_ID  WHERE m.Open_Year < '2009'  INTERSECT  SELECT v.Name  FROM visitor v  JOIN visit vv  ON v.ID = vv.visitor_ID  JOIN museum m  ON vv.Museum_ID = m.Museum_ID  WHERE m.Open_Year > '2011'",
    "exec_result": 1
  },
  {
    "idx": 427,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "pred": "SELECT COUNT(DISTINCT T1.Name) FROM visitor AS T1 LEFT JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID  IS  NULL OR T2.Museum_ID  NOT  IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2010)",
    "exec_result": 0
  },
  {
    "idx": 428,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "pred": "SELECT COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008",
    "exec_result": 1
  },
  {
    "idx": 429,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(DISTINCT player_id) FROM players",
    "exec_result": 1
  },
  {
    "idx": 430,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(*) FROM players",
    "exec_result": 1
  },
  {
    "idx": 431,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(match_id) FROM matches",
    "exec_result": 0
  },
  {
    "idx": 432,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(*) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 433,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 434,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT first_name, birth_date  FROM players  WHERE country_code = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 435,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches",
    "exec_result": 1
  },
  {
    "idx": 436,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(winner_age) AS avg_winner_age, AVG(loser_age) AS avg_loser_age FROM matches",
    "exec_result": 1
  },
  {
    "idx": 437,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT avg(winner_rank) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 438,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(winner_rank) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 439,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(ranking) FROM rankings  INNER JOIN matches ON rankings.player_id = matches.loser_id",
    "exec_result": 0
  },
  {
    "idx": 440,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(T1.ranking) FROM rankings AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.loser_id",
    "exec_result": 0
  },
  {
    "idx": 441,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT country_code) FROM players",
    "exec_result": 1
  },
  {
    "idx": 442,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT country_code) FROM players",
    "exec_result": 1
  },
  {
    "idx": 443,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 444,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 445,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT TOURNEY_NAME  FROM matches  GROUP BY TOURNEY_NAME  HAVING COUNT(MATCH_ID) > 10",
    "exec_result": 0
  },
  {
    "idx": 446,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT T1.tourney_name  FROM matches AS T1  JOIN players AS T2 ON T1.winner_id = T2.player_id  JOIN players AS T3 ON T1.loser_id = T3.player_id  GROUP BY T1.tourney_name  HAVING COUNT(T1.match_num) > 10",
    "exec_result": 1
  },
  {
    "idx": 447,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT DISTINCT p.first_name, p.last_name  FROM players p  JOIN matches m ON p.player_id = m.winner_id  WHERE m.year IN (2013, 2016)",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT winner_name FROM matches WHERE winner_id IN (SELECT player_id FROM players WHERE country_code = 'US') AND year IN (2013, 2016)",
    "exec_result": 0
  },
  {
    "idx": 449,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT count(*) FROM matches WHERE year IN (2013, 2016)",
    "exec_result": 1
  },
  {
    "idx": 450,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*) FROM matches WHERE YEAR IN (2013, 2016)",
    "exec_result": 1
  },
  {
    "idx": 451,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT T1.country_code, T1.first_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name LIKE 'WTA Championships%' AND T2.tourney_name LIKE '%Australian Open%'",
    "exec_result": 0
  },
  {
    "idx": 452,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT players.first_name, players.country_code FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'WTA Championships' INTERSECT SELECT players.first_name, players.country_code FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open'",
    "exec_result": 1
  },
  {
    "idx": 453,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 454,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT first_name, country_code  FROM players  ORDER BY birth_date DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 455,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players ORDER BY birth_date",
    "exec_result": 1
  },
  {
    "idx": 456,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players ORDER BY birth_date",
    "exec_result": 1
  },
  {
    "idx": 457,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 458,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date",
    "exec_result": 1
  },
  {
    "idx": 459,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id WHERE T2.tours = ( SELECT MAX(T3.tours) FROM rankings AS T3 )",
    "exec_result": 1
  },
  {
    "idx": 460,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT first_name, country_code  FROM players  WHERE player_id = (     SELECT player_id      FROM (         SELECT player_id, COUNT(*) as num          FROM rankings          GROUP BY player_id          ORDER BY num DESC          LIMIT 1     ) as top_player )",
    "exec_result": 0
  },
  {
    "idx": 461,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 462,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT MAX(year) FROM matches",
    "exec_result": 0
  },
  {
    "idx": 463,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT winner_name, winner_rank_points FROM (     SELECT winner_name, MAX(COUNT(*)) as max_wins     FROM matches     GROUP BY winner_name     ) as sub JOIN matches ON matches.winner_name = sub.winner_name WHERE matches.winner_rank_points = sub.max_wins;",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT winner_name, ranking_points FROM players  JOIN matches ON players.player_id = matches.winner_id  JOIN rankings ON players.player_id = rankings.player_id GROUP BY winner_name, ranking_points ORDER BY COUNT(matches.match_num) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT w.name FROM players w  JOIN matches m ON w.id = m.winner_id  JOIN rankings r ON w.id = r.player_id  WHERE m.tourney_name = 'Australian Open'  AND r.tours = (     SELECT MAX(tours) FROM rankings WHERE player_id = w.id )",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT T1.winner_name FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 467,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT loser_name, winner_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 468,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT T3.winner_name, T3.loser_name FROM matches AS T1 JOIN players AS T2 ON T1.loser_id = T2.player_id JOIN players AS T3 ON T1.winner_id = T3.player_id WHERE T1.match_num = ( SELECT MAX(match_num) FROM matches )",
    "exec_result": 0
  },
  {
    "idx": 469,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, AVG(r.ranking) AS average_ranking  FROM players p  JOIN rankings r ON p.player_id = r.player_id  GROUP BY p.first_name",
    "exec_result": 1
  },
  {
    "idx": 470,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT T1.first_name, AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id",
    "exec_result": 0
  },
  {
    "idx": 471,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT T1.player_id, T1.first_name, SUM(T2.ranking_points) AS total_ranking_points FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id, T1.first_name",
    "exec_result": 0
  },
  {
    "idx": 472,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, SUM(r.ranking_points) as total_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name",
    "exec_result": 0
  },
  {
    "idx": 473,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT COUNT(*) FROM players GROUP BY country_code",
    "exec_result": 0
  },
  {
    "idx": 474,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT COUNT(*), country_code FROM players GROUP BY country_code",
    "exec_result": 1
  },
  {
    "idx": 475,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 476,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 477,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50",
    "exec_result": 1
  },
  {
    "idx": 478,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50",
    "exec_result": 1
  },
  {
    "idx": 479,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT COUNT(DISTINCT tourney_id), ranking_date  FROM rankings  GROUP BY ranking_date",
    "exec_result": 0
  },
  {
    "idx": 480,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT COUNT(DISTINCT T2.tourney_id) AS total_tours, T1.ranking_date FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id GROUP BY T1.ranking_date",
    "exec_result": 0
  },
  {
    "idx": 481,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT COUNT(*) FROM matches GROUP BY YEAR",
    "exec_result": 0
  },
  {
    "idx": 482,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT COUNT(*) FROM matches WHERE YEAR IN (SELECT DISTINCT YEAR FROM matches);",
    "exec_result": 0
  },
  {
    "idx": 483,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT w.first_name, w.last_name, r.ranking  FROM players AS w JOIN rankings AS r ON w.player_id = r.player_id WHERE w.birth_date = (SELECT MIN(birth_date) FROM players) ORDER BY r.ranking  LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 484,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT players.first_name, players.last_name, players.ranking  FROM players  JOIN (     SELECT winner_id, ranking      FROM rankings      WHERE player_id IN (         SELECT winner_id          FROM matches          ORDER BY winner_age ASC          LIMIT 3     )  ) AS rankings ON players.player_id = rankings.winner_id",
    "exec_result": 0
  },
  {
    "idx": 485,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(DISTINCT p.player_id) FROM players p INNER JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_level = 'G' AND p.hand = 'L'",
    "exec_result": 0
  },
  {
    "idx": 486,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(*) FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'G'",
    "exec_result": 0
  },
  {
    "idx": 487,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = ( SELECT MAX(ranking_points) FROM rankings )",
    "exec_result": 0
  },
  {
    "idx": 488,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = (     SELECT MAX(ranking_points)     FROM rankings )",
    "exec_result": 0
  },
  {
    "idx": 489,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT hand, COUNT(*) as player_count  FROM players  GROUP BY hand",
    "exec_result": 1
  },
  {
    "idx": 490,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT hand, COUNT(player_id) FROM players GROUP BY hand",
    "exec_result": 1
  },
  {
    "idx": 491,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "pred": "SELECT COUNT(id) FROM ship WHERE disposition_of_ship = 'Captured'",
    "exec_result": 1
  },
  {
    "idx": 492,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "pred": "SELECT name, tonnage FROM ship ORDER BY name DESC",
    "exec_result": 1
  },
  {
    "idx": 493,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  date FROM battle",
    "pred": "SELECT name, date, result FROM battle",
    "exec_result": 0
  },
  {
    "idx": 494,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT max(killed) ,  min(killed) FROM death",
    "pred": "SELECT MAX(d.killed) AS max_killed, MIN(d.killed) AS min_killed, b.name FROM battle b JOIN ship s ON b.id = s.lost_in_battle JOIN death d ON s.id = d.caused_by_ship_id WHERE b.id IN (SELECT DISTINCT id FROM battle) GROUP BY b.name",
    "exec_result": 0
  },
  {
    "idx": 495,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT avg(injured) FROM death",
    "pred": "SELECT AVG(injured) FROM death",
    "exec_result": 1
  },
  {
    "idx": 496,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "pred": "SELECT tonnage, kille0, injured FROM ship INNER JOIN death ON ship.id = death.caused_by_ship_id WHERE tonnage = 't'",
    "exec_result": 0
  },
  {
    "idx": 497,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "pred": "SELECT battle.name, battle.result FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.bulgarian_commander <> 'Boril'",
    "exec_result": 0
  },
  {
    "idx": 498,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "pred": "SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.tonnage = 'brig'",
    "exec_result": 0
  },
  {
    "idx": 499,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "pred": "SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id GROUP BY battle.id, battle.name HAVING COUNT(death.killed) > 10",
    "exec_result": 0
  },
  {
    "idx": 500,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t1.id ,  t1.name FROM ship AS t1 JOIN death AS t2 ON t1.id  =  t2.caused_by_ship_id GROUP BY t1.id ,  t1.name ORDER BY sum(t2.injured) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "pred": "SELECT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'",
    "exec_result": 1
  },
  {
    "idx": 502,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(DISTINCT RESULT) FROM battle",
    "pred": "SELECT COUNT(DISTINCT result) FROM battle",
    "exec_result": 1
  },
  {
    "idx": 503,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "pred": "SELECT COUNT(b.id)  FROM battle b  JOIN ship s ON b.id = s.lost_in_battle  WHERE s.tonnage = '225'  AND b.result <> 'lose';",
    "exec_result": 0
  },
  {
    "idx": 504,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "pred": "SELECT T.`name`, T1.`date` FROM battle AS T JOIN ship AS T1 ON T.id = T1.lost_in_battle WHERE T1.name IN ('Lettice', 'HMS Atalanta')",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "pred": "SELECT T2.name , T2.result , T2.bulgarian_commander FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle  =  T2.id WHERE T1.location != 'English Channel'",
    "exec_result": 0
  },
  {
    "idx": 506,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT note FROM death WHERE note LIKE '%East%'",
    "pred": "SELECT note FROM death WHERE note LIKE '%East%'",
    "exec_result": 1
  },
  {
    "idx": 507,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT line_1 ,  line_2 FROM addresses",
    "exec_result": 1
  },
  {
    "idx": 508,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT `line_1`, `line_2` FROM `addresses`",
    "exec_result": 1
  },
  {
    "idx": 509,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(DISTINCT course_id)",
    "exec_result": 0
  },
  {
    "idx": 510,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(course_id) FROM Courses",
    "exec_result": 1
  },
  {
    "idx": 511,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT course_description FROM courses WHERE course_name = 'Math'",
    "exec_result": 0
  },
  {
    "idx": 512,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT `course_description` FROM `Courses` WHERE `course_name` = 'math'",
    "exec_result": 1
  },
  {
    "idx": 513,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE city = \"Port Chelsea\"",
    "exec_result": 1
  },
  {
    "idx": 514,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE line_1 LIKE '%Port Chelsea%'",
    "exec_result": 0
  },
  {
    "idx": 515,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT d.department_id, d.department_name, COUNT(*) as number_of_degrees FROM Departments d JOIN Degree_Programs dp ON d.department_id = dp.department_id GROUP BY d.department_id, d.department_name ORDER BY number_of_degrees DESC",
    "exec_result": 0
  },
  {
    "idx": 516,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "pred": "SELECT department_name, department_id FROM Departments ORDER BY (SELECT COUNT(*) FROM Degree_Programs WHERE department_id = Departments.department_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 517,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT department_id) FROM Degree_Programs",
    "exec_result": 1
  },
  {
    "idx": 518,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT department_id)  FROM Degrees",
    "exec_result": 0
  },
  {
    "idx": 519,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT degree_program_name) FROM Degree_Programs",
    "exec_result": 0
  },
  {
    "idx": 520,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT degree_summary_name)  FROM Degree_Programs",
    "exec_result": 1
  },
  {
    "idx": 521,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs WHERE department_id IN (SELECT department_id FROM Departments WHERE department_name = 'Engineering')",
    "exec_result": 1
  },
  {
    "idx": 522,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(*) FROM DEGREE_PROGRAMS WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Engineering')",
    "exec_result": 1
  },
  {
    "idx": 523,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT course_name, course_description FROM Courses",
    "exec_result": 0
  },
  {
    "idx": 524,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT course_id, course_name, course_description FROM Courses",
    "exec_result": 0
  },
  {
    "idx": 525,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT T1.course_name, T1.course_id FROM Courses AS T1 INNER JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name, T1.course_id HAVING COUNT(*) <= 2",
    "exec_result": 1
  },
  {
    "idx": 526,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) < 2",
    "exec_result": 0
  },
  {
    "idx": 527,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "exec_result": 1
  },
  {
    "idx": 528,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM sections ORDER BY section_name DESC",
    "exec_result": 1
  },
  {
    "idx": 529,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT semester_id, semester_name  FROM Semesters  WHERE semester_id IN (     SELECT semester_id      FROM Student_Enrolment      GROUP BY semester_id      ORDER BY COUNT(*) DESC      LIMIT 1 );",
    "exec_result": 1
  },
  {
    "idx": 530,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT semester_id, semester_name, COUNT(student_id) as student_count FROM Students JOIN Student_Enrolment on Students.student_id = Student_Enrolment.student_id JOIN Semesters on Student_Enrolment.semester_id = Semesters.semester_id GROUP BY semester_id, semester_name ORDER BY student_count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 531,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT T1.department_description FROM Departments AS T1 INNER JOIN Degree_programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name LIKE '%computer%'",
    "exec_result": 0
  },
  {
    "idx": 532,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%';",
    "exec_result": 1
  },
  {
    "idx": 533,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name FROM Students s INNER JOIN Student_Enrolment se ON s.student_id = se.student_id INNER JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE se.semester_id IN (     SELECT semester_id     FROM Student_Enrolment     GROUP BY semester_id     HAVING COUNT(DISTINCT degree_program_id) = 2 )",
    "exec_result": 0
  },
  {
    "idx": 534,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "Here's the SQL query:  ```sql SELECT DISTINCT s.student_id, s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp1 ON se.degree_program_id = dp1.degree_program_id JOIN Degree_Programs dp2 ON se.degree_program_id = dp2.degree_program_id AND dp1.degree_program_id != dp2.degree_program_id JOIN Semesters sem ON se.semester_id = sem.semester_id WHERE sem.semester_id = (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id ORDER BY COUNT(*) DESC LIMIT 1) ```  This query first joins `Students` table with `Student_Enrolment` table. It then joins `Degree_Programs` table twice to ensure there are two distinct degree programs for the same semester. It also joins `Semesters` table to make sure the semester has the most enrollments. Finally, it filters out the students who are enrolled in only one degree program.",
    "exec_result": 0
  },
  {
    "idx": 535,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT T3.first_name, T3.middle_name, T3.last_name FROM DEGREE_PROGRAMS AS T1 JOIN STUDENT_ENROLMENT AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN STUDENTS AS T3 ON T3.student_id = T2.student_id WHERE T1.degree_summary_name = 'Bachelor'",
    "exec_result": 1
  },
  {
    "idx": 536,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT first_name, middle_name, last_name FROM Students WHERE student_id IN (SELECT student_id FROM Student_Enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelors'))",
    "exec_result": 0
  },
  {
    "idx": 537,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.`degree_program_name` FROM `Student_Enrolment` AS T1 INNER JOIN `Degree_Programs` AS T2 ON T1.`degree_program_id` = T2.`degree_program_id` GROUP BY T1.`degree_program_id` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 538,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT d.degree_summary_name  FROM Degree_Programs d  JOIN Student_Enrolment se ON d.degree_program_id = se.degree_program_id  GROUP BY d.degree_summary_name  ORDER BY COUNT(se.student_enrolment_id) DESC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 539,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT D.degree_program_id, D.degree_summary_name, COUNT(S.student_id) as student_count FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id JOIN Degree_Programs D ON SE.degree_program_id = D.degree_program_id GROUP BY D.degree_program_id, D.degree_summary_name ORDER BY student_count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 540,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "Here is the SQL query to find the program id and the summary of the degree that has the most students enrolled: ```sql SELECT degree_programs.degree_program_id, degree_programs.degree_summary_name, COUNT(student_enrolment_courses.student_course_id) as num_students FROM degree_programs JOIN student_enrolment_courses ON degree_programs.degree_program_id = student_enrolment_courses.course_id GROUP BY degree_programs.degree_program_id, degree_programs.degree_summary_name ORDER BY num_students DESC LIMIT 1; ``` This query first joins the `degree_programs` and `student_enrolment_courses` tables on the `degree_program_id` column. It then groups the results by `degree_program_id` and `degree_summary_name`, and orders them by the number of students enrolled in descending order. The `LIMIT 1` clause is used to return only the program with the most students enrolled.",
    "exec_result": 0
  },
  {
    "idx": 541,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) as number_of_enrollments  FROM Students s  JOIN Student_Enrolment se ON s.student_id = se.student_id  GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name  ORDER BY number_of_enrollments DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(T2.student_enrolment_id) FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(T2.student_enrolment_id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 543,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)",
    "exec_result": 1
  },
  {
    "idx": 544,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (     SELECT semester_id     FROM Student_Enrolment )",
    "exec_result": 1
  },
  {
    "idx": 545,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses GROUP BY course_id)",
    "exec_result": 0
  },
  {
    "idx": 546,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "exec_result": 1
  },
  {
    "idx": 547,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT course_id FROM Student_Enrolment_Courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 548,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T3.course_name FROM Student_Enrolment_Courses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id JOIN Courses AS T3 ON T1.course_id = T3.course_id GROUP BY T3.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 549,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT s.last_name  FROM Students s  WHERE s.state_province_county = 'North Carolina' AND s.date_left IS NULL",
    "exec_result": 0
  },
  {
    "idx": 550,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT S.last_name FROM Students S LEFT JOIN Student_Enrolment SE ON S.student_id = SE.student_id WHERE S.state_province_county = 'North Carolina' AND SE.student_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 551,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT T2.transcript_id, T2.transcript_date FROM STUDENT_ENROLMENT_COURSES AS T1  JOIN TRANSCRIPT_CONTENTS AS T2 ON T2.student_course_id = T1.student_course_id  GROUP BY T2.transcript_id, T2.transcript_date  HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 552,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT t.transcript_id, t.transcript_date FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id, t.transcript_date HAVING COUNT(tc.student_course_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 553,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "pred": "SELECT cell_mobile_number FROM Students WHERE first_name = \"Timmothy\" AND last_name = \"Ward\"",
    "exec_result": 1
  },
  {
    "idx": 554,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "pred": "SELECT `cell_mobile_number` FROM `Students` WHERE `first_name` LIKE 'Timmothy' AND `last_name` LIKE 'Ward'",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 ORDER BY T1.date_first_registered ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name  FROM Students ORDER BY student_id ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name FROM STUDENTS ORDER BY date_first_registered LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 558,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name  FROM Students  WHERE date_first_registered = (     SELECT MIN(date_first_registered)      FROM Students )",
    "exec_result": 1
  },
  {
    "idx": 559,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT first_name FROM students WHERE permanent_address_id != current_address_id",
    "exec_result": 1
  },
  {
    "idx": 560,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT s.first_name FROM Students s WHERE s.current_address_id != s.permanent_address_id",
    "exec_result": 1
  },
  {
    "idx": 561,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3, T1.city, T1.zip_postcode, T1.state_province_county, T1.country FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 562,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.address_id, T2.line_1, T2.line_2 FROM ( SELECT student_id, COUNT(*) AS cnt FROM Student_Enrolment GROUP BY student_id ) AS T1 JOIN Addresses AS T2 ON T2.address_id = T1.student_id ORDER BY T1.cnt DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 563,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(transcript_date) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 564,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(transcript_date) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 565,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) ,  other_details FROM Transcripts",
    "exec_result": 0
  },
  {
    "idx": 566,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT transcript_date, MAX(transcript_date) FROM Transcripts",
    "exec_result": 0
  },
  {
    "idx": 567,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(*) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 568,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(transcript_id) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 569,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 570,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 571,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT MAX(COUNT(T3.student_course_id)) FROM Student_Enrolment_Courses AS T3 INNER JOIN Transcript_Contents AS T4 ON T3.student_course_id = T4.student_course_id GROUP BY T3.course_id",
    "exec_result": 0
  },
  {
    "idx": 572,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT MAX(occurrences) as max_occurrences, course_id FROM (   SELECT COUNT(tc.transcript_id) as occurrences, tc.course_id   FROM Transcript_Contents as tc   GROUP BY tc.course_id ) AS subquery",
    "exec_result": 0
  },
  {
    "idx": 573,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT transcript_id, transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 574,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T.transcript_id, T.transcript_date FROM Transcripts AS T JOIN Transcript_Contents AS TC ON T.transcript_id = TC.transcript_id GROUP BY T.transcript_id, T.transcript_date ORDER BY COUNT(TC.student_course_id) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 575,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT semester_name FROM Semesters WHERE semester_id IN  (SELECT semester_id FROM Student_Enrolment WHERE student_id IN  (SELECT student_id FROM Students WHERE degree_program_id IN  (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%Master%')) AND student_id IN  (SELECT student_id FROM Students WHERE degree_program_id IN  (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%Bachelor%'))",
    "exec_result": 0
  },
  {
    "idx": 576,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT semester_id FROM student_enrolment_courses AS sc JOIN student_enrolment AS se ON sc.student_enrolment_id = se.student_enrolment_id JOIN degree_programs AS dp ON se.degree_program_id = dp.degree_program_id JOIN courses AS c ON sc.course_id = c.course_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY semester_id HAVING COUNT(DISTINCT degree_summary_name) = 2",
    "exec_result": 0
  },
  {
    "idx": 577,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT COUNT(DISTINCT current_address_id) FROM Students",
    "exec_result": 1
  },
  {
    "idx": 578,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT DISTINCT a.* FROM addresses AS a JOIN students AS s ON a.address_id = s.current_address_id",
    "exec_result": 0
  },
  {
    "idx": 579,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details FROM Students ORDER BY last_name DESC",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT student_id, first_name, last_name, middle_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, current_address_id, permanent_address_id FROM Students ORDER BY first_name DESC, last_name DESC, middle_name DESC",
    "exec_result": 0
  },
  {
    "idx": 581,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT    s.section_name,   COUNT(sc.student_course_id) AS num_students FROM    Sections s   JOIN Student_Enrolment_Courses sc ON s.section_id = sc.course_id WHERE    s.section_name LIKE 'H%' GROUP BY    s.section_name",
    "exec_result": 0
  },
  {
    "idx": 582,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT SUM(T1.Course_Description) FROM Courses AS T1 INNER JOIN Student_Enrolment_Courses AS T2 ON T1.Course_ID = T2.Course_ID INNER JOIN Student_Enrolment AS T3 ON T3.Student_Enrolment_ID = T2.Student_Enrolment_ID INNER JOIN Sections AS T4 ON T4.Section_ID = T1.Section_ID WHERE T4.Section_Name = 'H'",
    "exec_result": 0
  },
  {
    "idx": 583,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti' OR cell_mobile_number = '09700166582')",
    "exec_result": 0
  },
  {
    "idx": 584,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT DISTINCT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'",
    "exec_result": 0
  },
  {
    "idx": 585,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT Title FROM Cartoon ORDER BY Title ASC",
    "exec_result": 1
  },
  {
    "idx": 586,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT title FROM cartoon ORDER BY title ASC",
    "exec_result": 1
  },
  {
    "idx": 587,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'",
    "exec_result": 1
  },
  {
    "idx": 588,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'",
    "exec_result": 1
  },
  {
    "idx": 589,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(DISTINCT c.id) FROM Cartoon AS c WHERE c.Written_by = 'Joseph Kuhr'",
    "exec_result": 1
  },
  {
    "idx": 590,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(id) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'",
    "exec_result": 1
  },
  {
    "idx": 591,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date",
    "exec_result": 1
  },
  {
    "idx": 592,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT T2.Title, T2.Directed_by FROM TV_series AS T1 JOIN Cartoon AS T2 ON T1.Channel = T2.Channel ORDER BY T1.Air_Date",
    "exec_result": 0
  },
  {
    "idx": 593,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Directed_by = 'Ben Jones' OR T1.Directed_by = 'Brandon Vietti'",
    "exec_result": 1
  },
  {
    "idx": 594,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'",
    "exec_result": 1
  },
  {
    "idx": 595,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT T1.Country, COUNT(T2.id) AS Num_of_TV_Channels FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel GROUP BY T1.Country ORDER BY Num_of_TV_Channels DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 596,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT COUNT(T1.id), T1.Country FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel GROUP BY T1.Country ORDER BY COUNT(T1.id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 597,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel",
    "exec_result": 1
  },
  {
    "idx": 598,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel",
    "exec_result": 1
  },
  {
    "idx": 599,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio'",
    "exec_result": 1
  },
  {
    "idx": 601,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio'",
    "exec_result": 1
  },
  {
    "idx": 602,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.series_name = 'Sky Radio'",
    "exec_result": 0
  },
  {
    "idx": 603,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(DISTINCT Channel) FROM TV_Channel WHERE Language = 'English'",
    "exec_result": 0
  },
  {
    "idx": 604,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(DISTINCT id) FROM TV_Channel WHERE Language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 605,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Language, COUNT(DISTINCT id) AS Number_of_TV_Channels  FROM TV_Channel  GROUP BY Language  ORDER BY Number_of_TV_Channels ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 606,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT COUNT(T1.Language), T1.Language FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel GROUP BY T1.Language ORDER BY COUNT(T1.id) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 607,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language ,  COUNT(*) FROM TV_Channel GROUP BY Language",
    "exec_result": 1
  },
  {
    "idx": 608,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language",
    "exec_result": 1
  },
  {
    "idx": 609,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT series_name FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Title = 'The Rise of the Blue Beetle!')",
    "exec_result": 1
  },
  {
    "idx": 610,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle'",
    "exec_result": 0
  },
  {
    "idx": 611,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Title FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')",
    "exec_result": 1
  },
  {
    "idx": 612,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT DISTINCT T3.title FROM TV_series AS T1 JOIN TV_channel AS T2 ON T1.channel = T2.id JOIN cartoon AS T3 ON T2.id = T3.channel WHERE T2.series_name = 'Sky Radio'",
    "exec_result": 0
  },
  {
    "idx": 613,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT Episode FROM TV_series ORDER BY Rating",
    "exec_result": 1
  },
  {
    "idx": 614,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT Episode FROM TV_series ORDER BY Rating",
    "exec_result": 1
  },
  {
    "idx": 615,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 616,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT Episode, Rating  FROM TV_series  ORDER BY Rating DESC  LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 617,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MIN(T1.Share), MAX(T1.Share) FROM TV_series AS T1 JOIN TV_channel AS T2 ON T1.channel  =  T2.id",
    "exec_result": 1
  },
  {
    "idx": 618,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MAX(T3.Share), MIN(T3.Share) FROM TV_Channel AS T1 JOIN TV_series AS T3 ON T1.id = T3.Channel",
    "exec_result": 1
  },
  {
    "idx": 619,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'",
    "exec_result": 1
  },
  {
    "idx": 620,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Episode FROM TV_series WHERE Title = 'A Love of a Lifetime'",
    "exec_result": 0
  },
  {
    "idx": 621,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT id  FROM TV_series  WHERE Episode = 'A Love of a Lifetime'",
    "exec_result": 0
  },
  {
    "idx": 622,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\"",
    "exec_result": 1
  },
  {
    "idx": 623,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT t1.series_name FROM TV_Channel AS t1 JOIN TV_series AS t2 ON t1.id  =  t2.Channel WHERE t2.Episode =  \"A Love of a Lifetime\"",
    "exec_result": 1
  },
  {
    "idx": 624,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT T3.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id JOIN Cartoon AS T3 ON T1.Channel = T3.Channel WHERE T1.Episode = 'A Love of a Lifetime'",
    "exec_result": 0
  },
  {
    "idx": 625,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'",
    "exec_result": 1
  },
  {
    "idx": 626,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT T3.Episode FROM TV_Channel AS T1  JOIN TV_series AS T2 ON T2.Channel = T1.id  JOIN Cartoon AS T3 ON T3.Channel = T1.id  WHERE T1.series_name = 'Sky Radio'",
    "exec_result": 0
  },
  {
    "idx": 627,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT COUNT(*) ,  T1.Directed_by FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id GROUP BY T1.Directed_by",
    "exec_result": 1
  },
  {
    "idx": 628,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT director, COUNT(id) as total_cartoons FROM Cartoon GROUP BY director",
    "exec_result": 0
  },
  {
    "idx": 629,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT t1.Production_code, t1.Channel FROM Cartoon AS t1 JOIN TV_Channel AS t2 ON t1.Channel  =  t2.id ORDER BY t1.Original_air_date DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 630,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT MAX(Cartoon.Production_code), Cartoon.Channel FROM Cartoon",
    "exec_result": 0
  },
  {
    "idx": 631,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 632,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT Package_Option, series_name FROM TV_Channel INNER JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE Hight_definition_TV = 'Yes'",
    "exec_result": 0
  },
  {
    "idx": 633,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT Country FROM TV_Channel WHERE EXISTS (SELECT 1 FROM Cartoon WHERE Written_by = 'Todd Casey' AND Channel = TV_Channel.id)",
    "exec_result": 1
  },
  {
    "idx": 634,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Written_by = 'Todd Casey'",
    "exec_result": 1
  },
  {
    "idx": 635,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Directed_by != 'Todd Casey' AND Channel IN (SELECT id FROM TV_Channel))",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT T.Country FROM TV_Channel AS T LEFT JOIN Cartoon AS C ON T.id = C.Channel WHERE C.Written_by != 'Todd Casey' OR C.Written_by IS NULL",
    "exec_result": 0
  },
  {
    "idx": 637,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT T2.series_name, T2.Country FROM Cartoon AS T1  JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by = 'Ben Jones' AND T1.Directed_by = 'Michael Chang'",
    "exec_result": 0
  },
  {
    "idx": 638,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT T1.series_name, T1.Country FROM TV_channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones'",
    "exec_result": 0
  },
  {
    "idx": 639,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT t1.Pixel_aspect_ratio_PAR, t1.Country FROM TV_Channel AS t1 JOIN TV_series AS t2 ON t1.id = t2.Channel WHERE t1.Language != 'English'",
    "exec_result": 0
  },
  {
    "idx": 640,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English';",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT t1.id FROM TV_Channel AS t1 JOIN TV_series AS t2 ON t1.id  =  t2.Channel GROUP BY t1.Country HAVING count(*)  >  2",
    "exec_result": 1
  },
  {
    "idx": 642,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT id FROM TV_Channel WHERE id IN (SELECT Channel FROM TV_series GROUP BY Channel HAVING COUNT(Channel) > 2)",
    "exec_result": 0
  },
  {
    "idx": 643,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT DISTINCT T1.id FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.id NOT IN (SELECT T1.id FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = 'Ben Jones')",
    "exec_result": 0
  },
  {
    "idx": 644,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT id FROM TV_Channel WHERE Directed_by != 'Ben Jones';",
    "exec_result": 0
  },
  {
    "idx": 645,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT DISTINCT Package_Option FROM TV_Channel WHERE Channel NOT IN (SELECT id FROM Cartoon WHERE Directed_by = 'Ben Jones')",
    "exec_result": 0
  },
  {
    "idx": 646,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT t1.Package_Option FROM TV_channel AS t1 JOIN TV_series AS t2 ON t1.id = t2.Channel JOIN Cartoon AS t3 ON t2.Channel = t3.Channel WHERE t3.Directed_by != 'Ben Jones'",
    "exec_result": 0
  },
  {
    "idx": 647,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 648,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(Poker_Player_ID) FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 649,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT DISTINCT Earnings FROM poker_player ORDER BY Earnings DESC",
    "exec_result": 1
  },
  {
    "idx": 650,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT Final_Table_Made, Best_Finish FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 652,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT Final_Table_Made, Best_Finish FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 653,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(Earnings) FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 654,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(Earnings) FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 655,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 656,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT money_rank FROM poker_player ORDER BY earnings DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 657,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000",
    "exec_result": 1
  },
  {
    "idx": 658,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(Final_Table_Made)  FROM poker_player  JOIN people ON poker_player.People_ID = people.People_ID  WHERE Earnings < 200000",
    "exec_result": 1
  },
  {
    "idx": 659,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT Name FROM people",
    "exec_result": 0
  },
  {
    "idx": 660,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT Name FROM people",
    "exec_result": 0
  },
  {
    "idx": 661,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT name FROM people WHERE people_id IN (SELECT people_id FROM poker_player WHERE earnings > 300000)",
    "exec_result": 1
  },
  {
    "idx": 662,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT T3.name FROM poker_player AS T1 JOIN people AS T3 ON T1.people_id  =  T3.people_id WHERE T1.earnings  >  300000",
    "exec_result": 1
  },
  {
    "idx": 663,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Final_Table_Made ASC",
    "exec_result": 1
  },
  {
    "idx": 664,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC",
    "exec_result": 1
  },
  {
    "idx": 665,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT Birth_Date FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Earnings ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 666,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT Birth_Date FROM people WHERE People_ID = (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 667,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT money_rank FROM poker_player ORDER BY height DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 668,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT T1.Money_Rank FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 669,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200",
    "exec_result": 1
  },
  {
    "idx": 670,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "exec_result": 1
  },
  {
    "idx": 671,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT P.Name  FROM poker_player P  JOIN people People ON P.People_ID = People.People_ID  ORDER BY P.Earnings DESC",
    "exec_result": 0
  },
  {
    "idx": 672,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT T1.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC",
    "exec_result": 0
  },
  {
    "idx": 673,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 674,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 675,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID GROUP BY T1.Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 676,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 677,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID GROUP BY T1.Nationality HAVING COUNT(*)  >=  2",
    "exec_result": 1
  },
  {
    "idx": 678,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 679,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT T1.name, T1.birth_date FROM people AS T1 JOIN poker_player AS T2 ON T1.people_id = T2.people_id ORDER BY T1.name ASC",
    "exec_result": 0
  },
  {
    "idx": 680,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT T1.Name, T1.Birth_Date FROM people AS T1 ORDER BY T1.Name",
    "exec_result": 1
  },
  {
    "idx": 681,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Nationality != 'Russia'",
    "exec_result": 1
  },
  {
    "idx": 682,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT Name FROM people WHERE Nationality != 'Russia'",
    "exec_result": 1
  },
  {
    "idx": 683,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "exec_result": 1
  },
  {
    "idx": 684,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "exec_result": 1
  },
  {
    "idx": 685,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM people",
    "exec_result": 1
  },
  {
    "idx": 686,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM people",
    "exec_result": 1
  },
  {
    "idx": 687,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM area_code_state",
    "pred": "SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE",
    "exec_result": 1
  },
  {
    "idx": 688,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "pred": "SELECT contestant_number, contestant_name  FROM CONTESTANTS  ORDER BY contestant_name DESC",
    "exec_result": 1
  },
  {
    "idx": 689,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "pred": "SELECT vote_id, phone_number, state FROM VOTES",
    "exec_result": 1
  },
  {
    "idx": 690,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "pred": "SELECT MAX(area_code) FROM AREA_CODE_STATE;",
    "exec_result": 0
  },
  {
    "idx": 691,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "pred": "SELECT MAX(created) FROM votes WHERE state = 'CA';",
    "exec_result": 1
  },
  {
    "idx": 692,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "pred": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 INNER JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name != 'Jessie Alloway'",
    "exec_result": 0
  },
  {
    "idx": 693,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT DISTINCT state ,  created FROM votes",
    "pred": "SELECT DISTINCT state, created FROM votes;",
    "exec_result": 1
  },
  {
    "idx": 694,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 695,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT MIN(c.contestant_number) AS contestant_number ,  MIN(c.contestant_name) AS contestant_name  FROM CONTESTANTS c INNER JOIN VOTES v ON c.contestant_number = v.contestant_number GROUP BY c.contestant_number ,  c.contestant_name ORDER BY COUNT(v.contestant_number) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 696,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "pred": "SELECT COUNT(*)  FROM VOTES  WHERE state IN ('NY', 'CA')",
    "exec_result": 1
  },
  {
    "idx": 697,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "pred": "SELECT count(*) FROM CONTESTANTS AS T1 LEFT JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number IS NULL",
    "exec_result": 1
  },
  {
    "idx": 698,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 699,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "pred": "SELECT created, state, phone_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling'",
    "exec_result": 1
  },
  {
    "idx": 700,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "pred": "SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number WHERE T3.contestant_name = 'Kelly Clauss'",
    "exec_result": 1
  },
  {
    "idx": 701,
    "db_id": "voter_1",
    "question": "",
    "gold": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "pred": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'",
    "exec_result": 1
  },
  {
    "idx": 702,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT Name FROM country WHERE IndepYear > 1950",
    "exec_result": 1
  },
  {
    "idx": 703,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT t1.name FROM country AS t1 JOIN sqlite_sequence AS t2 ON t1.code = t2.name WHERE t1.indepyear > 1950",
    "exec_result": 0
  },
  {
    "idx": 704,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'",
    "exec_result": 1
  },
  {
    "idx": 705,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(C.Code) FROM country C WHERE C.GovernmentForm = 'Republic'",
    "exec_result": 1
  },
  {
    "idx": 706,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(T1.SurfaceArea) FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Region = 'Caribbean'",
    "exec_result": 0
  },
  {
    "idx": 707,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT sum(T2.SurfaceArea) FROM country AS T1 JOIN country AS T2 ON T1.Code = T2.Code WHERE T2.Continent = 'Caribbean'",
    "exec_result": 0
  },
  {
    "idx": 708,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT Continent FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = 'Anguilla')",
    "exec_result": 0
  },
  {
    "idx": 709,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT T1.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Anguilla'",
    "exec_result": 0
  },
  {
    "idx": 710,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT Region FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = \"Kabul\");",
    "exec_result": 1
  },
  {
    "idx": 711,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT Region FROM country WHERE Name = 'Kabul';",
    "exec_result": 0
  },
  {
    "idx": 712,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 713,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT Name FROM countrylanguages WHERE CountryCode = (SELECT CountryCode FROM city WHERE Name = 'Aruba') AND IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT Population, LifeExpectancy FROM country WHERE Code = 'BRA'",
    "exec_result": 1
  },
  {
    "idx": 715,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'",
    "exec_result": 1
  },
  {
    "idx": 716,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT Region, Population FROM Country WHERE Code = 'ANG'",
    "exec_result": 0
  },
  {
    "idx": 717,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT T2.Region FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Angola'",
    "exec_result": 0
  },
  {
    "idx": 718,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT avg(T1.LifeExpectancy) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Region = 'Central Africa'",
    "exec_result": 0
  },
  {
    "idx": 719,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(t2.LifeExpectancy) FROM country AS t1 INNER JOIN city AS t2 ON t1.Code = t2.CountryCode WHERE t1.Continent = 'Africa'",
    "exec_result": 0
  },
  {
    "idx": 720,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT T3.Name  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  JOIN city AS T3 ON T1.Code = T3.CountryCode  WHERE T2.IsOfficial = 'T' AND T1.Continent = 'Asia'  ORDER BY T1.LifeExpectancy ASC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 721,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT T2.name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Asia' ORDER BY T2.LifeExpectancy LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 722,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT sum(Population), max(GNP) FROM city AS t1 JOIN country AS t2 ON t1.CountryCode = t2.Code WHERE Continent = 'Asia'",
    "exec_result": 0
  },
  {
    "idx": 723,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT sum(population) FROM city WHERE countrycode IN (SELECT Code FROM country WHERE continent = 'Asia');",
    "exec_result": 0
  },
  {
    "idx": 724,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(lifeexpectancy) FROM country WHERE governmentform = 'Republic' AND continent = 'Africa'",
    "exec_result": 1
  },
  {
    "idx": 725,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(t2.LifeExpectancy) FROM country AS t1 INNER JOIN city AS t3 ON t1.Code = t3.CountryCode WHERE t1.Continent = 'Africa' AND t1.GovernmentForm = 'Republic'",
    "exec_result": 0
  },
  {
    "idx": 726,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT sum(T1.surfacearea) FROM country AS T1 INNER JOIN continent AS T2 ON T1.continent_id = T2.id WHERE T2.name = 'Asia' OR T2.name = 'Europe'",
    "exec_result": 0
  },
  {
    "idx": 727,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(T2.SurfaceArea) FROM country AS T1 JOIN country AS T2 ON T1.Code = T2.Code WHERE T2.Continent IN ('Asia', 'Europe')",
    "exec_result": 1
  },
  {
    "idx": 728,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT COUNT(*) FROM city WHERE District = 'Gelderland'",
    "exec_result": 0
  },
  {
    "idx": 729,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT SUM(T1.Population) FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.District = 'Gelderland'",
    "exec_result": 1
  },
  {
    "idx": 730,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(t1.GNP), SUM(t1.Population) FROM country AS t1 JOIN government_type AS t2 ON t1.GovernmentForm = t2.Form WHERE t2.Type = 'US Territory'",
    "exec_result": 0
  },
  {
    "idx": 731,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT SUM(T1.Population), AVG(T1.GNP) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T1.`IndepYear` < 1949",
    "exec_result": 0
  },
  {
    "idx": 732,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage",
    "exec_result": 1
  },
  {
    "idx": 733,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT language) FROM countrylanguage",
    "exec_result": 1
  },
  {
    "idx": 734,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT count(T2.Code) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  'Africa' AND T2.IsOfficial  =  'T'",
    "exec_result": 0
  },
  {
    "idx": 735,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'",
    "exec_result": 1
  },
  {
    "idx": 736,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW'",
    "exec_result": 1
  },
  {
    "idx": 737,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT COUNT(L.Language)  FROM country C  JOIN countrylanguage L ON C.Code = L.CountryCode  WHERE C.Name = 'Aruba'",
    "exec_result": 1
  },
  {
    "idx": 738,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(Language) FROM countryLanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 739,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(T1.Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND T2.Name = 'Afghanistan'",
    "exec_result": 1
  },
  {
    "idx": 740,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 741,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.CountryCode ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 742,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT t3.Continent FROM country AS t1 JOIN countrylanguage AS t2 ON t1.Code = t2.CountryCode JOIN city AS t3 ON t1.Code = t3.CountryCode GROUP BY t3.CountryCode ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 743,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.continent FROM countrylanguage AS T1 JOIN country AS T2 ON T1.countrycode = T2.code GROUP BY T2.continent ORDER BY COUNT(T1.language) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 744,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(*) FROM (SELECT DISTINCT c1.Code FROM country c1 JOIN countrylanguage cl1 ON c1.Code = cl1.CountryCode WHERE cl1.Language = 'English') AS subquery1 JOIN (SELECT DISTINCT c2.Code FROM country c2 JOIN countrylanguage cl2 ON c2.Code = cl2.CountryCode WHERE cl2.Language = 'Dutch') AS subquery2 ON subquery1.Code = subquery2.Code",
    "exec_result": 1
  },
  {
    "idx": 745,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(T1.Code) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE (T2.Language = 'English' AND T2.IsOfficial = 'T') OR (T2.Language = 'Dutch' AND T2.IsOfficial = 'T')",
    "exec_result": 0
  },
  {
    "idx": 746,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT DISTINCT C.Name FROM country AS C JOIN countrylanguage AS CL1 ON C.Code = CL1.CountryCode JOIN countrylanguage AS CL2 ON C.Code = CL2.CountryCode WHERE CL1.Language = 'English' AND CL2.Language = 'French';",
    "exec_result": 1
  },
  {
    "idx": 747,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'English' AND T2.Name IN (SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'French')",
    "exec_result": 1
  },
  {
    "idx": 748,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT T2.name FROM country AS T2 JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' AND T3.Language = 'French'",
    "exec_result": 0
  },
  {
    "idx": 749,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name  FROM country AS c  JOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode  JOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode  WHERE cl1.Language = 'English' AND cl2.Language = 'French'",
    "exec_result": 0
  },
  {
    "idx": 750,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT count(DISTINCT t2.continent)  FROM countrylanguage t1  JOIN country t2 ON t1.countrycode = t2.code  WHERE t1.language = 'Chinese'",
    "exec_result": 1
  },
  {
    "idx": 751,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese')",
    "exec_result": 1
  },
  {
    "idx": 752,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT Region FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch'))",
    "exec_result": 0
  },
  {
    "idx": 753,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT region FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE language IN ('Dutch', 'English') GROUP BY region",
    "exec_result": 0
  },
  {
    "idx": 754,
    "db_id": "world_1",
    "question": "",
    "gold": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "pred": "SELECT T2.Name FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'English' OR T1.Language = 'Dutch' AND T1.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 755,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch');",
    "exec_result": 0
  },
  {
    "idx": 756,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 757,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 758,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT L.Language FROM countrylanguage AS L  JOIN country AS C ON L.CountryCode = C.Code  WHERE L.IsOfficial = 'T' AND C.GovernmentForm = 'Republic'  GROUP BY L.Language  HAVING COUNT(DISTINCT C.Code) = 1",
    "exec_result": 0
  },
  {
    "idx": 759,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT L1.Language FROM countrylanguage AS L1 JOIN country AS C ON L1.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY L1.Language HAVING COUNT(*) = 1",
    "exec_result": 1
  },
  {
    "idx": 760,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT Name, Population FROM city WHERE Language = 'English' ORDER BY Population DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 761,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Population = (SELECT MAX(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T')",
    "exec_result": 0
  },
  {
    "idx": 762,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT T1.name ,  T1.Population ,  T1.LifeExpectancy FROM country AS T1 INNER JOIN ( SELECT * FROM city GROUP BY CountryCode ORDER BY COUNT(ID) DESC LIMIT 1 ) AS T2 ON T1.Code = T2.CountryCode",
    "exec_result": 1
  },
  {
    "idx": 763,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 764,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(T2.LifeExpectancy) FROM country AS T1 INNER JOIN city AS T3 ON T1.Code = T3.CountryCode INNER JOIN countrylanguage AS T4 ON T1.Code = T4.CountryCode WHERE T4.IsOfficial != 'T' AND T4.Language != 'english'",
    "exec_result": 0
  },
  {
    "idx": 765,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(c.LifeExpectancy) FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language <> 'English'",
    "exec_result": 0
  },
  {
    "idx": 766,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT COUNT(*) FROM country AS T1 JOIN city AS T2 ON T1.code = T2.countrycode WHERE T1.code NOT IN (SELECT countrycode FROM countrylanguage AS T3 WHERE language = 'English')",
    "exec_result": 0
  },
  {
    "idx": 767,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT SUM(T2.Population) FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Language = 'English'",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT L.Language FROM country AS C INNER JOIN countrylanguage AS L ON C.Code = L.CountryCode WHERE C.HeadOfState = 'Beatrix';",
    "exec_result": 0
  },
  {
    "idx": 769,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT L.Language  FROM country AS C INNER JOIN countrylanguage AS L ON C.Code = L.CountryCode WHERE C.HeadOfState = 'Beatrix'",
    "exec_result": 0
  },
  {
    "idx": 770,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT T1.Language) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930",
    "exec_result": 0
  },
  {
    "idx": 771,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT T3.Language) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode INNER JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode WHERE T1.IndepYear < 1930",
    "exec_result": 0
  },
  {
    "idx": 772,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT t2.Code, t2.Name FROM country AS t1 INNER JOIN country AS t2 ON t1.Code = t2.Code WHERE t1.Continent = 'Europe' AND t2.SurfaceArea > t1.SurfaceArea",
    "exec_result": 0
  },
  {
    "idx": 773,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT c1.Name  FROM country AS c1  JOIN (SELECT MAX(SurfaceArea) AS MaxSurfaceArea FROM country WHERE Continent = 'Europe') AS c2  WHERE c1.SurfaceArea > c2.MaxSurfaceArea",
    "exec_result": 0
  },
  {
    "idx": 774,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT Code FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT t2.Name  FROM country t1  JOIN country t2 ON t1.Continent = 'Asia'  JOIN country t3 ON t3.Continent = 'Africa'  WHERE t1.Population > t3.Population",
    "exec_result": 0
  },
  {
    "idx": 776,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT Name, Population  FROM country  WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population)  FROM country  WHERE Continent = 'Africa')",
    "exec_result": 0
  },
  {
    "idx": 777,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT T2.Name FROM country AS T1 JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T1.Continent = 'Asia' AND T3.Population > ( SELECT MAX(T3.Population) FROM country AS T1 JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T1.Continent = 'Africa' )",
    "exec_result": 0
  },
  {
    "idx": 778,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
    "exec_result": 0
  },
  {
    "idx": 779,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT CountryCode FROM country WHERE NOT EXISTS (SELECT NULL FROM countrylanguage WHERE CountryCode = country.Code AND Language = 'English')",
    "exec_result": 0
  },
  {
    "idx": 780,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language != 'English' GROUP BY T1.Code",
    "exec_result": 0
  },
  {
    "idx": 781,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT DISTINCT c.Code FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.Language != 'English'",
    "exec_result": 1
  },
  {
    "idx": 782,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Language != 'English'",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT C.Code FROM country AS C WHERE NOT EXISTS (SELECT 1 FROM countrylanguage AS CL WHERE CL.CountryCode = C.Code AND CL.Language = 'English' AND CL.IsOfficial = 'T') AND NOT EXISTS (SELECT 1 FROM country WHERE C.GovernmentForm LIKE '%Republic%')",
    "exec_result": 0
  },
  {
    "idx": 784,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT C.Name FROM city AS C JOIN country AS Co ON C.CountryCode = Co.Code WHERE Co.Continent = 'Europe' AND NOT EXISTS (SELECT 1 FROM countrylanguage AS CL WHERE CL.CountryCode = Co.Code AND CL.Language = 'English' AND CL.IsOfficial = 'T')",
    "exec_result": 1
  },
  {
    "idx": 785,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT c.Name FROM city AS c JOIN country AS co ON c.CountryCode = co.Code JOIN countrylanguage AS cl ON co.Code = cl.CountryCode WHERE co.Continent = 'Europe' AND cl.Language = 'English' AND cl.IsOfficial = 'F'",
    "exec_result": 0
  },
  {
    "idx": 786,
    "db_id": "world_1",
    "question": "",
    "gold": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "pred": "SELECT DISTINCT c1.Name FROM city c1 JOIN country c2 ON c1.CountryCode = c2.Code JOIN countrylanguage c3 ON c2.Code = c3.CountryCode WHERE c2.Continent = 'Asia' AND c3.IsOfficial = 'T' AND c3.Language = 'Chinese'",
    "exec_result": 0
  },
  {
    "idx": 787,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "pred": "SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.IsOfficial = 'T' AND countrylanguage.Language = 'Chinese'",
    "exec_result": 1
  },
  {
    "idx": 788,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 789,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT T2.Name, T2.IndepYear, T2.SurfaceArea  FROM city AS T1  INNER JOIN country AS T2  ON T1.CountryCode = T2.Code  WHERE T2.Population = (SELECT MIN(Population) FROM country)",
    "exec_result": 0
  },
  {
    "idx": 790,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT      c.Population,     c.Name,     L.HeadOfState FROM      country c JOIN      (SELECT          HeadOfState      FROM          country      ORDER BY          SurfaceArea DESC      LIMIT 1) L ON 1=1 WHERE      c.SurfaceArea = (         SELECT              MAX(SurfaceArea)         FROM              country     );",
    "exec_result": 1
  },
  {
    "idx": 791,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT Name , Population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 792,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage >= 3 GROUP BY T1.Name",
    "exec_result": 0
  },
  {
    "idx": 793,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT CountryCode ,  COUNT(Language) FROM countrylanguage GROUP BY CountryCode HAVING COUNT(Language)  > 2",
    "exec_result": 0
  },
  {
    "idx": 794,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT COUNT(*)  FROM city  WHERE Population > (SELECT AVG(Population)                     FROM city                     WHERE District = city.District)",
    "exec_result": 0
  },
  {
    "idx": 795,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT COUNT(*) AS NumCities, D.District  FROM city AS C  JOIN country AS Co ON C.CountryCode = Co.Code  JOIN (      SELECT District      FROM city      WHERE Population > (          SELECT AVG(Population)          FROM city      )      GROUP BY District  ) AS D ON C.District = D.District  GROUP BY D.District",
    "exec_result": 0
  },
  {
    "idx": 796,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72",
    "exec_result": 1
  },
  {
    "idx": 797,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72",
    "exec_result": 1
  },
  {
    "idx": 798,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT continent, AVG(lifeexpectancy) AS avg_life_expectancy, SUM(population) AS total_population FROM country WHERE lifeexpectancy < 72 GROUP BY continent",
    "exec_result": 0
  },
  {
    "idx": 799,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT continent, SUM(population), AVG(lifeexpectancy) FROM country WHERE lifeexpectancy < 72 GROUP BY continent",
    "exec_result": 0
  },
  {
    "idx": 800,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT name ,  surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 801,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 802,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 803,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT T1.Name FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode ORDER BY T2.Population DESC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 804,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 805,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT T1.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode ORDER BY T1.Population ASC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 806,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(Code) FROM country WHERE Continent = 'Asia'",
    "exec_result": 1
  },
  {
    "idx": 807,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(Code) FROM country WHERE Continent = 'Asia'",
    "exec_result": 1
  },
  {
    "idx": 808,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT T2.name FROM city AS T1 JOIN country AS T2 ON T1.countrycode = T2.code WHERE T2.continent = 'Europe' AND T1.population = 80000",
    "exec_result": 1
  },
  {
    "idx": 809,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT T2.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Europe' AND T2.Population = 80000",
    "exec_result": 1
  },
  {
    "idx": 810,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT T3.Sum_Population, T3.Average_Area FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN ( SELECT T4.Continent, SUM(T1.Population) AS Sum_Population, AVG(T1.SurfaceArea) AS Average_Area FROM city AS T1 INNER JOIN country AS T4 ON T1.CountryCode = T4.Code WHERE T4.Continent = 'North America' AND T1.SurfaceArea > 3000 GROUP BY T4.Continent ) AS T3 ON T1.Continent = T3.Continent",
    "exec_result": 0
  },
  {
    "idx": 811,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT SUM(T1.Population), AVG(T1.SurfaceArea) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'North America' AND T1.SurfaceArea > 3000",
    "exec_result": 0
  },
  {
    "idx": 812,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "pred": "SELECT Name FROM city WHERE Population >= 160000 AND Population <= 900000",
    "exec_result": 1
  },
  {
    "idx": 813,
    "db_id": "world_1",
    "question": "",
    "gold": "select name from city where population between 160000 and 900000",
    "pred": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "exec_result": 1
  },
  {
    "idx": 814,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 815,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 816,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT T3.name AS country, T4.Language AS language, T4.Percentage FROM country AS T1 JOIN countrylanguage AS T4 ON T1.Code = T4.CountryCode JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T3.Population = (SELECT MAX(Population) FROM city WHERE CountryCode = T3.CountryCode) AND T4.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T3.CountryCode)",
    "exec_result": 0
  },
  {
    "idx": 817,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = MAX(T2.Percentage) GROUP BY T1.Code",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(DISTINCT T2.CountryCode)  FROM countrylanguage AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'Spanish' AND T1.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T2.Code)",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(T1.Code) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND T2.Percentage >= 50 AND T2.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 820,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT Code FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish') AND Population = (SELECT Population FROM country WHERE Language = 'Spanish' ORDER BY Population DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 821,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT c.Code  FROM country AS c  INNER JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  WHERE cl.Language = 'Spanish' AND cl.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 822,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(*) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 823,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Name) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 824,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT Name FROM conductor ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 825,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID ORDER BY T1.Age",
    "exec_result": 1
  },
  {
    "idx": 826,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Nationality != \"USA\"",
    "exec_result": 1
  },
  {
    "idx": 827,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT t1.Name  FROM conductor AS t1  JOIN orchestra AS t2 ON t1.Conductor_ID = t2.Conductor_ID  WHERE t1.Nationality <> 'USA'",
    "exec_result": 1
  },
  {
    "idx": 828,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "exec_result": 1
  },
  {
    "idx": 829,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "exec_result": 1
  },
  {
    "idx": 830,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(T3.Attendance) FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID JOIN show AS T3 ON T2.Show_ID = T3.Show_ID",
    "exec_result": 1
  },
  {
    "idx": 831,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(Attendance) FROM show",
    "exec_result": 1
  },
  {
    "idx": 832,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MAX(t3.Share)  FROM performance AS t1  INNER JOIN show AS t2 ON t1.Performance_ID = t2.Performance_ID  INNER JOIN orchestra AS t3 ON t1.Orchestra_ID = t3.Orchestra_ID  WHERE t1.Type != 'Live final'",
    "exec_result": 0
  },
  {
    "idx": 833,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MAX(T.Official_ratings_(millions)), MIN(T.Official_ratings_(millions)) FROM performance AS T WHERE T.Type != 'Live final'",
    "exec_result": 0
  },
  {
    "idx": 834,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT count(DISTINCT Nationality) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 835,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 836,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT name FROM conductor ORDER BY year_of_work DESC",
    "exec_result": 1
  },
  {
    "idx": 837,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT Name  FROM conductor  ORDER BY Year_of_Work DESC",
    "exec_result": 1
  },
  {
    "idx": 838,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 839,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 840,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT T2.Name, T1.Orchestra  FROM orchestra AS T1  JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
    "exec_result": 1
  },
  {
    "idx": 841,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT T.name, O.orchestra FROM conductor AS T INNER JOIN orchestra AS O ON T.conductor_id  =  O.conductor_id",
    "exec_result": 1
  },
  {
    "idx": 842,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 843,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT T2.Name FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Orchestra IN ( SELECT T3.Orchestra FROM performance AS T1 JOIN orchestra AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID GROUP BY T3.Orchestra HAVING COUNT(T3.Orchestra) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 844,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1);",
    "exec_result": 1
  },
  {
    "idx": 845,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT C.Name FROM conductor C JOIN orchestra O ON C.Conductor_ID = O.Conductor_ID WHERE O.Year_of_Founded > 2008",
    "exec_result": 1
  },
  {
    "idx": 847,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded > 2008)",
    "exec_result": 1
  },
  {
    "idx": 848,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "exec_result": 1
  },
  {
    "idx": 849,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT count(*) ,  Record_Company FROM orchestra GROUP BY Record_Company",
    "exec_result": 1
  },
  {
    "idx": 850,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC",
    "exec_result": 0
  },
  {
    "idx": 851,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT `Major_Record_Format` FROM `orchestra` GROUP BY `Major_Record_Format` ORDER BY COUNT(*) DESC",
    "exec_result": 0
  },
  {
    "idx": 852,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT R.Record_Company  FROM orchestra AS O JOIN performance AS P ON O.Orchestra_ID = P.Orchestra_ID  JOIN conductor AS C ON O.Conductor_ID = C.Conductor_ID WHERE O.Major_Record_Format = 'CD' AND C.Nationality = 'United Kingdom' AND P.Official_ratings_millions > 100  GROUP BY R.Record_Company  ORDER BY COUNT(R.Record_Company) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 853,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Record_Company`  FROM `orchestra`  WHERE `Record_Company` IS NOT NULL  GROUP BY `Record_Company`  ORDER BY COUNT(`Orchestra_ID`) DESC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 854,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT name FROM orchestra WHERE orchestra_id NOT IN (SELECT orchestra_id FROM performance)",
    "exec_result": 0
  },
  {
    "idx": 855,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "exec_result": 1
  },
  {
    "idx": 856,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003",
    "exec_result": 1
  },
  {
    "idx": 857,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003",
    "exec_result": 1
  },
  {
    "idx": 858,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(DISTINCT `Major_Record_Format`) FROM orchestra WHERE `Major_Record_Format` IN ('CD', 'DVD')",
    "exec_result": 1
  },
  {
    "idx": 859,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(T3.Orchestra_ID) FROM performance AS T1 INNER JOIN orchestra AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T3.Major_Record_Format IN ('CD', 'DVD')",
    "exec_result": 0
  },
  {
    "idx": 860,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT Year_of_Founded FROM orchestra",
    "exec_result": 0
  },
  {
    "idx": 861,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT Year_of_Founded  FROM orchestra  JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID  GROUP BY Year_of_Founded  HAVING COUNT(DISTINCT Performance_ID) > 1",
    "exec_result": 0
  },
  {
    "idx": 862,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(ID) FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(DISTINCT ID) FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 864,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 865,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 866,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT DISTINCT grade FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 867,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT grade FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 868,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id = 101",
    "exec_result": 0
  },
  {
    "idx": 869,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade FROM Highschooler WHERE name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 870,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name FROM Highschooler WHERE grade = 10",
    "exec_result": 1
  },
  {
    "idx": 871,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name  FROM Highschooler  WHERE grade = 10;",
    "exec_result": 1
  },
  {
    "idx": 872,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 873,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 874,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10)",
    "exec_result": 1
  },
  {
    "idx": 875,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) FROM Highschooler WHERE grade = 9 OR grade = 10",
    "exec_result": 1
  },
  {
    "idx": 876,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade, COUNT(ID) FROM Highschooler GROUP BY grade",
    "exec_result": 1
  },
  {
    "idx": 877,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade",
    "exec_result": 0
  },
  {
    "idx": 878,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 879,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade  FROM Highschooler  GROUP BY grade  ORDER BY COUNT(ID) DESC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 880,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(ID) >= 4",
    "exec_result": 1
  },
  {
    "idx": 881,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade  FROM Highschooler  GROUP BY grade  HAVING COUNT(ID) >= 4",
    "exec_result": 1
  },
  {
    "idx": 882,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT h.ID, COUNT(f.student_id) AS num_friends FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID",
    "exec_result": 0
  },
  {
    "idx": 883,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT COUNT(friend_id) FROM Friend WHERE student_id = ID",
    "exec_result": 0
  },
  {
    "idx": 884,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT hs.name, COUNT(*) as num_friends FROM Highschooler hs  JOIN Friend f ON hs.ID = f.student_id  GROUP BY hs.name",
    "exec_result": 0
  },
  {
    "idx": 885,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT name ,  COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID GROUP BY Friend.student_id",
    "exec_result": 1
  },
  {
    "idx": 886,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(student_id) DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 887,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T2.ID = T1.student_id JOIN Highschooler AS T3 ON T3.ID = T1.friend_id GROUP BY T3.ID ORDER BY count(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 888,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(friend_id) >= 3)",
    "exec_result": 1
  },
  {
    "idx": 889,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Highschooler.ID IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler) GROUP BY student_id HAVING COUNT(friend_id) >= 3)",
    "exec_result": 0
  },
  {
    "idx": 890,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT DISTINCT T1.name  FROM Highschooler AS T1  JOIN Friend AS T2 ON T1.ID = T2.friend_id  WHERE T2.student_id = 1",
    "exec_result": 0
  },
  {
    "idx": 891,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT T3.name  FROM Friend AS T1  JOIN Highschooler AS T2  ON T1.friend_id = T2.ID  JOIN Highschooler AS T3  ON T1.student_id = T3.ID  WHERE T2.name = 'Kyle'",
    "exec_result": 0
  },
  {
    "idx": 892,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id = 1",
    "exec_result": 0
  },
  {
    "idx": 893,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(DISTINCT T1.friend_id) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID WHERE T2.name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 894,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT ID FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "exec_result": 1
  },
  {
    "idx": 895,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT student_id FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID",
    "exec_result": 1
  },
  {
    "idx": 897,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT friend_id FROM Friend) AND ID NOT IN (SELECT DISTINCT liked_id FROM Likes)",
    "exec_result": 0
  },
  {
    "idx": 898,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT DISTINCT h.ID FROM Highschooler h JOIN Friend f ON h.ID = f.student_id JOIN Likes l ON h.ID = l.student_id",
    "exec_result": 0
  },
  {
    "idx": 899,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT DISTINCT T1.student_id FROM Likes AS T1 JOIN Friend AS T2 ON T1.student_id = T2.student_id WHERE T2.student_id IN (SELECT student_id FROM Likes WHERE student_id IN (SELECT student_id FROM Friend))",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT name FROM highschooler WHERE ID IN (SELECT student_id FROM friend GROUP BY student_id) AND ID IN (SELECT liked_id FROM likes GROUP BY liked_id);",
    "exec_result": 1
  },
  {
    "idx": 901,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT liked_id FROM Likes WHERE student_id IN (SELECT student_id FROM Friend))",
    "exec_result": 0
  },
  {
    "idx": 902,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(*) AS total_likes FROM Likes GROUP BY student_id",
    "exec_result": 1
  },
  {
    "idx": 903,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(*)  FROM Likes  GROUP BY student_id",
    "exec_result": 1
  },
  {
    "idx": 904,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT T1.name, COUNT(*) as num FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name",
    "exec_result": 0
  },
  {
    "idx": 905,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT highschooler.name, COUNT(*) as count FROM highschooler JOIN likes ON highschooler.ID = likes.student_id GROUP BY highschooler.ID, highschooler.name",
    "exec_result": 1
  },
  {
    "idx": 906,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name FROM highschooler WHERE ID IN (SELECT student_id FROM likes GROUP BY student_id ORDER BY COUNT(liked_id) DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 907,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id GROUP BY T1.liked_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 908,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)",
    "exec_result": 1
  },
  {
    "idx": 909,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id HAVING COUNT(*)  >=  2",
    "exec_result": 1
  },
  {
    "idx": 910,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT name FROM Highschooler WHERE grade &gt; 5 AND ID IN (SELECT T1.student_id FROM Friend AS T1 JOIN Friend AS T2 ON T1.student_id = T2.friend_id WHERE T1.friend_id = T2.student_id AND T2.friend_id = T1.student_id)",
    "exec_result": 0
  },
  {
    "idx": 911,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T2.student_id HAVING COUNT(friend_id) >= 2) AND grade > 5",
    "exec_result": 1
  },
  {
    "idx": 912,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')",
    "exec_result": 1
  },
  {
    "idx": 913,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(liked_id)  FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 914,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(grade)  FROM Highschooler  JOIN Friend ON Highschooler.ID = Friend.student_id  GROUP BY grade;",
    "exec_result": 0
  },
  {
    "idx": 915,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(grade)  FROM Highschooler  WHERE ID IN (SELECT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 916,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(grade)  FROM Highschooler  WHERE ID NOT IN (     SELECT DISTINCT student_id      FROM Friend      UNION      SELECT DISTINCT friend_id      FROM Friend )",
    "exec_result": 0
  },
  {
    "idx": 917,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 918,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT t3.state FROM Owners AS t1  JOIN Dogs AS t2 ON t1.owner_id = t2.owner_id  JOIN Professionals AS t3 ON t3.owner_id = t2.owner_id",
    "exec_result": 0
  },
  {
    "idx": 919,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT T1.state FROM dogs AS T1 INNER JOIN owners AS T2 ON T1.owner_id = T2.owner_id INNER JOIN professionals AS T3 ON T1.dog_id = T3.dog_id GROUP BY T2.state, T3.state",
    "exec_result": 0
  },
  {
    "idx": 920,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
    "exec_result": 0
  },
  {
    "idx": 921,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
    "exec_result": 0
  },
  {
    "idx": 922,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT professional_id, last_name, cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id WHERE T1.state  =  'Indiana' OR T2.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING count(*)  >  2)",
    "exec_result": 0
  },
  {
    "idx": 923,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2 )",
    "exec_result": 1
  },
  {
    "idx": 924,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT name FROM dogs WHERE cost_of_treatment * (1 - 0.15) <= 1000",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) <= 1000",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)",
    "exec_result": 1
  },
  {
    "idx": 927,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT first_name FROM Dogs) UNION SELECT first_name FROM Professionals",
    "exec_result": 0
  },
  {
    "idx": 928,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT professional_id, role_code, email_address FROM treatments WHERE professional_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 929,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)",
    "exec_result": 1
  },
  {
    "idx": 930,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT owner_id , first_name , last_name  FROM Dogs  INNER JOIN Owners ON Dogs.owner_id = Owners.owner_id  GROUP BY owner_id  ORDER BY count(*) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 931,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT owner_id, first_name, last_name  FROM Owners  JOIN Dogs ON Owners.owner_id = Dogs.owner_id  WHERE dog_id IN (     SELECT dog_id      FROM Dogs      GROUP BY dog_id      ORDER BY COUNT(dog_id) DESC      LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 932,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT professional_id,role,first_name FROM PROFESSIONALS GROUP BY professional_id HAVING COUNT(professional_id) >= 2",
    "exec_result": 0
  },
  {
    "idx": 933,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.role_code, p.first_name FROM Professionals AS p JOIN Treatments AS t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(t.treatment_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 934,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT breed_name  FROM Breeds  WHERE breed_code IN (     SELECT breed_code      FROM Dogs      GROUP BY breed_code      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 935,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT b.breed_name  FROM Breeds b  JOIN Dogs d ON b.breed_code = d.breed_code  GROUP BY b.breed_code, b.breed_name  ORDER BY COUNT(*) DESC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 936,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.date_of_treatment IS NOT NULL GROUP BY o.owner_id, o.last_name ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 937,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "To find the owner id and last name of the owner who spent the most on treatments of his or her dogs, you can use the following SQL query:  ```sql SELECT o.owner_id, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment IS NOT NULL GROUP BY o.owner_id, o.last_name ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1; ```  This query will join the `Owners`, `Dogs`, and `Treatments` tables on the relevant columns, filter out any treatments where the cost is null, group the results by owner id and last name, and then order the results in descending order based on the sum of treatment costs. Finally, the `LIMIT 1` clause will ensure that only the owner with the highest total treatment cost is returned.",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY treatments.treatment_type_code ORDER BY SUM(cost_of_treatment) LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 939,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT T3.treatment_type_description FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_Types AS T3 ON T3.treatment_type_code = T1.treatment_type_code GROUP BY T3.treatment_type_code ORDER BY SUM(T1.cost_of_treatment) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 940,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.date_adopted IS NOT NULL GROUP BY T1.owner_id, T1.zip_code ORDER BY SUM(T2.age) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 941,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT O.owner_id, O.zip_code  FROM Treatments AS T  JOIN Dogs AS D ON T.dog_id = D.dog_id  JOIN Owners AS O ON D.owner_id = O.owner_id  GROUP BY O.owner_id, O.zip_code  ORDER BY SUM(T.cost_of_treatment) DESC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 942,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT P.professional_id, P.cell_number FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id GROUP BY P.professional_id HAVING COUNT(T.treatment_type_code) >= 2",
    "exec_result": 1
  },
  {
    "idx": 943,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT professional_id, cell_number  FROM (     SELECT professional_id      FROM Treatments      GROUP BY professional_id      HAVING COUNT(treatment_type_code) >= 2 ) AS Professionals",
    "exec_result": 0
  },
  {
    "idx": 944,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments);",
    "exec_result": 0
  },
  {
    "idx": 945,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT first_name, last_name FROM Professional WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments))",
    "exec_result": 0
  },
  {
    "idx": 946,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT T1.date_of_treatment ,  T3.first_name FROM Treatments AS T1 JOIN Professionals AS T3 ON T1.professional_id = T3.professional_id",
    "exec_result": 1
  },
  {
    "idx": 947,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT t.date_of_treatment, p.first_name  FROM Treatments t  JOIN Professionals p ON t.professional_id = p.professional_id",
    "exec_result": 1
  },
  {
    "idx": 948,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
    "exec_result": 1
  },
  {
    "idx": 949,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT t1.cost_of_treatment, t2.treatment_type_description FROM Treatments AS t1 JOIN Treatment_Types AS t2 ON t1.treatment_type_code = t2.treatment_type_code",
    "exec_result": 1
  },
  {
    "idx": 950,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT t1.first_name, t1.last_name, t3.size_description FROM owners AS t1 INNER JOIN dogs AS t2 ON t1.owner_id = t2.owner_id INNER JOIN sizes AS t3 ON t2.size_code = t3.size_code",
    "exec_result": 0
  },
  {
    "idx": 951,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT O.first_name, O.last_name, D.size_code FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id",
    "exec_result": 1
  },
  {
    "idx": 952,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT `first_name`, `name` FROM `Owners` JOIN `Dogs` ON `owners`.`owner_id` = `dogs`.`owner_id`",
    "exec_result": 1
  },
  {
    "idx": 953,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT T1.first_name ,  T2.name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id",
    "exec_result": 1
  },
  {
    "idx": 954,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT d.name, t.date_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id JOIN Breeds b ON d.breed_code = b.breed_code ORDER BY b.breed_name ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 955,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT T1.name, T3.date_of_treatment FROM Dogs AS T1 INNER JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code INNER JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id WHERE T2.breed_name = ( SELECT breed_name FROM Breeds GROUP BY breed_name ORDER BY COUNT(breed_name) ASC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 956,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT DISTINCT Dogs.name, Owners.first_name  FROM Dogs  JOIN Owners ON Dogs.owner_id = Owners.owner_id  WHERE Owners.state = 'Virginia'",
    "exec_result": 1
  },
  {
    "idx": 957,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT O.first_name, D.name FROM Owners AS O JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE O.state = 'Virginia'",
    "exec_result": 1
  },
  {
    "idx": 958,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT  ",
    "exec_result": 0
  },
  {
    "idx": 959,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
    "exec_result": 1
  },
  {
    "idx": 960,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT owner.last_name FROM Owners AS owner JOIN Dogs AS dog ON owner.owner_id = dog.owner_id WHERE dog.date_of_birth = (     SELECT MIN(date_of_birth)     FROM Dogs )",
    "exec_result": 0
  },
  {
    "idx": 961,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT t3.last_name FROM dogs AS t1 JOIN sizes AS t2 ON t1.size_code = t2.size_code JOIN owners AS t3 ON t1.owner_id = t3.owner_id WHERE t1.date_of_birth = ( SELECT MIN(date_of_birth) FROM dogs )",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "exec_result": 1
  },
  {
    "idx": 963,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "exec_result": 1
  },
  {
    "idx": 964,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT date_arrived, date_departed FROM dogs",
    "exec_result": 1
  },
  {
    "idx": 965,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT date_arrived, date_departed FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 966,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT dog_id) FROM Treatments",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(t2.treatment_id)  FROM Treatments AS t2",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT professional_id) FROM Treatments",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT professional_id) FROM Treatments",
    "exec_result": 1
  },
  {
    "idx": 970,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT T1.role_code, T1.street, T1.city, T1.state FROM professionals AS T1 JOIN dogs AS T2 ON T1.professional_id = T2.professional_id WHERE T2.city LIKE '%West%'",
    "exec_result": 0
  },
  {
    "idx": 971,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT T4.role_code ,  T4.street ,  T4.city ,  T4.state FROM Treatments AS T1  JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id  JOIN Owners AS T3 ON T2.owner_id = T3.owner_id  JOIN Professionals AS T4 ON T1.professional_id = T4.professional_id  WHERE T3.city LIKE '%West%'",
    "exec_result": 0
  },
  {
    "idx": 972,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%'",
    "exec_result": 1
  },
  {
    "idx": 973,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'",
    "exec_result": 1
  },
  {
    "idx": 974,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(DISTINCT dog_id) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)",
    "exec_result": 1
  },
  {
    "idx": 975,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(dog_id)  FROM Dogs  WHERE age < (SELECT AVG(age) FROM Dogs)",
    "exec_result": 1
  },
  {
    "idx": 976,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT charge_amount FROM Treatments WHERE treatment_id = (SELECT treatment_id FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 977,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT cost_of_treatment  FROM Treatments  ORDER BY date_of_treatment DESC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 978,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)",
    "exec_result": 1
  },
  {
    "idx": 979,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "pred": "SELECT COUNT(DISTINCT d.dog_id) FROM dogs AS d WHERE d.dog_id NOT IN ( SELECT DISTINCT t.dog_id FROM treatments AS t )",
    "exec_result": 1
  },
  {
    "idx": 980,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(*) FROM owners WHERE dog_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 981,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(owner_id) AS number_of_owners FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.dog_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 982,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(*) FROM Professionals LEFT JOIN Treatments ON Professions.professional_id = Treatments.professional_id WHERE Treatments.professional_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 983,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(professional_id) FROM Treatments",
    "exec_result": 0
  },
  {
    "idx": 984,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT d.name, d.age, d.weight FROM dogs d WHERE d.abandoned_yn = 1",
    "exec_result": 1
  },
  {
    "idx": 985,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'",
    "exec_result": 1
  },
  {
    "idx": 986,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(age) FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 987,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(age) AS average_age FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 988,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT max(t1.age)  FROM dogs AS t1",
    "exec_result": 1
  },
  {
    "idx": 989,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT age FROM Dogs ORDER BY age DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 990,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT T2.charge_type, SUM(T1.charge_amount)  FROM charges AS T1  JOIN treatments AS T2 ON T1.charge_id = T2.treatment_type_code  GROUP BY T2.charge_type",
    "exec_result": 0
  },
  {
    "idx": 991,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT charge_type, charge_amount FROM Charges",
    "exec_result": 1
  },
  {
    "idx": 992,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT charge_amount FROM Charges ORDER BY charge_amount DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 993,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT MAX(t2.charge_amount) AS `Charge Amount` FROM Treatments t1 JOIN Charges t2 ON t1.treatment_id = t2.charge_id",
    "exec_result": 1
  },
  {
    "idx": 994,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT email_address, cell_number, home_phone FROM Professionals",
    "exec_result": 1
  },
  {
    "idx": 995,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT email_address, cell_number, home_phone FROM Professionals",
    "exec_result": 1
  },
  {
    "idx": 996,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT breed_name, size_description FROM Breeds JOIN Sizes ON Breeds.size_code = Sizes.size_code",
    "exec_result": 0
  },
  {
    "idx": 997,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT breed_code, size_code FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 998,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT DISTINCT t1.first_name, t3.treatment_type_description FROM Treatments AS t1 JOIN Professionals AS t2 ON t1.professional_id = t2.professional_id JOIN Treatment_Types AS t3 ON t1.treatment_type_code = t3.treatment_type_code",
    "exec_result": 0
  },
  {
    "idx": 999,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT P.first_name, T.treatment_type_description  FROM Treatments AS T  JOIN Professionals AS P ON T.professional_id = P.professional_id  JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code",
    "exec_result": 0
  },
  {
    "idx": 1000,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) AS \"Number_of_Singers\" FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1001,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1002,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "exec_result": 1
  },
  {
    "idx": 1003,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "exec_result": 1
  },
  {
    "idx": 1004,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year, Citizenship FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1005,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year, Citizenship FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1006,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT DISTINCT T1.name FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id WHERE T1.citizenship != 'France'",
    "exec_result": 0
  },
  {
    "idx": 1007,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT Name FROM singer WHERE Citizenship != 'French'",
    "exec_result": 0
  },
  {
    "idx": 1008,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949",
    "exec_result": 1
  },
  {
    "idx": 1009,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949",
    "exec_result": 1
  },
  {
    "idx": 1010,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT t2.name FROM singer AS t1 JOIN song AS t2 ON t1.singer_id = t2.singer_id ORDER BY t1.net_worth_millions DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1011,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID ORDER BY T1.Net_Worth_Millions DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1012,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT COUNT(DISTINCT Citizenship) FROM singer",
    "exec_result": 0
  },
  {
    "idx": 1013,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT COUNT(DISTINCT Singer_ID), Citizenship FROM singer GROUP BY Citizenship",
    "exec_result": 1
  },
  {
    "idx": 1014,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT citizenship  FROM singer  ORDER BY COUNT(*) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1015,
    "db_id": "singer",
    "question": "",
    "gold": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "pred": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1016,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT DISTINCT s.Citizenship, MAX(s.Net_Worth_Millions) FROM singer AS s JOIN song AS so ON s.Singer_ID = so.Singer_ID GROUP BY s.Citizenship",
    "exec_result": 1
  },
  {
    "idx": 1017,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT DISTINCT Citizenship, MAX(Net_Worth_Millions) FROM singer",
    "exec_result": 0
  },
  {
    "idx": 1018,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT T2.Title, T1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID",
    "exec_result": 1
  },
  {
    "idx": 1019,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT title, name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID",
    "exec_result": 1
  },
  {
    "idx": 1020,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT s.Name FROM singer s JOIN song sn ON s.Singer_ID = sn.Singer_ID WHERE sn.Sales > 300000",
    "exec_result": 1
  },
  {
    "idx": 1021,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT Name FROM singer WHERE Sales > 300000",
    "exec_result": 0
  },
  {
    "idx": 1022,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT s.Name  FROM singer AS s  INNER JOIN song AS so ON s.Singer_ID = so.Singer_ID  GROUP BY s.Name  HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 1023,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Name HAVING COUNT(T1.Song_ID)  >  1",
    "exec_result": 1
  },
  {
    "idx": 1024,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT T1.name, SUM(T2.sales) FROM singer AS T1 JOIN song AS T2 ON T1.singer_id = T2.singer_id GROUP BY T1.name",
    "exec_result": 1
  },
  {
    "idx": 1025,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT SUM(T1.sales) FROM song AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.name",
    "exec_result": 0
  },
  {
    "idx": 1026,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT DISTINCT Singer_ID FROM song)",
    "exec_result": 1
  },
  {
    "idx": 1027,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT Name  FROM singer  LEFT JOIN song  ON singer.Singer_ID = song.Singer_ID  WHERE song.Song_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1028,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT CITIZENSHIP FROM singer WHERE BIRTH_YEAR > 1955 INTERSECT SELECT CITIZENSHIP FROM singer WHERE BIRTH_YEAR < 1945",
    "exec_result": 1
  },
  {
    "idx": 1029,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year > 1955",
    "exec_result": 1
  },
  {
    "idx": 1030,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT count(*) FROM Other_Available_Features",
    "pred": "SELECT COUNT(*) FROM Other_Available_Features",
    "exec_result": 1
  },
  {
    "idx": 1031,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "pred": "SELECT T2.feature_type_name FROM other_property_features AS T1 JOIN ref_feature_types AS T2 ON T2.feature_type_code = T1.feature_id WHERE T1.property_feature_description = 'AirCon'",
    "exec_result": 0
  },
  {
    "idx": 1032,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "pred": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T2.property_type_description",
    "exec_result": 1
  },
  {
    "idx": 1033,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "pred": "SELECT property_name FROM properties WHERE property_type_code = 'House' OR property_type_code = 'Apartment' AND room_count > 1",
    "exec_result": 1
  }
]