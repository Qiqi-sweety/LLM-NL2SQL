[
  {
    "idx": 0,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 2,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC",
    "exec_result": 1
  },
  {
    "idx": 3,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT Name ,  Country ,  Age FROM singer ORDER BY Age DESC",
    "exec_result": 1
  },
  {
    "idx": 4,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'",
    "exec_result": 1
  },
  {
    "idx": 5,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(age) ,  MIN(age) ,  MAX(age) FROM singer WHERE country = 'France'",
    "exec_result": 1
  },
  {
    "idx": 6,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT T3.Name, T3.Song_release_year FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID  =  T2.concert_ID JOIN singer AS T3 ON T1.Singer_ID  =  T3.Singer_ID WHERE T3.Age  =  (SELECT MIN(Age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 7,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT T2.Name, T2.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T3 ON T1.Singer_ID = T3.Singer_ID JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID WHERE T1.Age = ( SELECT min(Age) FROM singer )",
    "exec_result": 0
  },
  {
    "idx": 8,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT Country FROM singer WHERE Age  >  20",
    "exec_result": 1
  },
  {
    "idx": 9,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT T2.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T3 ON T1.Singer_ID  =  T3.Singer_ID INNER JOIN concert AS T4 ON T3.concert_ID  =  T4.concert_ID WHERE T1.Age  >  20",
    "exec_result": 0
  },
  {
    "idx": 10,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT Country, COUNT(*) FROM singer GROUP BY Country",
    "exec_result": 1
  },
  {
    "idx": 11,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT COUNT(*) ,  Country FROM singer GROUP BY Country",
    "exec_result": 1
  },
  {
    "idx": 12,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT t1.song_name FROM singer AS t1 INNER JOIN singer_in_concert AS t2 ON t1.singer_id  =  t2.singer_id WHERE t1.age  >  (SELECT AVG(age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 13,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT DISTINCT s.Song_Name FROM singer s WHERE s.Age > (SELECT avg(s.Age) FROM singer s)",
    "exec_result": 1
  },
  {
    "idx": 14,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT LOCATION ,  NAME FROM stadium WHERE CAPACITY  BETWEEN 5000 AND 10000",
    "exec_result": 1
  },
  {
    "idx": 15,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT Location ,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000",
    "exec_result": 1
  },
  {
    "idx": 16,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select max(capacity), average from stadium",
    "pred": "SELECT max(capacity), avg(capacity) FROM stadium",
    "exec_result": 0
  },
  {
    "idx": 17,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select avg(capacity) ,  max(capacity) from stadium",
    "pred": "SELECT AVG(capacity) ,  MAX(capacity) FROM stadium",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT Name ,  Capacity FROM stadium ORDER BY Average DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 19,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 20,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);",
    "exec_result": 1
  },
  {
    "idx": 21,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*) FROM concert WHERE Year IN ('2014', '2015');",
    "exec_result": 1
  },
  {
    "idx": 22,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT s.Name ,  COUNT(c.concert_ID) FROM stadium s JOIN concert c ON s.Stadium_ID  =  c.Stadium_ID GROUP BY c.Stadium_ID",
    "exec_result": 1
  },
  {
    "idx": 23,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT t2.stadium_id ,  COUNT(*) FROM singer_in_concert AS t1 JOIN concert AS t2 ON t1.concert_id  =  t2.concert_id GROUP BY t2.stadium_id",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN ( SELECT T1.stadium_id ,  COUNT(T2.concert_id) AS num FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_id  =  T2.concert_id WHERE T1.year >= '2014' GROUP BY T1.stadium_id ORDER BY num DESC LIMIT 1 ) t2 ON t1.stadium_id  =  t2.stadium_id",
    "exec_result": 1
  },
  {
    "idx": 25,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "pred": "SELECT T1.name ,  T1.capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.year  >  2013 GROUP BY T2.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 26,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 27,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Year FROM concert GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 28,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)",
    "exec_result": 1
  },
  {
    "idx": 29,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert)",
    "exec_result": 1
  },
  {
    "idx": 30,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "pred": "SELECT Country FROM singer WHERE Age  >  40 EXCEPT SELECT Country FROM singer WHERE Age  <  30",
    "exec_result": 0
  },
  {
    "idx": 31,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014)",
    "exec_result": 1
  },
  {
    "idx": 32,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT DISTINCT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = '2014');",
    "exec_result": 1
  },
  {
    "idx": 33,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "pred": "SELECT T2.concert_Name ,  T2.Theme ,  COUNT(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID",
    "exec_result": 1
  },
  {
    "idx": 34,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "pred": "SELECT T1.concert_Name ,  T1.Theme ,  count(T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_Name ,  T1.Theme",
    "exec_result": 1
  },
  {
    "idx": 35,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT T1.Name ,  COUNT(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Singer_ID",
    "exec_result": 1
  },
  {
    "idx": 36,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT T2.Name ,  COUNT(T3.concert_ID) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID  =  T3.concert_ID GROUP BY T2.Name",
    "exec_result": 1
  },
  {
    "idx": 37,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT T3.Name FROM singer_in_concert AS T1 INNER JOIN concert AS T2 ON T1.concert_ID = T2.concert_ID INNER JOIN singer AS T3 ON T1.Singer_ID = T3.Singer_ID WHERE T2.Year = 2014",
    "exec_result": 1
  },
  {
    "idx": 38,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT T2.Name FROM concert AS T1 JOIN singer_in_concert AS T3 ON T1.concert_ID  =  T3.concert_ID JOIN singer AS T2 ON T2.Singer_ID  =  T3.Singer_ID WHERE T1.Year  =  '2014'",
    "exec_result": 1
  },
  {
    "idx": 39,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT T1.Name, T1.Country FROM singer AS T1 INNER JOIN singer_in_concert AS T2 ON T1.Singer_ID  =  T2.Singer_ID INNER JOIN concert AS T3 ON T2.concert_ID  =  T3.concert_ID WHERE T1.Song_Name LIKE 'Hey%'",
    "exec_result": 0
  },
  {
    "idx": 40,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT DISTINCT T2.Name, T2.Country FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID JOIN concert AS T3 ON T1.concert_ID  =  T3.concert_ID WHERE T3.Theme LIKE '%Hey%'",
    "exec_result": 0
  },
  {
    "idx": 41,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT DISTINCT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = '2014' AND T2.Year = '2015'",
    "exec_result": 0
  },
  {
    "idx": 42,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = '2014' INTERSECT SELECT T1.Name, T1.Location FROM stadium AS T1 INNER JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = '2015'",
    "exec_result": 1
  },
  {
    "idx": 43,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT count(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 44,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(concert.concert_ID) FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID ORDER BY stadium.Capacity DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 45,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*) FROM Pets WHERE weight > 10",
    "exec_result": 1
  },
  {
    "idx": 46,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*) FROM Pets WHERE weight > 10",
    "exec_result": 1
  },
  {
    "idx": 47,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT weight FROM Pets WHERE PetType = 'Dog' ORDER BY pet_age ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 48,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT weight FROM Pets ORDER BY pet_age ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 49,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT pet_type, MAX(weight) FROM Pets GROUP BY pet_type",
    "exec_result": 0
  },
  {
    "idx": 50,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT PetType, MAX(weight)  FROM Pets GROUP BY PetType",
    "exec_result": 1
  },
  {
    "idx": 51,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*) FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE Age > 20)",
    "exec_result": 1
  },
  {
    "idx": 52,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(DISTINCT T2.PetID) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T1.Age  >  20",
    "exec_result": 1
  },
  {
    "idx": 53,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(*) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T1.PetType = 'dog' AND T3.sex = 'F';",
    "exec_result": 1
  },
  {
    "idx": 54,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT count(T2.PetID) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T1.PetType = 'Dog' AND T3.Sex = 'F'",
    "exec_result": 0
  },
  {
    "idx": 55,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) FROM Pets",
    "exec_result": 1
  },
  {
    "idx": 56,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) FROM Pets",
    "exec_result": 1
  },
  {
    "idx": 57,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT T1.fname FROM STUDENT AS T1 JOIN HAS_PET AS T2 ON T1.stuid = T2.stuid JOIN PETS AS T3 ON T2.petid = T3.petid WHERE T3.pettype IN ('cat', 'dog')",
    "exec_result": 1
  },
  {
    "idx": 58,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'Cat' OR T3.PetType  =  'Dog'",
    "exec_result": 0
  },
  {
    "idx": 59,
    "db_id": "pets_1",
    "question": "",
    "gold": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "pred": "SELECT T3.fname FROM Has_Pet AS T1 JOIN Has_Pet AS T2 ON T1.stuid  =  T2.stuid JOIN Student AS T3 ON T2.stuid  =  T3.stuid WHERE T1.petid  =  1 INTERSECT SELECT T3.fname FROM Has_Pet AS T1 JOIN Has_Pet AS T2 ON T1.stuid  =  T2.stuid JOIN Student AS T3 ON T2.stuid  =  T3.stuid WHERE T2.petid  =  2",
    "exec_result": 1
  },
  {
    "idx": 60,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'cat' INTERSECT SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  'dog'",
    "exec_result": 1
  },
  {
    "idx": 61,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT major, age FROM Student WHERE StuID NOT IN (SELECT Student.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')",
    "exec_result": 0
  },
  {
    "idx": 62,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT DISTINCT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat'))",
    "exec_result": 0
  },
  {
    "idx": 63,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))",
    "exec_result": 1
  },
  {
    "idx": 64,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'Cat'))",
    "exec_result": 0
  },
  {
    "idx": 65,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT T1.Fname, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'Dog' EXCEPT SELECT T1.Fname, T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'Cat'",
    "exec_result": 0
  },
  {
    "idx": 66,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT T1.fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog' AND NOT T3.PetType = 'cat'",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT PetType, weight FROM Pets ORDER BY pet_age LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 68,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT PetType ,  weight FROM Pets ORDER BY pet_age ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 69,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT PetID, weight FROM Pets WHERE pet_age > 1",
    "exec_result": 1
  },
  {
    "idx": 70,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT PetID, weight FROM Pets WHERE pet_age > 1",
    "exec_result": 1
  },
  {
    "idx": 71,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaxAge FROM Pets GROUP BY PetType",
    "exec_result": 1
  },
  {
    "idx": 72,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) as Average_Age, MAX(pet_age) as Maximum_Age FROM Pets GROUP BY PetType",
    "exec_result": 1
  },
  {
    "idx": 73,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "exec_result": 1
  },
  {
    "idx": 74,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT pet_type, AVG(weight) FROM Pets GROUP BY pet_type",
    "exec_result": 0
  },
  {
    "idx": 75,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT T1.Fname, T1.age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",
    "exec_result": 1
  },
  {
    "idx": 76,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT DISTINCT T1.Fname ,  T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID",
    "exec_result": 1
  },
  {
    "idx": 77,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT T1.StuID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.LName = 'Smith'",
    "exec_result": 0
  },
  {
    "idx": 78,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT T1.PetID FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.LName = 'Smith'",
    "exec_result": 1
  },
  {
    "idx": 79,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "pred": "SELECT T1.StuID, COUNT(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID  =  T2.PetID GROUP BY T1.StuID",
    "exec_result": 1
  },
  {
    "idx": 80,
    "db_id": "pets_1",
    "question": "",
    "gold": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "pred": "SELECT StuID, COUNT(PetID) FROM Has_Pet GROUP BY StuID;",
    "exec_result": 1
  },
  {
    "idx": 81,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT Fname ,  Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING count(*)  >  1)",
    "exec_result": 1
  },
  {
    "idx": 82,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT T2.Fname ,  T2.Sex FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING COUNT(*)  >  1",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT T2.lname FROM pets AS T1 JOIN student AS T2 ON T1.stuid = T2.stuid WHERE T1.pettype = 'cat' AND T1.pet_age = 3 ORDER BY T2.lname DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 84,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT T1.Lname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3",
    "exec_result": 1
  },
  {
    "idx": 85,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(age) FROM student WHERE StuID NOT IN (SELECT StuID FROM has_pet)",
    "exec_result": 1
  },
  {
    "idx": 86,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(T1.age) FROM Student AS T1 LEFT JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 87,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT count(*) FROM continents",
    "exec_result": 1
  },
  {
    "idx": 88,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT count(*) FROM continents",
    "exec_result": 1
  },
  {
    "idx": 89,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT T1.ContId, T2.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",
    "exec_result": 0
  },
  {
    "idx": 90,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT continents.ContId ,  continents.Continent ,  COUNT(DISTINCT countries.CountryId) FROM continents JOIN countries ON continents.ContId  =  countries.Continent GROUP BY continents.ContId",
    "exec_result": 1
  },
  {
    "idx": 91,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT count(*) FROM countries",
    "exec_result": 1
  },
  {
    "idx": 92,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT count(CountryId) FROM countries",
    "exec_result": 1
  },
  {
    "idx": 93,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT T1.Maker, T1.FullName, T1.Id, COUNT(T2.Model) AS Num_Models FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id",
    "exec_result": 0
  },
  {
    "idx": 94,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT DISTINCT M.Id, M.FullName, COUNT(Model) FROM car_makers AS M JOIN model_list AS ML ON M.Id = ML.Maker GROUP BY M.Id, M.FullName",
    "exec_result": 1
  },
  {
    "idx": 95,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT model FROM model_list ORDER BY Horsepower ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT T2.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id = T2.Model ORDER BY T1.Horsepower ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 97,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT Model FROM cars_data WHERE Weight < (SELECT avg(Weight) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.Weight  <  (SELECT avg(Weight) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 99,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT DISTINCT T1.Maker FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Country IN (SELECT Country FROM countries WHERE Year = 1970)",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT DISTINCT T2.Maker FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Id = T2.Id WHERE T1.Year = 1970",
    "exec_result": 0
  },
  {
    "idx": 101,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT T1.Make, T4.Year FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker INNER JOIN car_names AS T3 ON T2.Model = T3.Model INNER JOIN cars_data AS T4 ON T3.MakeId = T4.Id ORDER BY T4.Year ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 102,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT T1.Maker, T2.Year FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id ORDER BY T2.Year ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 103,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT T2.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model  =  T2.Model WHERE T2.Year  >  1980",
    "exec_result": 0
  },
  {
    "idx": 104,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT T3.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Id JOIN cars_data AS T3 ON T3.Id = T1.Model WHERE T3.Year  >  1980",
    "exec_result": 0
  },
  {
    "idx": 105,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT t2.continent, COUNT(t1.id) FROM car_makers AS t1 JOIN countries AS t2 ON t2.countryid  =  t1.country GROUP BY t2.continent",
    "exec_result": 0
  },
  {
    "idx": 106,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT T2.Continent, COUNT(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.Continent;",
    "exec_result": 0
  },
  {
    "idx": 107,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT T2.CountryName FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T2.CountryName ORDER BY count(DISTINCT T3.Maker) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 108,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT T3.CountryName FROM model_list AS T1  JOIN car_makers AS T2 ON T1.Maker = T2.Id  JOIN countries AS T3 ON T2.Country = T3.CountryId  GROUP BY T3.CountryName  ORDER BY COUNT(*) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 109,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "pred": "SELECT T2.fullname, COUNT(*)  FROM model_list AS T1  JOIN car_makers AS T2 ON T1.maker = T2.id  GROUP BY T1.maker",
    "exec_result": 1
  },
  {
    "idx": 110,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "pred": "SELECT T2.Id ,  T2.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker",
    "exec_result": 0
  },
  {
    "idx": 111,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT T1.Accelerate FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc' AND T2.Model = 'hornet sportabout (sw)'",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT T1.Accelerate FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id = T2.Model JOIN car_makers AS T3 ON T2.Maker = T3.Id WHERE T3.Maker = 'amc' AND T2.Model = 'hornet sportabout'",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France')",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(DISTINCT car_makers.Maker)  FROM countries  INNER JOIN car_makers ON countries.CountryId = car_makers.Country  WHERE countries.CountryName = 'France'",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(*) FROM model_list WHERE Country = 1",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT count(*) FROM model_list WHERE Country IN (SELECT CountryId FROM countries WHERE CountryName = 'United States')",
    "exec_result": 0
  },
  {
    "idx": 117,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(T2.MPG) FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id WHERE T2.Cylinders = 4",
    "exec_result": 0
  },
  {
    "idx": 118,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(T1.MPG) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model IN (SELECT Model FROM model_list WHERE Cylinders = 4)",
    "exec_result": 0
  },
  {
    "idx": 119,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT Weight FROM cars_data WHERE Cylinders = 8 AND Year = 1974 ORDER BY Weight ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 120,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT min(T1.Weight) FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id = T2.Model WHERE T1.Cylinders = 8 AND T1.Year = 1974",
    "exec_result": 0
  },
  {
    "idx": 121,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT DISTINCT T2.Maker, T3.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker JOIN car_names AS T3 ON T2.Model  =  T3.Model",
    "exec_result": 0
  },
  {
    "idx": 122,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT T3.Maker, T3.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id JOIN model_list AS T3 ON T1.Model = T3.Model",
    "exec_result": 0
  },
  {
    "idx": 123,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT CountryId, CountryName FROM countries WHERE CountryId IN (SELECT DISTINCT Country FROM car_makers);",
    "exec_result": 1
  },
  {
    "idx": 124,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT CountryName, CountryId FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country )",
    "exec_result": 1
  },
  {
    "idx": 125,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150",
    "exec_result": 1
  },
  {
    "idx": 126,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Horsepower  >  150",
    "exec_result": 1
  },
  {
    "idx": 127,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT avg(weight), Year FROM cars_data GROUP BY Year",
    "exec_result": 1
  },
  {
    "idx": 128,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT AVG(T1.Weight), T1.Year FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId GROUP BY T1.Year",
    "exec_result": 1
  },
  {
    "idx": 129,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.Continent = 2 GROUP BY T1.CountryId HAVING COUNT(T2.Id) >= 3",
    "exec_result": 1
  },
  {
    "idx": 130,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT CountryName FROM countries WHERE Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') AND CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) >= 3)",
    "exec_result": 1
  },
  {
    "idx": 131,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT Horsepower, Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE Cylinders = 3 AND Horsepower = ( SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 3 )",
    "exec_result": 1
  },
  {
    "idx": 132,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT T2.Maker, T2.FullName FROM cars_data AS T1 INNER JOIN car_makers AS T2 ON T1.Id = T2.Id WHERE T1.Cylinders = 3 AND T1.Horsepower = ( SELECT MAX(T3.Horsepower) FROM cars_data AS T3 WHERE T3.Cylinders = 3)",
    "exec_result": 0
  },
  {
    "idx": 133,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "pred": "SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 134,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "pred": "SELECT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id ORDER BY T2.MPG DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 135,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "pred": "SELECT AVG(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model IN (SELECT T3.Model FROM model_list AS T3 INNER JOIN car_makers AS T4 ON T4.Id = T3.Maker WHERE T4.FullName = 'Ford' AND T4.Maker IN (SELECT T5.Maker FROM car_makers AS T5 INNER JOIN countries AS T6 ON T5.Country = T6.CountryId WHERE T6.Continent = 1)) AND T1.Year < 1980",
    "exec_result": 0
  },
  {
    "idx": 136,
    "db_id": "car_1",
    "question": "",
    "gold": "select avg(horsepower) from cars_data where year  <  1980;",
    "pred": "SELECT AVG(T1.Horsepower) FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Model IN ( SELECT Model FROM model_list WHERE Year < 1980 )",
    "exec_result": 1
  },
  {
    "idx": 137,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(edispl) FROM cars_data WHERE cars_data.Id IN (SELECT Id FROM car_names WHERE Model = 'volvo')",
    "exec_result": 0
  },
  {
    "idx": 138,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(T1.Edispl) FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Id = T2.Id WHERE T2.Maker = 'Volvo'",
    "exec_result": 0
  },
  {
    "idx": 139,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT max(Accelerate) ,  Cylinders FROM cars_data GROUP BY Cylinders",
    "exec_result": 1
  },
  {
    "idx": 140,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;",
    "exec_result": 1
  },
  {
    "idx": 141,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT model FROM model_list GROUP BY model ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 142,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id GROUP BY T1.Model ORDER BY COUNT(DISTINCT T1.ModelId) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 143,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4",
    "exec_result": 1
  },
  {
    "idx": 144,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4",
    "exec_result": 1
  },
  {
    "idx": 145,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT count(*) FROM cars_data WHERE Year = 1980",
    "exec_result": 1
  },
  {
    "idx": 146,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Year = 1980",
    "exec_result": 1
  },
  {
    "idx": 147,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(T2.Model) FROM car_makers AS T1  JOIN model_list AS T2 ON T1.Id  =  T2.Maker  WHERE T1.FullName  =  'American Motor Company'",
    "exec_result": 1
  },
  {
    "idx": 148,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(DISTINCT T3.Model) FROM car_makers AS T1 INNER JOIN model_list AS T2 ON T1.Id = T2.Maker INNER JOIN car_names AS T3 ON T2.Model = T3.Model WHERE T1.Maker = 'American Motor Company'",
    "exec_result": 0
  },
  {
    "idx": 149,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT Maker FROM car_makers GROUP BY Maker HAVING COUNT(Maker)  >  3",
    "exec_result": 0
  },
  {
    "idx": 150,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT T1.Maker, T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) > 3",
    "exec_result": 0
  },
  {
    "idx": 151,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE FullName = 'General Motors') OR Weight > 3500",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT T2.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make IN (SELECT T3.Maker FROM car_makers AS T3 WHERE T3.Maker = 'General Motors') OR T1.Weight > 3500",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000",
    "exec_result": 1
  },
  {
    "idx": 154,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT DISTINCT YEAR FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT YEAR FROM cars_data WHERE Weight > 3000",
    "exec_result": 0
  },
  {
    "idx": 155,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 156,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT Cylinders FROM cars_data WHERE Make = 'volvo' AND Model = (SELECT Model FROM model_list WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'volvo') ORDER BY Accelerate ASC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 158,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT T2.Cylinders FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'volvo' AND T1.Model = ( SELECT T2.Model FROM car_names AS T1 INNER JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T1.Make = 'volvo' ORDER BY T2.Accelerate ASC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 159,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Accelerate  >  (SELECT T1.Accelerate FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId ORDER BY T1.Horsepower DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 160,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);",
    "exec_result": 0
  },
  {
    "idx": 161,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(DISTINCT T2.country) FROM car_makers AS T1 JOIN countries AS T2 ON T1.country = T2.country_id GROUP BY T2.country_id HAVING COUNT(*) > 2",
    "exec_result": 0
  },
  {
    "idx": 162,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(DISTINCT T1.Country) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Country IN (SELECT T1.Country FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Country HAVING COUNT(DISTINCT T2.Model)  >  2)",
    "exec_result": 0
  },
  {
    "idx": 163,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6",
    "exec_result": 1
  },
  {
    "idx": 164,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;",
    "exec_result": 1
  },
  {
    "idx": 165,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Country IN (SELECT CountryId FROM countries WHERE Continent = 1)) AND Model IN (SELECT Model FROM cars_data WHERE Cylinders = 4) ORDER BY Horsepower DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 166,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT M.Model FROM model_list M WHERE M.Id IN (SELECT model FROM car_names WHERE Make IN (SELECT Maker FROM car_makers WHERE Cars_data.Id = M.Id AND Cars_data.Cylinders = 4) GROUP BY Horsepower ORDER BY Horsepower DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 167,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "pred": "SELECT MakeId, Make FROM car_names WHERE MakeId IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Horsepower > (SELECT MIN(Horsepower) FROM cars_data)) EXCEPT SELECT MakeId FROM cars_data WHERE Cylinders > 3)",
    "exec_result": 0
  },
  {
    "idx": 168,
    "db_id": "car_1",
    "question": "",
    "gold": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "pred": "SELECT T2.MakeId, T2.Model FROM cars_data AS T1 INNER JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower < 4 AND T1.Year > ( SELECT MIN(Year) FROM cars_data )",
    "exec_result": 0
  },
  {
    "idx": 169,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT T2.MaxMPG FROM model_list AS T1 JOIN ( SELECT T3.Maker, MAX(T1.MPG) AS MaxMPG FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Cylinders  =  8 AND T1.Year  <  1980 GROUP BY T2.Maker ) AS T2 ON T1.Id  =  T2.Maker",
    "exec_result": 0
  },
  {
    "idx": 170,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT max(T3.MPG) FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN cars_data AS T3 ON T2.Country = T3.Id WHERE T1.Cylinders = 8 OR T3.Year < 1980",
    "exec_result": 0
  },
  {
    "idx": 171,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT T1.Model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.ModelId = T2.Id JOIN car_makers AS T3 ON T1.Maker = T3.Id WHERE T2.weight < 3500 AND T3.Maker != 'Ford Motor Company'",
    "exec_result": 0
  },
  {
    "idx": 172,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT T3.Model FROM cars_data AS T1 JOIN car_makers AS T2 ON T1.Id = T2.Id JOIN model_list AS T3 ON T2.Maker = T3.Id WHERE T2.Maker != ( SELECT Id FROM car_makers WHERE Maker = 'Ford Motor Company' ) AND T1.Weight < 3500",
    "exec_result": 0
  },
  {
    "idx": 173,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)",
    "exec_result": 1
  },
  {
    "idx": 174,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)",
    "exec_result": 1
  },
  {
    "idx": 175,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "pred": "SELECT t2.Id ,  t2.Maker FROM model_list AS t1 JOIN car_makers AS t2 ON t1.Maker  =  t2.Id GROUP BY t2.Maker HAVING count(*)  >=  2",
    "exec_result": 0
  },
  {
    "idx": 176,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT DISTINCT C.Id, C.Maker FROM car_makers AS C WHERE (SELECT COUNT(Model) FROM model_list WHERE Maker = C.Id) >= 2 AND (SELECT COUNT(Id) FROM car_names WHERE Make = C.Id) > 3",
    "exec_result": 0
  },
  {
    "idx": 177,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "pred": "SELECT T2.CountryName FROM car_makers AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.CountryId GROUP BY T2.CountryName HAVING COUNT(*) > 3 UNION SELECT T2.CountryName FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id INNER JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T1.Model = 'fiat'",
    "exec_result": 0
  },
  {
    "idx": 178,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "pred": "SELECT T.CountryId, T.CountryName FROM countries AS T INNER JOIN car_makers AS M ON T.CountryId = M.Country INNER JOIN model_list AS L ON M.Id = L.Maker WHERE T.CountryId IN ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3 ) OR M.Maker = 'fiat'",
    "exec_result": 0
  },
  {
    "idx": 179,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  'JetBlue Airways'",
    "exec_result": 0
  },
  {
    "idx": 180,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT abbreviation FROM airlines WHERE airline = \"JetBlue Airways\";",
    "exec_result": 1
  },
  {
    "idx": 182,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'",
    "exec_result": 0
  },
  {
    "idx": 183,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT Airline ,  Abbreviation FROM airlines WHERE Country = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 184,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 185,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'",
    "exec_result": 1
  },
  {
    "idx": 186,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT count(*) FROM airlines",
    "exec_result": 1
  },
  {
    "idx": 188,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT count(*) FROM airlines;  Lastly, the SQL query without comments: SELECT count(*) FROM airlines;",
    "exec_result": 1
  },
  {
    "idx": 189,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(*) FROM airports",
    "exec_result": 1
  },
  {
    "idx": 190,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT count(*) FROM airports",
    "exec_result": 1
  },
  {
    "idx": 191,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) FROM flights;",
    "exec_result": 1
  },
  {
    "idx": 192,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) FROM flights;",
    "exec_result": 1
  },
  {
    "idx": 193,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'",
    "exec_result": 1
  },
  {
    "idx": 194,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT * FROM airlines WHERE Abbreviation = 'UAL'",
    "exec_result": 0
  },
  {
    "idx": 195,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) FROM airlines WHERE Country = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 196,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT count(uid) FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 197,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT City, Country FROM airports WHERE AirportCode = 'ALU'",
    "exec_result": 1
  },
  {
    "idx": 198,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT T1.city, T1.country FROM airports AS T1 INNER JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T1.AirportName = 'Alton'",
    "exec_result": 1
  },
  {
    "idx": 199,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT T1.AirportName FROM airports AS T1 INNER JOIN flights AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T1.AirportCode = 'AKO'",
    "exec_result": 0
  },
  {
    "idx": 200,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'",
    "exec_result": 1
  },
  {
    "idx": 201,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 202,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE Country = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 204,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT count(*) FROM flights WHERE SourceAirport = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 205,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'",
    "exec_result": 1
  },
  {
    "idx": 206,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO'",
    "exec_result": 1
  },
  {
    "idx": 207,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 208,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 209,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 210,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 211,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley')",
    "exec_result": 1
  },
  {
    "idx": 212,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Abbotsford' AND flights.DestAirport = 'ADB';",
    "exec_result": 1
  },
  {
    "idx": 213,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'JetBlue Airways')",
    "exec_result": 1
  },
  {
    "idx": 214,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) FROM flights INNER JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'Jetblue Airways'",
    "exec_result": 0
  },
  {
    "idx": 215,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid JOIN airports AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.Airline = 'United Airlines' AND T3.AirportCode = 'ASY'",
    "exec_result": 1
  },
  {
    "idx": 216,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*) FROM flights AS t1 JOIN airlines AS t2 ON t1.Airline = t2.uid JOIN airports AS t3 ON t1.DestAirport = t3.AirportCode WHERE t2.Airline = 'United Airlines' AND t3.AirportName = 'ASY Airport';",
    "exec_result": 1
  },
  {
    "idx": 217,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid JOIN airports AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.Airline = 'United Airlines' AND T3.AirportCode = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 218,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid JOIN airports AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.Abbreviation = 'UAL' AND T3.AirportCode = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 219,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'United Airlines') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')",
    "exec_result": 1
  },
  {
    "idx": 220,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T1.Airline = T3.uid WHERE T2.City = 'Aberdeen' AND T3.Airline = 'United Airlines'",
    "exec_result": 1
  },
  {
    "idx": 221,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 222,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT City, COUNT(DISTINCT DestAirport) as Frequency FROM airports WHERE AirportCode IN ( ",
    "exec_result": 0
  },
  {
    "idx": 223,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT City, COUNT(*) as DepartingFlights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY DepartingFlights DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 224,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T2.SourceAirport ORDER BY count(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 225,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 226,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 227,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT AirportCode FROM airports GROUP BY AirportCode ORDER BY COUNT(*) ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 228,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT AirportCode FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 229,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 231,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.Abbreviation, T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.uid ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT Abbreviation, Country FROM airlines WHERE uid = ( SELECT Airline FROM flights GROUP BY Airline ORDER BY COUNT(*) ASC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 233,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT a1.Airline  FROM airlines AS a1  JOIN flights AS f ON a1.uid = f.Airline  JOIN airports AS a2 ON f.SourceAirport = a2.AirportCode  WHERE a2.AirportCode = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 234,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 235,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T3.AirportCode = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 236,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline JOIN airports ap ON f.DestAirport = ap.AirportCode WHERE ap.AirportCode = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'APG' INTERSECT SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.DestAirport = 'CVO'",
    "exec_result": 1
  },
  {
    "idx": 238,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2",
    "exec_result": 1
  },
  {
    "idx": 239,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport = 'CVO' INTERSECT SELECT DISTINCT T1.Airline FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T1.SourceAirport != 'APG'",
    "exec_result": 1
  },
  {
    "idx": 240,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT DISTINCT T1.Airline FROM flights AS T1 INNER JOIN airlines AS T2 ON T1.Airline = T2.uid INNER JOIN airports AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T3.AirportCode != 'CVO' AND T3.AirportCode = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 241,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT T3.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode JOIN airlines AS T3 ON T3.uid = T1.Airline GROUP BY T3.Airline HAVING COUNT(*) >= 10",
    "exec_result": 0
  },
  {
    "idx": 242,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT T1.Abbreviation FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Abbreviation HAVING COUNT(*)  >=  10",
    "exec_result": 0
  },
  {
    "idx": 243,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*)  < 200",
    "exec_result": 0
  },
  {
    "idx": 244,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200",
    "exec_result": 0
  },
  {
    "idx": 245,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines')",
    "exec_result": 1
  },
  {
    "idx": 246,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT FlightNo FROM flights WHERE Airline IN (SELECT uid FROM airlines WHERE Airline = 'United Airlines')",
    "exec_result": 1
  },
  {
    "idx": 247,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE AirportName = 'APG')",
    "exec_result": 1
  },
  {
    "idx": 248,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 249,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE DestAirport = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 250,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE DestAirport = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 251,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen')",
    "exec_result": 1
  },
  {
    "idx": 252,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport = 'KZR'",
    "exec_result": 1
  },
  {
    "idx": 253,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT DISTINCT t1.FlightNo FROM flights AS t1 JOIN airports AS t2 ON t1.DestAirport = t2.AirportCode WHERE t2.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 254,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT flights.FlightNo  FROM flights  JOIN airports  ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 255,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City IN ('Aberdeen', 'Abilene')",
    "exec_result": 1
  },
  {
    "idx": 256,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen' OR City = 'Abilene')",
    "exec_result": 1
  },
  {
    "idx": 257,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION ALL SELECT DestAirport FROM flights)",
    "exec_result": 1
  },
  {
    "idx": 258,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT DISTINCT SourceAirport FROM flights) UNION SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT DISTINCT DestAirport FROM flights);",
    "exec_result": 0
  },
  {
    "idx": 259,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) FROM employee;",
    "exec_result": 1
  },
  {
    "idx": 260,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT count(*) FROM employee",
    "exec_result": 1
  },
  {
    "idx": 261,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT Name FROM employee ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 262,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT name FROM employee ORDER BY age ASC",
    "exec_result": 1
  },
  {
    "idx": 263,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT city ,  COUNT(*) FROM employee GROUP BY city",
    "exec_result": 1
  },
  {
    "idx": 264,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT city, COUNT(*) FROM employee GROUP BY city",
    "exec_result": 1
  },
  {
    "idx": 265,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT city FROM employee GROUP BY city HAVING count(*)  >  1 AND age  <  30",
    "exec_result": 0
  },
  {
    "idx": 267,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT COUNT(shop_id) ,  location FROM shop GROUP BY location",
    "exec_result": 1
  },
  {
    "idx": 268,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT COUNT(*) ,  Location FROM shop GROUP BY Location",
    "exec_result": 1
  },
  {
    "idx": 269,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT T2.manager_name, T2.district FROM shop AS T1 JOIN hiring AS T3 ON T1.shop_id  =  T3.shop_id JOIN employee AS T4 ON T3.employee_id  =  T4.employee_id WHERE T3.is_full_time  =  TRUE ORDER BY T1.number_products DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 270,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT T2.Manager_name, T2.District FROM shop AS T1 INNER JOIN hiring AS T3 ON T1.Shop_ID  =  T3.Shop_ID INNER JOIN employee AS T2 ON T2.Employee_ID = T3.Employee_ID ORDER BY T1.Number_products DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 271,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(Number_products), MAX(Number_products) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 272,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(Number_products), MAX(Number_products) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 273,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT Name ,  Location ,  District FROM shop ORDER BY Number_products DESC",
    "exec_result": 1
  },
  {
    "idx": 274,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT T1.name ,  T1.location ,  T1.district FROM shop AS T1 JOIN hiring AS T2 ON T1.shop_id  =  T2.shop_id WHERE T2.is_full_time = 'TRUE' GROUP BY T1.shop_id ORDER BY T1.number_products DESC",
    "exec_result": 0
  },
  {
    "idx": 275,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT Name FROM shop WHERE Number_products > (SELECT avg(Number_products) FROM shop)",
    "exec_result": 1
  },
  {
    "idx": 276,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT T3.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID JOIN employee AS T3 ON T3.Employee_ID  =  T1.Employee_ID WHERE T2.Number_products  >  (SELECT avg(Number_products) FROM shop);",
    "exec_result": 0
  },
  {
    "idx": 277,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 278,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 279,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM employee AS T1 INNER JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 280,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT T2.Name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T1.Bonus DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 281,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "exec_result": 1
  },
  {
    "idx": 283,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.name FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id  =  T2.shop_id GROUP BY T1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 284,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.name FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id = T2.shop_id GROUP BY T2.name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 285,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);",
    "exec_result": 1
  },
  {
    "idx": 286,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT DISTINCT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Employee_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 287,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT T1.Name, COUNT(T2.Employee_ID) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Name",
    "exec_result": 1
  },
  {
    "idx": 288,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT T2.name, count(*) FROM hiring AS T1 JOIN shop AS T2 ON T1.shop_id = T2.shop_id GROUP BY T1.shop_id",
    "exec_result": 1
  },
  {
    "idx": 289,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(Bonus) FROM evaluation",
    "exec_result": 1
  },
  {
    "idx": 290,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT sum(Bonus) FROM evaluation",
    "exec_result": 1
  },
  {
    "idx": 291,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT * FROM hiring",
    "exec_result": 1
  },
  {
    "idx": 292,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT * FROM hiring;",
    "exec_result": 1
  },
  {
    "idx": 293,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT DISTINCT T1.District FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Number_products < 3000 INTERSECT SELECT DISTINCT T1.District FROM shop AS T1 INNER JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Number_products > 10000",
    "exec_result": 1
  },
  {
    "idx": 294,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT District FROM shop WHERE Number_products  <  3000 INTERSECT SELECT District FROM shop WHERE Number_products  >  10000",
    "exec_result": 1
  },
  {
    "idx": 295,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT count(DISTINCT Location) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 296,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT count(DISTINCT location) FROM shop",
    "exec_result": 1
  },
  {
    "idx": 297,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(Document_ID) FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 298,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT count(*) FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 299,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT Document_ID, Document_Name, Document_Description FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 300,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT Document_ID, Document_Name, Document_Description FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 301,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT T1.Document_Name ,  T2.Template_ID FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T1.Document_Description LIKE '%w%'",
    "exec_result": 1
  },
  {
    "idx": 302,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT DISTINCT t2.Document_Name, t2.Template_ID FROM Paragraphs AS t1 INNER JOIN Documents AS t2 ON t1.Document_ID = t2.Document_ID WHERE t2.Document_Description LIKE '%w%'",
    "exec_result": 0
  },
  {
    "idx": 303,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'Robbin CV';",
    "exec_result": 1
  },
  {
    "idx": 304,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT d.Document_ID, t.Template_ID, d.Document_Description FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Name = 'Robbin CV'",
    "exec_result": 1
  },
  {
    "idx": 305,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT T2.Template_ID) FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID",
    "exec_result": 1
  },
  {
    "idx": 306,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT Templates.Template_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID",
    "exec_result": 1
  },
  {
    "idx": 307,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT')",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'PPT'",
    "exec_result": 1
  },
  {
    "idx": 309,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT  T.Template_ID,  COUNT(D.Document_ID) AS Number_of_Documents FROM  Templates T JOIN  Documents D ON T.Template_ID = D.Template_ID GROUP BY  T.Template_ID;",
    "exec_result": 1
  },
  {
    "idx": 310,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT Template_ID, COUNT(*) FROM Documents GROUP BY Template_ID",
    "exec_result": 1
  },
  {
    "idx": 311,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t2.template_id, t1.template_type_code  FROM Ref_Template_Types AS t1  JOIN Templates AS t2 ON t1.template_type_code = t2.template_type_code  GROUP BY t2.template_id  ORDER BY COUNT(t2.template_id) DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 312,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Template_ID, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 313,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT T1.Template_ID FROM Templates AS T1 INNER JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 314,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(*)  >  1",
    "exec_result": 1
  },
  {
    "idx": 315,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT T1.Template_ID FROM Templates AS T1 LEFT JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT count(*) FROM Templates",
    "exec_result": 1
  },
  {
    "idx": 318,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(*) FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 319,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT Templates.Template_ID ,  Templates.Version_Number ,  Templates.Template_Type_Code FROM Templates",
    "exec_result": 1
  },
  {
    "idx": 320,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT T1.Template_ID, T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 321,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT Template_Type_Code FROM Templates;  SELECT DISTINCT Template_Type_Code FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 322,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types",
    "exec_result": 0
  },
  {
    "idx": 323,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",
    "exec_result": 1
  },
  {
    "idx": 324,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 325,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV';",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CV'",
    "exec_result": 1
  },
  {
    "idx": 327,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5",
    "exec_result": 1
  },
  {
    "idx": 328,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number  >  5",
    "exec_result": 1
  },
  {
    "idx": 329,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 330,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT T1.Template_Type_Code ,  COUNT(*) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code GROUP BY T1.Template_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 331,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 332,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 333,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types GROUP BY Template_Type_Code HAVING count(*) < 3",
    "exec_result": 0
  },
  {
    "idx": 334,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(Template_ID) < 3)",
    "exec_result": 1
  },
  {
    "idx": 335,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT MIN(Version_Number), Template_Type_Code FROM Templates ORDER BY Version_Number ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 336,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT T1.Version_Number, T1.Template_Type_Code FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code ORDER BY T1.Version_Number LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 337,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID WHERE T3.Document_Name = 'Data base'",
    "exec_result": 1
  },
  {
    "idx": 338,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code INNER JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID WHERE T3.Document_Name = 'Database'",
    "exec_result": 0
  },
  {
    "idx": 339,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT D.Document_Name FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code WHERE R.Template_Type_Code = 'BK';",
    "exec_result": 1
  },
  {
    "idx": 340,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT Document_Name FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK')",
    "exec_result": 1
  },
  {
    "idx": 341,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT T1.Template_Type_Code, COUNT(*) AS Document_Count  FROM Ref_Template_Types AS T1  JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code  JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID  GROUP BY T1.Template_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 342,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT T1.Template_Type_Code, COUNT(T2.Document_ID) FROM Ref_Template_Types AS T1 JOIN Documents AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 343,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 344,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code FROM (SELECT Template_Type_Code, COUNT(Template_Type_Code) AS count FROM Templates GROUP BY Template_Type_Code ORDER BY count DESC LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 345,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT T1.Template_Type_Code FROM Ref_Template_Types AS T1 EXCEPT SELECT T2.Template_Type_Code FROM Documents AS T2 JOIN Templates AS T3 ON T2.Template_ID = T3.Template_ID",
    "exec_result": 0
  },
  {
    "idx": 346,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Templates)",
    "exec_result": 0
  },
  {
    "idx": 347,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code ,  Template_Type_Description FROM Ref_Template_Types",
    "exec_result": 1
  },
  {
    "idx": 349,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 INNER JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Code = 'AD'",
    "exec_result": 0
  },
  {
    "idx": 350,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD'",
    "exec_result": 1
  },
  {
    "idx": 351,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';",
    "exec_result": 1
  },
  {
    "idx": 353,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT T2.Template_Type_Description FROM Documents AS T1 INNER JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID",
    "exec_result": 0
  },
  {
    "idx": 354,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT T1.Template_Details FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID",
    "exec_result": 0
  },
  {
    "idx": 355,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'",
    "exec_result": 1
  },
  {
    "idx": 356,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = 'Presentation'",
    "exec_result": 1
  },
  {
    "idx": 357,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) FROM Paragraphs",
    "exec_result": 1
  },
  {
    "idx": 358,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) FROM Paragraphs",
    "exec_result": 1
  },
  {
    "idx": 359,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(*) FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')",
    "exec_result": 1
  },
  {
    "idx": 360,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(*)  FROM Documents AS T1  INNER JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID  WHERE T1.Document_Name = 'Summer Show'",
    "exec_result": 1
  },
  {
    "idx": 361,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT Paragraph_ID, Document_ID, Paragraph_Text, Other_Details  FROM Paragraphs  WHERE Paragraph_Text = 'Korea'",
    "exec_result": 0
  },
  {
    "idx": 362,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT DISTINCT Paragraphs.Paragraph_Text FROM Paragraphs WHERE Paragraph_Text = 'Korea'",
    "exec_result": 0
  },
  {
    "idx": 363,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')",
    "exec_result": 1
  },
  {
    "idx": 364,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT T1.paragraph_id, T1.paragraph_text FROM paragraphs AS T1 JOIN documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = 'Welcome to NY'",
    "exec_result": 1
  },
  {
    "idx": 365,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT T3.Paragraph_Text FROM Documents AS T1 INNER JOIN Paragraphs AS T3 ON T1.Document_ID = T3.Document_ID WHERE T1.Document_Name = 'Customer reviews'",
    "exec_result": 1
  },
  {
    "idx": 366,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Customer reviews')",
    "exec_result": 1
  },
  {
    "idx": 367,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT D.Document_ID, COUNT(P.Paragraph_ID) as Paragraph_Count FROM Documents AS D JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID ORDER BY D.Document_ID",
    "exec_result": 1
  },
  {
    "idx": 368,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT Document_ID, COUNT(*) AS num_paragraphs FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 369,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT D.Document_ID, D.Document_Name, COUNT(*) AS Number_of_Paragraphs FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID, D.Document_Name",
    "exec_result": 1
  },
  {
    "idx": 370,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT T1.Document_ID, T1.Document_Name, COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID, T1.Document_Name",
    "exec_result": 1
  },
  {
    "idx": 371,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT d.Document_ID FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID HAVING COUNT(p.Paragraph_ID) >= 2",
    "exec_result": 1
  },
  {
    "idx": 372,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT D.Document_ID FROM Documents AS D JOIN Paragraphs AS P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 373,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Document_ID, T2.Document_Name FROM Paragraphs AS T1 INNER JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T2.Document_ID, T2.Document_Name ORDER BY COUNT(T1.Paragraph_ID) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 374,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Document_ID, T2.Document_Name FROM ( SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) DESC LIMIT 1 ) T1 INNER JOIN Documents T2 ON T2.Document_ID = T1.Document_ID",
    "exec_result": 1
  },
  {
    "idx": 375,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T2.Document_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 376,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Document_ID FROM Documents WHERE Document_ID NOT IN (SELECT Document_ID FROM Paragraphs)",
    "exec_result": 0
  },
  {
    "idx": 377,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT D.Document_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2",
    "exec_result": 1
  },
  {
    "idx": 378,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT Document_ID FROM Documents WHERE Document_ID IN (SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2)",
    "exec_result": 1
  },
  {
    "idx": 379,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT D.Document_ID  FROM Documents D  JOIN Paragraphs P ON D.Document_ID = P.Document_ID  WHERE P.Paragraph_Text IN ('Brazil', 'Ireland') GROUP BY D.Document_ID  HAVING COUNT(DISTINCT P.Paragraph_Text) = 2;",
    "exec_result": 1
  },
  {
    "idx": 380,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT D.Document_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text = 'Brazil' INTERSECT SELECT D.Document_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text = 'Ireland'",
    "exec_result": 1
  },
  {
    "idx": 381,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(*) FROM teacher",
    "exec_result": 1
  },
  {
    "idx": 382,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT count(*) FROM teacher",
    "exec_result": 1
  },
  {
    "idx": 383,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT Name FROM teacher ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 384,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT Name FROM teacher ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 385,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT Age ,  Hometown FROM teacher",
    "exec_result": 1
  },
  {
    "idx": 386,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT Age ,  Hometown FROM teacher",
    "exec_result": 1
  },
  {
    "idx": 387,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';",
    "exec_result": 0
  },
  {
    "idx": 388,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT Name FROM teacher WHERE Hometown != ' Little Lever Urban District '",
    "exec_result": 1
  },
  {
    "idx": 389,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT Name FROM teacher WHERE Age = 32 OR Age = 33;",
    "exec_result": 1
  },
  {
    "idx": 390,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT T1.name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.age  =  32 OR T1.age  =  33;",
    "exec_result": 0
  },
  {
    "idx": 391,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 392,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT T2.Hometown FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID ORDER BY T2.Age ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 393,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown",
    "exec_result": 1
  },
  {
    "idx": 394,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT Hometown ,  count(*) FROM teacher GROUP BY Hometown",
    "exec_result": 1
  },
  {
    "idx": 395,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 396,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Hometown ,  COUNT(*) as Cnt FROM teacher GROUP BY Hometown ORDER BY Cnt DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 397,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Hometown) >= 2",
    "exec_result": 1
  },
  {
    "idx": 398,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.Hometown FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Hometown HAVING count(*)  >=  2",
    "exec_result": 0
  },
  {
    "idx": 399,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT t.Name, c.Course FROM teacher AS t JOIN course_arrange AS ca ON t.Teacher_ID = ca.Teacher_ID JOIN course AS c ON ca.Course_ID = c.Course_ID",
    "exec_result": 1
  },
  {
    "idx": 400,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT T2.name, T1.course FROM course AS T1 JOIN course_arrange AS T3 ON T1.course_id  =  T3.course_id JOIN teacher AS T2 ON T3.teacher_id  =  T2.teacher_id",
    "exec_result": 1
  },
  {
    "idx": 401,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT t.name FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id ORDER BY t.name ASC",
    "exec_result": 0
  },
  {
    "idx": 402,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT t1.name ,  t2.course FROM teacher t1 JOIN course_arrange t3 ON t1.teacher_id  =  t3.teacher_id JOIN course t2 ON t3.course_id  =  t2.course_id ORDER BY t1.name",
    "exec_result": 1
  },
  {
    "idx": 403,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'",
    "exec_result": 1
  },
  {
    "idx": 404,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID WHERE T3.Course = 'Math'",
    "exec_result": 1
  },
  {
    "idx": 405,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT Name, COUNT(*) FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID",
    "exec_result": 1
  },
  {
    "idx": 406,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT T2.Name, COUNT(T1.Course_ID) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "exec_result": 1
  },
  {
    "idx": 407,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT Name FROM teacher WHERE Teacher_ID IN (SELECT Teacher_ID FROM course_arrange GROUP BY Teacher_ID HAVING count(*) >= 2)",
    "exec_result": 1
  },
  {
    "idx": 408,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(*)  >=  2",
    "exec_result": 1
  },
  {
    "idx": 409,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)",
    "exec_result": 1
  },
  {
    "idx": 410,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)",
    "exec_result": 1
  },
  {
    "idx": 411,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE age  <  30",
    "pred": "SELECT COUNT(*) FROM visitor WHERE Age < 30",
    "exec_result": 1
  },
  {
    "idx": 412,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "pred": "SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC",
    "exec_result": 1
  },
  {
    "idx": 413,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "pred": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "exec_result": 1
  },
  {
    "idx": 414,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "pred": "SELECT v.Name ,  v.Level_of_membership FROM visitor v WHERE v.Level_of_membership > 4 ORDER BY v.Age DESC",
    "exec_result": 1
  },
  {
    "idx": 415,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "pred": "SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 416,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "pred": "SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < '2009'",
    "exec_result": 1
  },
  {
    "idx": 417,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "pred": "SELECT Open_Year ,  Num_of_Staff FROM museum WHERE Name  =  'Plaza Museum'",
    "exec_result": 1
  },
  {
    "idx": 418,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "pred": "SELECT Name FROM museum WHERE Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010)",
    "exec_result": 1
  },
  {
    "idx": 419,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT v.ID, v.Name, v.Age FROM visitor v JOIN visit vis ON v.ID = vis.visitor_ID GROUP BY vis.visitor_ID HAVING COUNT(DISTINCT vis.Museum_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 420,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "pred": "SELECT t2.ID ,  t2.Name ,  t2.Level_of_membership FROM visit AS t1 JOIN visitor AS t2 ON t1.visitor_ID  =  t2.ID WHERE t1.Total_spent  =  (SELECT MAX(Total_spent) FROM visit)",
    "exec_result": 0
  },
  {
    "idx": 421,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Museum_ID, Name FROM museum ORDER BY (SELECT COUNT(*) FROM visit WHERE Museum_ID = museum.Museum_ID) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 422,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "pred": "SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)",
    "exec_result": 1
  },
  {
    "idx": 423,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "pred": "SELECT v.Name , v.Age FROM visitor v JOIN visit vv ON v.ID = vv.visitor_ID WHERE vv.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)",
    "exec_result": 1
  },
  {
    "idx": 424,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "pred": "SELECT AVG(Num_of_Ticket) AS Avg_tickets, MAX(Num_of_Ticket) AS Max_tickets FROM visit;",
    "exec_result": 1
  },
  {
    "idx": 425,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "pred": "SELECT sum(v.Total_spent) FROM visit v JOIN visitor vis ON v.visitor_ID  =  vis.ID WHERE vis.Level_of_membership  =  1",
    "exec_result": 1
  },
  {
    "idx": 426,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "pred": "SELECT T2.Name FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID JOIN museum AS T3 ON T1.Museum_ID = T3.Museum_ID WHERE T3.Open_Year < 2009 INTERSECT SELECT T2.Name FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID = T2.ID JOIN museum AS T3 ON T1.Museum_ID = T3.Museum_ID WHERE T3.Open_Year > 2011",
    "exec_result": 1
  },
  {
    "idx": 427,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "pred": "SELECT COUNT(*) FROM visitor WHERE ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > '2010'))",
    "exec_result": 1
  },
  {
    "idx": 428,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "pred": "SELECT count(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008",
    "exec_result": 1
  },
  {
    "idx": 429,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT count(*) FROM players;",
    "exec_result": 1
  },
  {
    "idx": 430,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT count(*) FROM players",
    "exec_result": 1
  },
  {
    "idx": 431,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT count(*) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 432,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT count(*) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 433,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 434,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 435,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches",
    "exec_result": 1
  },
  {
    "idx": 436,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT avg(loser_age) AS avg_loser_age, avg(winner_age) AS avg_winner_age FROM matches",
    "exec_result": 1
  },
  {
    "idx": 437,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(winner_rank) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 438,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(winner_rank) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 439,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(ranking) FROM players;",
    "exec_result": 0
  },
  {
    "idx": 440,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(ranking) FROM rankings;",
    "exec_result": 0
  },
  {
    "idx": 441,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT count(DISTINCT country_code) FROM players",
    "exec_result": 1
  },
  {
    "idx": 442,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT count(DISTINCT country_code) FROM players",
    "exec_result": 1
  },
  {
    "idx": 443,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 444,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) FROM matches",
    "exec_result": 1
  },
  {
    "idx": 445,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT tournament_name FROM matches GROUP BY tournament_name HAVING COUNT(match_num) > 10",
    "exec_result": 0
  },
  {
    "idx": 446,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT T2.tourney_name FROM matches AS T1 INNER JOIN matches AS T2 ON T1.tourney_id = T2.tourney_id GROUP BY T1.tourney_id HAVING COUNT(*) > 10",
    "exec_result": 0
  },
  {
    "idx": 447,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_date BETWEEN '2013-01-01' AND '2013-12-31' INTERSECT SELECT T2.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_date BETWEEN '2016-01-01' AND '2016-12-31'",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT DISTINCT T3.winner_name, T3.winner_id FROM matches AS T1 INNER JOIN players AS T2 ON T3.winner_id = T2.player_id INNER JOIN matches AS T3 ON T3.loser_id = T2.player_id WHERE T3.year = 2013 INTERSECT SELECT DISTINCT T3.winner_name, T3.winner_id FROM matches AS T1 INNER JOIN players AS T2 ON T3.winner_id = T2.player_id INNER JOIN matches AS T3 ON T3.loser_id = T2.player_id WHERE T3.year = 2016",
    "exec_result": 0
  },
  {
    "idx": 449,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*) FROM matches WHERE YEAR IN (2013, 2016)",
    "exec_result": 1
  },
  {
    "idx": 450,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*) FROM matches WHERE YEAR IN (2013, 2016)",
    "exec_result": 1
  },
  {
    "idx": 451,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT T1.country_code, T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code, T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'",
    "exec_result": 1
  },
  {
    "idx": 452,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT T1.first_name, T1.country_code FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY T1.first_name, T1.country_code HAVING COUNT(*) = 2",
    "exec_result": 0
  },
  {
    "idx": 453,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 454,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT first_name, country_code FROM players ORDER BY birth_date DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 455,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players ORDER BY birth_date",
    "exec_result": 1
  },
  {
    "idx": 456,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players ORDER BY birth_date",
    "exec_result": 1
  },
  {
    "idx": 457,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT T2.first_name, T2.last_name FROM matches AS T1 JOIN players AS T2 ON T1.loser_id = T2.player_id WHERE T2.hand = 'L' ORDER BY T2.birth_date",
    "exec_result": 0
  },
  {
    "idx": 458,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date",
    "exec_result": 1
  },
  {
    "idx": 459,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 460,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT first_name ,  country_code FROM players ORDER BY tours DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 461,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 462,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 463,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.winner_name, T3.ranking_points FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id JOIN rankings AS T3 ON T2.player_id = T3.player_id WHERE T1.winner_rank = 1 GROUP BY T1.winner_id ORDER BY COUNT(T1.winner_id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT players.first_name, players.last_name, players.ranking_points  FROM players  JOIN rankings ON players.player_id = rankings.player_id  WHERE players.winner = 1  ORDER BY players.ranking_points DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings r2 WHERE r2.tourney_name = 'Australian Open')",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT T1.winner_name FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.tourney_name = 'Australian Open' ORDER BY T2.ranking_points DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 467,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT T1.loser_name, T1.winner_name FROM matches AS T1 ORDER BY T1.minutes DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 468,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT T1.winner_name, T1.loser_name FROM matches AS T1 ORDER BY T1.minutes DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 469,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT T1.first_name ,  avg(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",
    "exec_result": 1
  },
  {
    "idx": 470,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT T1.first_name ,  AVG(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id;",
    "exec_result": 0
  },
  {
    "idx": 471,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name ,  sum(r.ranking_points) FROM players p JOIN rankings r ON p.player_id  =  r.player_id GROUP BY p.player_id ,  p.first_name",
    "exec_result": 0
  },
  {
    "idx": 472,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT first_name, SUM(ranking_points) as total_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name",
    "exec_result": 1
  },
  {
    "idx": 473,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT country_code, COUNT(*) FROM players GROUP BY country_code;",
    "exec_result": 1
  },
  {
    "idx": 474,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT country_code, COUNT(*) FROM players GROUP BY country_code;",
    "exec_result": 1
  },
  {
    "idx": 475,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 476,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 477,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "exec_result": 1
  },
  {
    "idx": 478,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50",
    "exec_result": 1
  },
  {
    "idx": 479,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT ranking_date, COUNT(*) FROM rankings GROUP BY ranking_date;",
    "exec_result": 0
  },
  {
    "idx": 480,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT ranking_date ,  COUNT(tours) FROM rankings GROUP BY ranking_date",
    "exec_result": 0
  },
  {
    "idx": 481,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT COUNT(*) ,  `year` FROM matches GROUP BY `year`",
    "exec_result": 1
  },
  {
    "idx": 482,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT YEAR, COUNT(*)  FROM matches  GROUP BY YEAR;",
    "exec_result": 1
  },
  {
    "idx": 483,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 484,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT T2.name, T2.ranking FROM matches AS T1 INNER JOIN players AS T2 ON T1.winner_id = T2.player_id ORDER BY T1.winner_age ASC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 485,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(DISTINCT T1.winner_id) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'L' AND T1.tourney_level = 'G';",
    "exec_result": 0
  },
  {
    "idx": 486,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(*) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name LIKE 'WTA Championships' AND T1.hand LIKE 'L'",
    "exec_result": 1
  },
  {
    "idx": 487,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.winner_rank_points  =  (SELECT max(ranking_points) FROM rankings)",
    "exec_result": 0
  },
  {
    "idx": 488,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id GROUP BY T1.player_id ORDER BY SUM(T2.winner_rank_points) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 489,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT hand, COUNT(*) FROM players GROUP BY hand",
    "exec_result": 1
  },
  {
    "idx": 490,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT hand, COUNT(*) FROM players GROUP BY hand",
    "exec_result": 1
  },
  {
    "idx": 491,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "pred": "SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured'",
    "exec_result": 1
  },
  {
    "idx": 492,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "pred": "SELECT name, tonnage FROM ship ORDER BY name DESC",
    "exec_result": 1
  },
  {
    "idx": 493,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  date FROM battle",
    "pred": "SELECT name, date, result FROM battle;",
    "exec_result": 0
  },
  {
    "idx": 494,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT max(killed) ,  min(killed) FROM death",
    "pred": "SELECT      b.name AS battle_name,     MIN(d.killed + d.injured) AS min_death_toll,     MAX(d.killed + d.injured) AS max_death_toll FROM      battle AS b JOIN      ship AS s ON b.id = s.lost_in_battle JOIN      death AS d ON s.id = d.caused_by_ship_id GROUP BY      b.id, b.name;",
    "exec_result": 0
  },
  {
    "idx": 495,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT avg(injured) FROM death",
    "pred": "SELECT AVG(injured) FROM death",
    "exec_result": 1
  },
  {
    "idx": 496,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "pred": "SELECT killed, injured FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE tonnage = 't'",
    "exec_result": 1
  },
  {
    "idx": 497,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "pred": "SELECT T1.name, T1.result FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T1.bulgarian_commander != 'Boril'",
    "exec_result": 0
  },
  {
    "idx": 498,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "pred": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'",
    "exec_result": 1
  },
  {
    "idx": 499,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "pred": "SELECT b.id, b.name  FROM battle AS b  JOIN death AS d ON b.id = d.caused_by_ship_id  GROUP BY b.id, b.name  HAVING COUNT(*) > 10",
    "exec_result": 0
  },
  {
    "idx": 500,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.id, T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id ORDER BY SUM(T2.killed + T2.injured) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "pred": "SELECT DISTINCT T2.name FROM battle AS T1 INNER JOIN battle AS T2 ON T1.name BETWEEN T2.name AND T1.name WHERE T1.latin_commander = 'Baldwin I' AND T1.bulgarian_commander = 'Kaloyan'",
    "exec_result": 1
  },
  {
    "idx": 502,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(DISTINCT RESULT) FROM battle",
    "pred": "SELECT count(DISTINCT result) FROM battle",
    "exec_result": 1
  },
  {
    "idx": 503,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "pred": "SELECT count(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225');",
    "exec_result": 0
  },
  {
    "idx": 504,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "pred": "SELECT T2.name, T2.date FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T1.name IN ('Lettice', 'HMS Atalanta')",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "pred": "SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location != 'English Channel'",
    "exec_result": 0
  },
  {
    "idx": 506,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT note FROM death WHERE note LIKE '%East%'",
    "pred": "SELECT T2.note FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id WHERE T1.location LIKE '%East%'",
    "exec_result": 0
  },
  {
    "idx": 507,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT line_1, line_2 FROM Addresses",
    "exec_result": 1
  },
  {
    "idx": 508,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT line_1, line_2 FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 509,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(*) FROM Courses",
    "exec_result": 1
  },
  {
    "idx": 510,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(*) FROM Courses",
    "exec_result": 1
  },
  {
    "idx": 511,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT course_description FROM Courses WHERE course_name = 'math';",
    "exec_result": 1
  },
  {
    "idx": 512,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT T2.course_description FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  'math'",
    "exec_result": 0
  },
  {
    "idx": 513,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';",
    "exec_result": 1
  },
  {
    "idx": 514,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea'",
    "exec_result": 1
  },
  {
    "idx": 515,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.department_name, T2.department_id FROM degree_programs AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 516,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "pred": "SELECT department_name, department_id FROM Departments ORDER BY (SELECT COUNT(degree_program_id) FROM Degree_Programs WHERE degree_programs.department_id = departments.department_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 517,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT department_id) FROM Degree_Programs",
    "exec_result": 1
  },
  {
    "idx": 518,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT department_name) FROM Departments",
    "exec_result": 1
  },
  {
    "idx": 519,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs",
    "exec_result": 1
  },
  {
    "idx": 520,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT degree_program_id) FROM Degree_Programs",
    "exec_result": 1
  },
  {
    "idx": 521,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(*) FROM Degrees WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Engineering')",
    "exec_result": 0
  },
  {
    "idx": 522,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT count(DISTINCT d.degree_program_id) FROM Degree_Programs AS d INNER JOIN Departments AS de ON d.department_id = de.department_id WHERE de.department_name = 'Engineering'",
    "exec_result": 1
  },
  {
    "idx": 523,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT section_name ,  section_description FROM Sections",
    "exec_result": 1
  },
  {
    "idx": 524,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT section_name, section_description FROM Sections",
    "exec_result": 1
  },
  {
    "idx": 525,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT course_id ,  course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) <= 2)",
    "exec_result": 1
  },
  {
    "idx": 526,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT course_id ,  course_name FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING count(*)  < 2)",
    "exec_result": 0
  },
  {
    "idx": 527,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "exec_result": 1
  },
  {
    "idx": 528,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "exec_result": 1
  },
  {
    "idx": 529,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT semester_name, semester_id FROM Semesters WHERE semester_id IN (SELECT semester_id FROM Student_Enrolment GROUP BY semester_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 530,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT semester_name, semester_id FROM Semesters GROUP BY semester_name, semester_id ORDER BY COUNT(semester_id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 531,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "exec_result": 1
  },
  {
    "idx": 532,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "exec_result": 1
  },
  {
    "idx": 533,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT T3.first_name ,  T3.middle_name ,  T3.last_name ,  T3.student_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id GROUP BY T2.student_id HAVING COUNT(*)  =  2",
    "exec_result": 1
  },
  {
    "idx": 534,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name FROM Students s WHERE s.student_id IN ( SELECT se.student_id FROM Student_Enrolment se WHERE se.degree_program_id IN ( SELECT t.degree_program_id FROM Transcripts t WHERE t.transcript_date IN ( SELECT stc.transcript_date FROM Student_Enrolment_Courses stc GROUP BY stc.transcript_id HAVING COUNT(stc.student_course_id) > 1 ) ) GROUP BY se.student_id HAVING COUNT(se.degree_program_id) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 535,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT S.first_name, S.middle_name, S.last_name FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id JOIN Degree_Programs DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor'",
    "exec_result": 1
  },
  {
    "idx": 536,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id INNER JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'",
    "exec_result": 0
  },
  {
    "idx": 537,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.degree_summary_name FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T2.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 538,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.degree_summary_name FROM ( SELECT student_enrolment_id ,  COUNT(*) FROM Student_Enrolment_Courses GROUP BY student_enrolment_id ORDER BY COUNT(*) DESC LIMIT 1 ) AS T1 INNER JOIN Degree_Programs AS T2 ON T2.degree_program_id = T1.student_enrolment_id",
    "exec_result": 0
  },
  {
    "idx": 539,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.degree_summary_name ,  count(DISTINCT T3.student_id) FROM student_enrolment AS T1 JOIN degree_programs AS T2 ON T1.degree_program_id  =  T2.degree_program_id JOIN student_enrolment_courses AS T3 ON T1.student_enrolment_id  =  T3.student_enrolment_id GROUP BY T1.degree_program_id ORDER BY count(DISTINCT T3.student_id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 540,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 541,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(*) as number_of_enrollments FROM Student_Enrolment as T1 INNER JOIN Students as T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY number_of_enrollments DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT students.student_id, students.first_name, students.middle_name, students.last_name, COUNT(*)  FROM students  JOIN student_enrolment ON students.student_id = student_enrolment.student_id  GROUP BY students.student_id, students.first_name, students.middle_name, students.last_name  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 543,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment);",
    "exec_result": 1
  },
  {
    "idx": 544,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)",
    "exec_result": 1
  },
  {
    "idx": 545,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT T3.course_name FROM Student_Enrolment_Courses AS T1 INNER JOIN Courses AS T3 ON T1.course_id = T3.course_id",
    "exec_result": 1
  },
  {
    "idx": 546,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses GROUP BY course_id)",
    "exec_result": 0
  },
  {
    "idx": 547,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.course_name FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id GROUP BY c.course_name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 548,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.course_name FROM courses AS T1 JOIN student_enrolment_courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id ORDER BY COUNT(T2.student_course_id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 549,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT s.last_name FROM students AS s WHERE s.current_address_id IN (SELECT a.address_id FROM addresses AS a WHERE a.state_province_county = 'North Carolina') AND s.student_id NOT IN (SELECT se.student_id FROM student_enrolment AS se)",
    "exec_result": 0
  },
  {
    "idx": 550,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT last_name FROM Students WHERE country = 'North Carolina' EXCEPT SELECT T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T1.country = 'North Carolina'",
    "exec_result": 0
  },
  {
    "idx": 551,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT t1.transcript_date, t1.transcript_id FROM Transcripts AS t1 INNER JOIN Transcript_Contents AS t2 ON t1.transcript_id = t2.transcript_id GROUP BY t2.transcript_id HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 552,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.transcript_date ,  T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(DISTINCT T2.student_course_id)  >=  2",
    "exec_result": 1
  },
  {
    "idx": 553,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "pred": "SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "exec_result": 1
  },
  {
    "idx": 554,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "pred": "SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 558,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 559,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT t1.first_name FROM students AS t1 JOIN addresses AS t2 ON t1.current_address_id = t2.address_id JOIN addresses AS t3 ON t1.permanent_address_id = t3.address_id WHERE t2.line_1 != t3.line_1 OR t2.line_2 != t3.line_2 OR t2.line_3 != t3.line_3 OR t2.city != t3.city OR t2.zip_postcode != t3.zip_postcode OR t2.state_province_county != t3.state_province_county OR t2.country != t3.country OR t2.other_address_details != t3.other_address_details",
    "exec_result": 1
  },
  {
    "idx": 560,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id INNER JOIN Addresses AS T3 ON T1.permanent_address_id = T3.address_id WHERE T2.line_1 != T3.line_1 AND T2.line_2 != T3.line_2 AND T2.line_3 != T3.line_3 AND T2.city != T3.city AND T2.zip_postcode != T3.zip_postcode AND T2.state_province_county != T3.state_province_county AND T2.country != T3.country",
    "exec_result": 0
  },
  {
    "idx": 561,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.address_id, T2.line_1, T2.line_2, T2.line_3, T2.city, T2.zip_postcode, T2.state_province_county, T2.country, T2.other_address_details FROM Student_Enrolment AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id GROUP BY T2.address_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 562,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T3.address_id ,  T3.line_1 ,  T3.line_2 FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Addresses AS T3 ON T3.address_id = T1.current_address_id GROUP BY T3.address_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 563,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(transcript_date) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 564,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT avg(T1.transcript_date) FROM Transcripts AS T1",
    "exec_result": 1
  },
  {
    "idx": 565,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT MIN(T1.transcript_date) ,  T2.other_details FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id",
    "exec_result": 0
  },
  {
    "idx": 566,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 567,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(*) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 568,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(*) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 569,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 570,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) FROM Transcripts",
    "exec_result": 1
  },
  {
    "idx": 571,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `student_course_id` , COUNT(DISTINCT `transcript_id`) FROM `Transcript_Contents` GROUP BY `student_course_id` ORDER BY COUNT(DISTINCT `transcript_id`) DESC",
    "exec_result": 0
  },
  {
    "idx": 572,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(student_course_id) ,  course_id FROM STUDENT_ENROLLMENT_COURSES GROUP BY course_id HAVING COUNT(student_course_id) = (SELECT MAX(count) FROM (SELECT COUNT(student_course_id) AS count FROM STUDENT_ENROLLMENT_COURSES GROUP BY course_id))",
    "exec_result": 0
  },
  {
    "idx": 573,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T.transcript_id, T.transcript_date FROM Transcripts AS T JOIN Transcript_Contents AS TC ON T.transcript_id = TC.transcript_id GROUP BY T.transcript_id, T.transcript_date ORDER BY COUNT(TC.student_course_id) ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 574,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT transcript_id, transcript_date FROM Transcripts ORDER BY (SELECT COUNT(*) FROM Transcript_Contents WHERE transcript_id = Transcripts.transcript_id) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 575,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT semester_id FROM STUDENT_ENROLMENT WHERE degree_program_id IN (SELECT degree_program_id FROM DEGREE_PROGRAMS WHERE degree_summary_name = 'Master') AND degree_program_id IN (SELECT degree_program_id FROM DEGREE_PROGRAMS WHERE degree_summary_name = 'Bachelor')",
    "exec_result": 0
  },
  {
    "idx": 576,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT T3.semester_id FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T1.degree_summary_name = 'Master' INTERSECT SELECT T3.semester_id FROM Degree_Programs AS T1 INNER JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id INNER JOIN Semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T1.degree_summary_name = 'Bachelor'",
    "exec_result": 1
  },
  {
    "idx": 577,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT count(DISTINCT current_address_id) FROM students",
    "exec_result": 1
  },
  {
    "idx": 578,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, country FROM Addresses AS a JOIN Students AS s ON a.address_id = s.current_address_id OR a.address_id = s.permanent_address_id",
    "exec_result": 0
  },
  {
    "idx": 579,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT * FROM Students ORDER BY last_name DESC",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT other_details FROM students ORDER BY last_name DESC",
    "exec_result": 0
  },
  {
    "idx": 581,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT * FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id JOIN Courses AS T3 ON T3.course_id = T2.course_id WHERE T3.section_name = 'h'",
    "exec_result": 0
  },
  {
    "idx": 582,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT section_description FROM Sections WHERE section_name = 'h'",
    "exec_result": 1
  },
  {
    "idx": 583,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582'",
    "exec_result": 0
  },
  {
    "idx": 584,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT T1.first_name FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id WHERE T2.country = 'Haiti' OR T1.cell_mobile_number = '09700166582'",
    "exec_result": 0
  },
  {
    "idx": 585,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT Title FROM Cartoon ORDER BY Title",
    "exec_result": 1
  },
  {
    "idx": 586,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT Title FROM Cartoon ORDER BY Title ASC",
    "exec_result": 1
  },
  {
    "idx": 587,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT T2.Title FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = 'Ben Jones'",
    "exec_result": 1
  },
  {
    "idx": 588,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT T2.title FROM cartoon AS T1 JOIN TV_channel AS T2 ON T1.channel  =  T2.id WHERE T2.directed_by  =  'Ben Jones';",
    "exec_result": 0
  },
  {
    "idx": 589,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT count(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'",
    "exec_result": 1
  },
  {
    "idx": 590,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr'",
    "exec_result": 1
  },
  {
    "idx": 591,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT Title, Director FROM Cartoon ORDER BY Original_air_date",
    "exec_result": 0
  },
  {
    "idx": 592,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT t2.title, t2.directed_by FROM tv_series AS t1 JOIN cartoon AS t2 ON t1.channel = t2.channel ORDER BY t2.original_air_date",
    "exec_result": 0
  },
  {
    "idx": 593,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti');",
    "exec_result": 1
  },
  {
    "idx": 594,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti'",
    "exec_result": 1
  },
  {
    "idx": 595,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT T2.Country, COUNT(*) AS Number_of_Channels  FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel  GROUP BY T2.Country  ORDER BY Number_of_Channels DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 596,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Country, COUNT(id) as Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 597,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT content) FROM TV_Channel;",
    "exec_result": 1
  },
  {
    "idx": 598,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT DISTINCT COUNT(series_name), content FROM TV_Channel",
    "exec_result": 0
  },
  {
    "idx": 599,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT content FROM TV_Channel WHERE series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 601,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 602,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.series_name  =  'Sky Radio'",
    "exec_result": 0
  },
  {
    "idx": 603,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 604,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English'",
    "exec_result": 1
  },
  {
    "idx": 605,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Language, COUNT(*) as Num FROM TV_Channel GROUP BY Language ORDER BY Num ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 606,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Language, COUNT(*)  FROM TV_Channel  GROUP BY Language  ORDER BY COUNT(*) ASC  LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 607,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language",
    "exec_result": 1
  },
  {
    "idx": 608,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language ,  COUNT(*) FROM TV_Channel GROUP BY Language",
    "exec_result": 1
  },
  {
    "idx": 609,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle!'",
    "exec_result": 1
  },
  {
    "idx": 610,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT T1.series_name FROM TV_Channel AS T1 INNER JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = 'The Rise of the Blue Beetle';",
    "exec_result": 0
  },
  {
    "idx": 611,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 612,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT T2.title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'Sky Radio'",
    "exec_result": 1
  },
  {
    "idx": 613,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT Episode FROM TV_series ORDER BY Rating",
    "exec_result": 1
  },
  {
    "idx": 614,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT Episode FROM TV_series ORDER BY Rating",
    "exec_result": 1
  },
  {
    "idx": 615,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT T2.Episode, T2.Rating FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel ORDER BY T2.Rating DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 616,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 617,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MIN(Share), MAX(Share) FROM TV_series",
    "exec_result": 1
  },
  {
    "idx": 618,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT max(Share), min(Share) FROM TV_series",
    "exec_result": 1
  },
  {
    "idx": 619,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime'",
    "exec_result": 1
  },
  {
    "idx": 620,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT T1.Air_Date FROM TV_series AS T1 JOIN Cartoon AS T2 ON T1.Channel = T2.Channel WHERE T2.Title = 'A Love of a Lifetime'",
    "exec_result": 0
  },
  {
    "idx": 621,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 622,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT T2.Weekly_Rank FROM TV_series AS T1 INNER JOIN Cartoon AS T2 ON T1.Channel = T2.Channel WHERE T2.Title = \"A Love of a Lifetime\"",
    "exec_result": 0
  },
  {
    "idx": 623,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  'A Love of a Lifetime'",
    "exec_result": 1
  },
  {
    "idx": 624,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT T2.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = 'A Love of a Lifetime';",
    "exec_result": 0
  },
  {
    "idx": 625,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Episode FROM TV_series WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')",
    "exec_result": 1
  },
  {
    "idx": 626,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Episode FROM TV_series WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio')",
    "exec_result": 1
  },
  {
    "idx": 627,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by",
    "exec_result": 1
  },
  {
    "idx": 628,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT DIRECTED_BY ,  COUNT(*) FROM Cartoon GROUP BY DIRECTED_BY",
    "exec_result": 1
  },
  {
    "idx": 629,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT T2.Production_code, T1.Title, T2.Channel FROM Cartoon AS T1 JOIN TV_series AS T2 ON T1.Channel = T2.Channel ORDER BY T2.Air_Date DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 630,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 631,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT T1.Package_Option ,  T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'yes'",
    "exec_result": 0
  },
  {
    "idx": 632,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT T1.Package_Option ,  T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV  =  \"yes\"",
    "exec_result": 0
  },
  {
    "idx": 633,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'",
    "exec_result": 1
  },
  {
    "idx": 634,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  'Todd Casey'",
    "exec_result": 1
  },
  {
    "idx": 635,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by != 'Todd Casey'",
    "exec_result": 0
  },
  {
    "idx": 637,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT DISTINCT T2.series_name, T2.Country FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by IN ('Ben Jones', 'Michael Chang')",
    "exec_result": 0
  },
  {
    "idx": 638,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT T1.series_name ,  T1.Country FROM TV_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by  =  'Ben Jones' INTERSECT SELECT T1.series_name ,  T1.Country FROM TV_channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by  =  'Michael Chang'",
    "exec_result": 1
  },
  {
    "idx": 639,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language <> 'English'",
    "exec_result": 1
  },
  {
    "idx": 640,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT id FROM TV_Channel WHERE Country IN (SELECT Country FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2)",
    "exec_result": 0
  },
  {
    "idx": 642,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT id FROM TV_Channel GROUP BY Content HAVING COUNT(*) > 2",
    "exec_result": 1
  },
  {
    "idx": 643,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT DISTINCT T1.id FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by != 'Ben Jones'",
    "exec_result": 0
  },
  {
    "idx": 644,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT t2.id FROM Cartoon AS t1 JOIN TV_Channel AS t2 ON t1.Channel = t2.id WHERE t1.Directed_by != 'Ben Jones'",
    "exec_result": 0
  },
  {
    "idx": 645,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT T1.Package_Option FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by <> 'Ben Jones'",
    "exec_result": 0
  },
  {
    "idx": 646,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT T2.Package_Option FROM Cartoon AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by != 'Ben Jones'",
    "exec_result": 0
  },
  {
    "idx": 647,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT count(*) FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 648,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 649,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT earnings FROM poker_player ORDER BY earnings DESC",
    "exec_result": 1
  },
  {
    "idx": 650,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT Final_Table_Made,Best_Finish FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 652,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT Final_Table_Made, Best_Finish FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 653,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(Earnings) FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 654,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(Earnings) FROM poker_player",
    "exec_result": 1
  },
  {
    "idx": 655,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 656,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT MAX(Money_Rank) FROM poker_player",
    "exec_result": 0
  },
  {
    "idx": 657,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000;",
    "exec_result": 1
  },
  {
    "idx": 658,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000",
    "exec_result": 1
  },
  {
    "idx": 659,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT T1.name FROM people AS T1 JOIN poker_player AS T2 ON T1.people_id  =  T2.people_id",
    "exec_result": 1
  },
  {
    "idx": 660,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
    "exec_result": 1
  },
  {
    "idx": 661,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT T2.name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.earnings > 300000",
    "exec_result": 1
  },
  {
    "idx": 662,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT t2.Name FROM poker_player AS t1 JOIN people AS t2 ON t1.People_ID = t2.People_ID WHERE t1.Earnings > 300000",
    "exec_result": 1
  },
  {
    "idx": 663,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT Name FROM people INNER JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Final_Table_Made ASC",
    "exec_result": 1
  },
  {
    "idx": 664,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Final_Table_Made ASC",
    "exec_result": 1
  },
  {
    "idx": 665,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 666,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT Birth_Date FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 667,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 668,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 669,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200",
    "exec_result": 1
  },
  {
    "idx": 670,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200",
    "exec_result": 1
  },
  {
    "idx": 671,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC",
    "exec_result": 1
  },
  {
    "idx": 672,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT Name FROM people ORDER BY Earnings DESC",
    "exec_result": 0
  },
  {
    "idx": 673,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 674,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT COUNT(*), Nationality FROM people GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 675,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 676,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 677,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >= 2",
    "exec_result": 1
  },
  {
    "idx": 678,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 679,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 680,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 681,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT Name FROM people WHERE Nationality != 'Russia'",
    "exec_result": 1
  },
  {
    "idx": 682,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT Name FROM people WHERE Nationality != 'Russia'",
    "exec_result": 1
  },
  {
    "idx": 683,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);",
    "exec_result": 1
  },
  {
    "idx": 684,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "exec_result": 1
  },
  {
    "idx": 685,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM people",
    "exec_result": 1
  },
  {
    "idx": 686,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM people",
    "exec_result": 1
  },
  {
    "idx": 687,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM area_code_state",
    "pred": "SELECT count(DISTINCT state) FROM votes",
    "exec_result": 0
  },
  {
    "idx": 688,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "pred": "SELECT T1.contestant_number, T1.contestant_name FROM CONTESTANTS AS T1 ORDER BY T1.contestant_name DESC",
    "exec_result": 1
  },
  {
    "idx": 689,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "pred": "SELECT vote_id, phone_number, state FROM VOTES",
    "exec_result": 1
  },
  {
    "idx": 690,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "pred": "SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE",
    "exec_result": 1
  },
  {
    "idx": 691,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "pred": "SELECT created FROM VOTES WHERE state = 'CA' ORDER BY created DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 692,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "pred": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway'",
    "exec_result": 1
  },
  {
    "idx": 693,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT DISTINCT state ,  created FROM votes",
    "pred": "SELECT DISTINCT T2.state, T1.created FROM VOTES AS T1 INNER JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state",
    "exec_result": 0
  },
  {
    "idx": 694,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "pred": "SELECT T2.contestant_number, T2.contestant_name FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 695,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T2.contestant_number, T2.contestant_name FROM VOTES AS T1 INNER JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_number ORDER BY COUNT(T1.contestant_number) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 696,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "pred": "SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA')",
    "exec_result": 1
  },
  {
    "idx": 697,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "pred": "SELECT count(1) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT DISTINCT contestant_number FROM votes)",
    "exec_result": 1
  },
  {
    "idx": 698,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t1.area_code FROM area_code_state AS t1 JOIN votes AS t2 ON t1.state = t2.state GROUP BY t1.area_code ORDER BY count(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 699,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "pred": "SELECT created, state, phone_number FROM VOTES INNER JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling'",
    "exec_result": 1
  },
  {
    "idx": 700,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "pred": "SELECT DISTINCT a.area_code FROM VOTES v1 JOIN CONTESTANTS c1 ON v1.contestant_number = c1.contestant_number JOIN AREA_CODE_STATE a ON v1.state = a.state JOIN VOTES v2 ON v1.phone_number = v2.phone_number AND v2.state = v1.state JOIN CONTESTANTS c2 ON v2.contestant_number = c2.contestant_number WHERE c1.contestant_name = 'Tabatha Gehling' AND c2.contestant_name = 'Kelly Clauss'",
    "exec_result": 0
  },
  {
    "idx": 701,
    "db_id": "voter_1",
    "question": "",
    "gold": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "pred": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%'",
    "exec_result": 1
  },
  {
    "idx": 702,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT name FROM country WHERE IndepYear > 1950",
    "exec_result": 1
  },
  {
    "idx": 703,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT Name FROM country WHERE IndepYear > 1950",
    "exec_result": 1
  },
  {
    "idx": 704,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic'",
    "exec_result": 1
  },
  {
    "idx": 705,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'",
    "exec_result": 1
  },
  {
    "idx": 706,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(T2.SurfaceArea) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Caribbean'",
    "exec_result": 0
  },
  {
    "idx": 707,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(T1.SurfaceArea) FROM country AS T1 INNER JOIN continent AS T2 ON T1.Continent = T2.Name WHERE T2.Name = 'Caribbean'",
    "exec_result": 0
  },
  {
    "idx": 708,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT continent FROM country WHERE name = 'Anguilla';",
    "exec_result": 1
  },
  {
    "idx": 709,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT Continent FROM country WHERE Name = 'Anguilla';",
    "exec_result": 1
  },
  {
    "idx": 710,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT T3.Region FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode INNER JOIN country AS T3 ON T1.Code = T3.Code WHERE T2.Name = 'Kabul'",
    "exec_result": 1
  },
  {
    "idx": 711,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT Region FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = 'Kabul')",
    "exec_result": 1
  },
  {
    "idx": 712,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT Language FROM countrylanguage AS T1 JOIN city AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Name = 'Aruba' ORDER BY T1.Percentage DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 713,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT T3.Language FROM city AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode  WHERE T2.Name = 'Aruba' AND T3.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT Population ,  LifeExpectancy FROM country WHERE Name = 'Brazil'",
    "exec_result": 1
  },
  {
    "idx": 715,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'",
    "exec_result": 1
  },
  {
    "idx": 716,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT Region ,  Population FROM country WHERE Name = 'Angola'",
    "exec_result": 1
  },
  {
    "idx": 717,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT Region, Population FROM country WHERE Name = 'Angola'",
    "exec_result": 1
  },
  {
    "idx": 718,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(lifeexpectancy) FROM country WHERE region = 'Central Africa'",
    "exec_result": 1
  },
  {
    "idx": 719,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(lifeexpectancy)  FROM country  WHERE continent = 'Africa'",
    "exec_result": 0
  },
  {
    "idx": 720,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT T1.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' ORDER BY T2.LifeExpectancy LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 721,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT T2.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T1.LifeExpectancy ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 722,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT sum(T2.population) ,  max(T2.GNP) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia'",
    "exec_result": 0
  },
  {
    "idx": 723,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT COUNT(T2.Population) ,  MAX(T2.GNP) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 724,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(t1.LifeExpectancy) FROM country AS t1 JOIN countrylanguage AS t2 ON t1.Code = t2.CountryCode WHERE t1.Code2 = 'AF' AND t1.GovernmentForm = 'Republic'",
    "exec_result": 0
  },
  {
    "idx": 725,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(T1.LifeExpectancy) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' AND T1.GovernmentForm = 'Republic' AND T2.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 726,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 727,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 728,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT Population FROM city WHERE District = 'Gelderland'",
    "exec_result": 0
  },
  {
    "idx": 729,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT SUM(T2.Population) FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.District = 'Gelderland'",
    "exec_result": 0
  },
  {
    "idx": 730,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'United States';",
    "exec_result": 0
  },
  {
    "idx": 731,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(t1.GNP), SUM(t1.Population) FROM country AS t1 INNER JOIN city AS t2 ON t1.Code = t2.CountryCode WHERE t1.GovernmentForm = 'Republic'",
    "exec_result": 0
  },
  {
    "idx": 732,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage",
    "exec_result": 1
  },
  {
    "idx": 733,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT count(DISTINCT T3.Language) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN city AS T3 ON T3.CountryCode = T2.CountryCode",
    "exec_result": 0
  },
  {
    "idx": 734,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 735,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 736,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba')",
    "exec_result": 1
  },
  {
    "idx": 737,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');",
    "exec_result": 1
  },
  {
    "idx": 738,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 739,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 740,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T3.Name FROM countrylanguage AS T1  JOIN country AS T3 ON T1.CountryCode = T3.Code  WHERE T1.IsOfficial = 'T'  GROUP BY T3.Name  ORDER BY COUNT(T1.Language) DESC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 741,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T2.CountryCode ORDER BY COUNT(T2.Language) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 742,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Continent FROM country GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 743,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.continent ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 744,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(T2.CountryCode) FROM countrylanguage AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Language = 'English' AND T2.Language = 'Dutch';",
    "exec_result": 1
  },
  {
    "idx": 745,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(T1.CountryCode) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language IN ('English','Dutch')",
    "exec_result": 0
  },
  {
    "idx": 746,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 747,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.CountryCode WHERE T2.Language  =  'French'",
    "exec_result": 1
  },
  {
    "idx": 748,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'French' INTERSECT SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English'",
    "exec_result": 0
  },
  {
    "idx": 749,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT t1.name FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code  =  t2.countrycode WHERE t2.language  =  \"English\"INTERSECT SELECT t1.name FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code  =  t2.countrycode WHERE t2.language  =  \"French\"",
    "exec_result": 0
  },
  {
    "idx": 750,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT count(DISTINCT T2.continent) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.countrycode  =  T2.code WHERE T1.language  =  'Chinese'",
    "exec_result": 1
  },
  {
    "idx": 751,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(DISTINCT T1.continent) FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.code  =  T2.countrycode WHERE T2.language  =  'Chinese'",
    "exec_result": 1
  },
  {
    "idx": 752,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  IN  ('English','Dutch')",
    "exec_result": 1
  },
  {
    "idx": 753,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT DISTINCT T1.region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code  =  T2.CountryCode WHERE T2.language = 'Dutch' OR T2.language = 'English'",
    "exec_result": 1
  },
  {
    "idx": 754,
    "db_id": "world_1",
    "question": "",
    "gold": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "pred": "SELECT T1.CountryCode FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'",
    "exec_result": 0
  },
  {
    "idx": 755,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT T1.Name FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' OR T2.Language = 'Dutch'",
    "exec_result": 0
  },
  {
    "idx": 756,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT Language FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 757,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT L.Language FROM country AS C JOIN countrylanguage AS L ON C.Code = L.CountryCode WHERE C.Continent = 'Asia' GROUP BY L.Language ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 758,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT `Name` FROM `countrylanguage` WHERE `IsOfficial` = 'T' AND `CountryCode` IN (SELECT `Code` FROM `country` WHERE `GovernmentForm` = 'Republic') GROUP BY `CountryCode` HAVING COUNT(*) = 1",
    "exec_result": 0
  },
  {
    "idx": 759,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT T3.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode JOIN city AS T3 ON T2.CountryCode = T3.CountryCode WHERE T1.GovernmentForm = 'Republic' GROUP BY T2.Language HAVING COUNT(T3.ID) = 1",
    "exec_result": 0
  },
  {
    "idx": 760,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM city AS T1 INNER JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 761,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 762,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Population, T1.LifeExpectancy FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T1.Code ORDER BY T1.SurfaceArea DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 763,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT T1.Name ,  T1.Population ,  T1.LifeExpectancy FROM country AS T1 INNER JOIN continent AS T2 ON T1.Continent = T2.Name WHERE T2.Name = 'Asia' ORDER BY T1.SurfaceArea DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 764,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(T2.LifeExpectancy) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode LEFT JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode WHERE T3.Language != 'English' OR T3.Language IS NULL",
    "exec_result": 0
  },
  {
    "idx": 765,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(lifeexpectancy) FROM country WHERE NOT Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
    "exec_result": 1
  },
  {
    "idx": 766,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT COUNT(*) FROM city JOIN country ON city.CountryCode = country.Code WHERE countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 767,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT SUM(T2.Population) FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT T1.CountryCode FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Beatrix' AND T1.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 769,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT T1.Language FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.HeadOfState = 'Beatrix' AND T1.IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 770,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 771,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(T1.Language) FROM countrylanguage AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.IndepYear < 1930 AND T1.IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 772,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT t1.Name FROM country AS t1 JOIN continent AS t2 ON t1.Continent = t2.Code WHERE t2.Name = 'Europe' AND t1.SurfaceArea > (SELECT MAX(SurfaceArea) FROM country AS t3 JOIN continent AS t4 ON t3.Continent = t4.Code WHERE t4.Name = 'Europe')",
    "exec_result": 0
  },
  {
    "idx": 773,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT code FROM country WHERE continent = 'Europe' AND SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE continent <> 'Europe')",
    "exec_result": 0
  },
  {
    "idx": 774,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT T1.Name FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Africa' AND T2.Population < ( SELECT MIN(T2.Population) FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Asia' )",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT C.Name FROM country AS C WHERE C.Continent = 'Asia' EXCEPT SELECT C.Name FROM country AS C WHERE C.Continent = 'Africa' AND C.Population <= (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')",
    "exec_result": 0
  },
  {
    "idx": 776,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT Name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')",
    "exec_result": 1
  },
  {
    "idx": 777,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(Population) FROM country AS c2 WHERE c2.Continent = 'Africa')",
    "exec_result": 0
  },
  {
    "idx": 778,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT Code FROM country WHERE NOT EXISTS (SELECT 1 FROM countrylanguage WHERE countrycode = country.Code AND Language = 'English')",
    "exec_result": 0
  },
  {
    "idx": 779,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
    "exec_result": 0
  },
  {
    "idx": 780,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT CountryCode FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
    "exec_result": 0
  },
  {
    "idx": 781,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT T1.CountryCode FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language != 'English'",
    "exec_result": 0
  },
  {
    "idx": 782,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT Code FROM country WHERE GovernmentForm != 'Republic' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');",
    "exec_result": 1
  },
  {
    "idx": 784,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT T2.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Europe' AND T2.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
    "exec_result": 0
  },
  {
    "idx": 785,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Continent = 'Europe' AND T2.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
    "exec_result": 1
  },
  {
    "idx": 786,
    "db_id": "world_1",
    "question": "",
    "gold": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "pred": "SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 787,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "pred": "SELECT DISTINCT T2.Name FROM city AS T1 INNER JOIN country AS T2 ON T1.CountryCode = T2.Code INNER JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 788,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT Name ,  IndepYear ,  SurfaceArea FROM country ORDER BY Population ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 789,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT Name ,  IndepYear ,  SurfaceArea FROM country ORDER BY Population ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 790,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT T2.Population, T2.Name, T2.HeadOfState FROM city AS T1 INNER JOIN country AS T2 ON T2.Code = T1.CountryCode ORDER BY T2.SurfaceArea DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 791,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT T1.name, T1.population, T1.headofstate FROM country AS T1 ORDER BY T1.surfacearea DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 792,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage >= 3 GROUP BY T1.Name",
    "exec_result": 0
  },
  {
    "idx": 793,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT T2.Name, count(*)  FROM countrylanguage AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  GROUP BY T1.CountryCode  HAVING count(*)  >  2",
    "exec_result": 1
  },
  {
    "idx": 794,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT District, COUNT(*) AS CityCount  FROM city  WHERE Population > (SELECT AVG(Population) FROM city)  GROUP BY District",
    "exec_result": 1
  },
  {
    "idx": 795,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT count(*) ,  District FROM city GROUP BY District HAVING avg(Population) > (SELECT avg(Population) FROM city)",
    "exec_result": 0
  },
  {
    "idx": 796,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT GovernmentForm ,  SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72",
    "exec_result": 1
  },
  {
    "idx": 797,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72",
    "exec_result": 1
  },
  {
    "idx": 798,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT Continent, AVG(LifeExpectancy) AS AvgLifeExpectancy, SUM(Population) AS TotalPopulation FROM country GROUP BY Continent HAVING AvgLifeExpectancy < 72",
    "exec_result": 1
  },
  {
    "idx": 799,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT continent ,  sum(population) ,  avg(lifeexpectancy) FROM country GROUP BY continent HAVING avg(lifeexpectancy) < 72",
    "exec_result": 1
  },
  {
    "idx": 800,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT Name,SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 801,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT name ,  surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 802,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 803,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 804,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 805,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 806,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT count(*) FROM country WHERE Continent = 'Asia'",
    "exec_result": 1
  },
  {
    "idx": 807,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(*) FROM country WHERE Continent = 'Asia'",
    "exec_result": 1
  },
  {
    "idx": 808,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT t1.Name FROM country AS t1 JOIN city AS t2 ON t1.Code = t2.CountryCode WHERE t1.Continent = 'Europe' AND t1.Population > 80000",
    "exec_result": 0
  },
  {
    "idx": 809,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000",
    "exec_result": 1
  },
  {
    "idx": 810,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT sum(T2.Population), avg(T1.SurfaceArea) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'North America' AND T1.SurfaceArea > 3000",
    "exec_result": 0
  },
  {
    "idx": 811,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT SUM(T2.Population), AVG(T1.SurfaceArea) FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'North America' AND T1.SurfaceArea > 3000",
    "exec_result": 0
  },
  {
    "idx": 812,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "pred": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "exec_result": 1
  },
  {
    "idx": 813,
    "db_id": "world_1",
    "question": "",
    "gold": "select name from city where population between 160000 and 900000",
    "pred": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;",
    "exec_result": 1
  },
  {
    "idx": 814,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 815,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Language FROM countrylanguage GROUP BY Language ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 816,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT T1.Name, T2.Language FROM country AS T1 INNER JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Percentage = ( SELECT MAX(T2.Percentage) FROM countrylanguage AS T2 WHERE T2.CountryCode = T1.Code )",
    "exec_result": 0
  },
  {
    "idx": 817,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT country.Code, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = (SELECT MAX(Percentage) FROM countrylanguage)",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(*) FROM ( SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT count(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.Percentage > 90",
    "exec_result": 0
  },
  {
    "idx": 820,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND T2.IsOfficial = 'T' ORDER BY T2.Percentage DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 821,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT Code FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T')",
    "exec_result": 0
  },
  {
    "idx": 822,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT count(*) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 823,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT count(*) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 824,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT name FROM conductor ORDER BY age ASC;",
    "exec_result": 1
  },
  {
    "idx": 825,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT Name FROM conductor ORDER BY Age",
    "exec_result": 1
  },
  {
    "idx": 826,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "exec_result": 1
  },
  {
    "idx": 827,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT name FROM conductor WHERE nationality != 'USA'",
    "exec_result": 1
  },
  {
    "idx": 828,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;",
    "exec_result": 1
  },
  {
    "idx": 829,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "exec_result": 1
  },
  {
    "idx": 830,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(Attendance) FROM show;",
    "exec_result": 1
  },
  {
    "idx": 831,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(Attendance) FROM show",
    "exec_result": 1
  },
  {
    "idx": 832,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT max(T2.Share) ,  min(T2.Share) FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID  =  T2.Performance_ID WHERE T1.Type != 'Live final'",
    "exec_result": 0
  },
  {
    "idx": 833,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MAX(T3.share) ,  MIN(T3.share) FROM performance AS T1 JOIN show AS T2 ON T1.performance_id  =  T2.performance_id JOIN performance AS T3 ON T2.performance_id  =  T3.performance_id WHERE T1.Type  <>  'Live final'",
    "exec_result": 0
  },
  {
    "idx": 834,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 835,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM conductor",
    "exec_result": 1
  },
  {
    "idx": 836,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "exec_result": 1
  },
  {
    "idx": 837,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "exec_result": 1
  },
  {
    "idx": 838,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
    "exec_result": 1
  },
  {
    "idx": 839,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM conductor AS T1 INNER JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY COUNT(T2.Orchestra_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 840,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT T2.Name, T3.Orchestra FROM conductor AS T2 JOIN orchestra AS T3 ON T2.Conductor_ID = T3.Conductor_ID",
    "exec_result": 1
  },
  {
    "idx": 841,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT T3.Name, T2.Orchestra FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN conductor AS T3 ON T2.Conductor_ID = T3.Conductor_ID",
    "exec_result": 0
  },
  {
    "idx": 842,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(*) > 1)",
    "exec_result": 1
  },
  {
    "idx": 843,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT T2.name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.conductor_id = T2.conductor_id GROUP BY T2.name HAVING COUNT(T1.orchestra_id) > 1",
    "exec_result": 1
  },
  {
    "idx": 844,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.Name FROM performance AS T1 JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID JOIN conductor AS T3 ON T2.Conductor_ID = T3.Conductor_ID GROUP BY T3.Name ORDER BY COUNT(T1.Orchestra_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 845,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008",
    "exec_result": 1
  },
  {
    "idx": 847,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT T2.name FROM orchestra AS T1 INNER JOIN conductor AS T2 ON T1.conductor_id = T2.conductor_id WHERE T1.year_of_founded > 2008",
    "exec_result": 1
  },
  {
    "idx": 848,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT Record_Company, COUNT(Orchestra_ID) FROM orchestra GROUP BY Record_Company",
    "exec_result": 1
  },
  {
    "idx": 849,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT Record_Company, COUNT(*) FROM orchestra GROUP BY Record_Company;",
    "exec_result": 1
  },
  {
    "idx": 850,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT Major_Record_Format FROM orchestra ORDER BY COUNT(*) ASC",
    "exec_result": 0
  },
  {
    "idx": 851,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT major_record_format FROM orchestra GROUP BY major_record_format ORDER BY count(*) DESC",
    "exec_result": 0
  },
  {
    "idx": 852,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 853,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 854,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "exec_result": 1
  },
  {
    "idx": 855,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "exec_result": 1
  },
  {
    "idx": 856,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003",
    "exec_result": 1
  },
  {
    "idx": 857,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003",
    "exec_result": 1
  },
  {
    "idx": 858,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')",
    "exec_result": 1
  },
  {
    "idx": 859,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')",
    "exec_result": 1
  },
  {
    "idx": 860,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT T3.Year_of_Founded FROM performance AS T1 INNER JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID INNER JOIN conductor AS T3 ON T2.Conductor_ID = T3.Conductor_ID GROUP BY T3.Year_of_Founded HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 861,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT YEAR_OF_FOUNDED FROM ORCHESTRA WHERE Orchestra_ID IN  (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(Performance_ID) > 1)",
    "exec_result": 1
  },
  {
    "idx": 862,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT count(*) FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT count(*) FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 864,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 865,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 866,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT grade FROM Highschooler",
    "exec_result": 1
  },
  {
    "idx": 867,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler;",
    "exec_result": 0
  },
  {
    "idx": 868,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade FROM Highschooler WHERE name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 869,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade FROM Highschooler WHERE name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 870,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name FROM Highschooler WHERE grade = 10",
    "exec_result": 1
  },
  {
    "idx": 871,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name FROM Highschooler WHERE grade = 10;",
    "exec_result": 1
  },
  {
    "idx": 872,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 873,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 874,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10",
    "exec_result": 1
  },
  {
    "idx": 875,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) FROM Highschooler WHERE grade = 9 OR grade = 10",
    "exec_result": 1
  },
  {
    "idx": 876,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "exec_result": 1
  },
  {
    "idx": 877,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade",
    "exec_result": 1
  },
  {
    "idx": 878,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 879,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 880,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*)  >=  4",
    "exec_result": 1
  },
  {
    "idx": 881,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4",
    "exec_result": 1
  },
  {
    "idx": 882,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(*) AS NumberOfFriends FROM Friend GROUP BY student_id",
    "exec_result": 1
  },
  {
    "idx": 883,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT student_id ,  COUNT(*) FROM Friend GROUP BY student_id",
    "exec_result": 1
  },
  {
    "idx": 884,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT name, COUNT(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY name;",
    "exec_result": 0
  },
  {
    "idx": 885,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT T1.name ,  COUNT(T2.student_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T2.student_id",
    "exec_result": 1
  },
  {
    "idx": 886,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.name FROM friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 887,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT friend_id FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler) GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 888,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT name FROM highschooler WHERE ID IN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(*) >= 3)",
    "exec_result": 1
  },
  {
    "idx": 889,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3)",
    "exec_result": 1
  },
  {
    "idx": 890,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT T2.name FROM Highschooler AS T1  JOIN Friend AS T3 ON T1.ID = T3.student_id  JOIN Highschooler AS T2 ON T3.friend_id = T2.ID  WHERE T1.name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 891,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT T3.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id JOIN Highschooler AS T3 ON T2.student_id = T3.ID WHERE T1.name = 'Kyle';",
    "exec_result": 0
  },
  {
    "idx": 892,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) FROM Friend WHERE student_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle')",
    "exec_result": 1
  },
  {
    "idx": 893,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(DISTINCT T2.Friend_id) AS num_friends FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.id = T2.student_id WHERE T1.name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 894,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 895,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT id FROM Highschooler WHERE id NOT IN (SELECT student_id FROM Friend UNION SELECT friend_id FROM Friend)",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 897,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 898,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT T1.student_id FROM friend AS T1 JOIN likes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
    "exec_result": 0
  },
  {
    "idx": 899,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.student_id",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) INTERSECT SELECT DISTINCT name FROM Highschooler WHERE ID IN (SELECT liked_id FROM Likes)",
    "exec_result": 1
  },
  {
    "idx": 901,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT T1.name FROM Highschooler AS T1 INNER JOIN Friend AS T2 ON T1.ID  =  T2.student_id INNER JOIN Likes AS T3 ON T1.ID  =  T3.liked_id",
    "exec_result": 0
  },
  {
    "idx": 902,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(*) FROM Likes GROUP BY student_id",
    "exec_result": 1
  },
  {
    "idx": 903,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT liked_id, COUNT(*) FROM Likes GROUP BY liked_id;",
    "exec_result": 0
  },
  {
    "idx": 904,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT T2.name, COUNT(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T2.name;",
    "exec_result": 0
  },
  {
    "idx": 905,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT T3.name ,  COUNT(*) FROM Likes AS T1 JOIN Highschooler AS T3 ON T1.student_id  =  T3.ID GROUP BY T3.name",
    "exec_result": 0
  },
  {
    "idx": 906,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT liked_id FROM Likes GROUP BY liked_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 907,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name FROM Highschooler ORDER BY (SELECT COUNT(*) FROM Likes WHERE student_id = Highschooler.ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 908,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.ID GROUP BY T1.liked_id HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 909,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)",
    "exec_result": 1
  },
  {
    "idx": 910,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id WHERE T1.grade  >  5 GROUP BY T1.ID HAVING COUNT(T2.friend_id)  >=  2",
    "exec_result": 1
  },
  {
    "idx": 911,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id GROUP BY T1.ID, T1.name HAVING T1.grade  >  5 AND COUNT(*)  >=  2",
    "exec_result": 1
  },
  {
    "idx": 912,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) FROM likes WHERE student_id = (SELECT ID FROM highschooler WHERE name = 'Kyle')",
    "exec_result": 1
  },
  {
    "idx": 913,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(liked_id) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')",
    "exec_result": 1
  },
  {
    "idx": 914,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(T1.grade) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id",
    "exec_result": 0
  },
  {
    "idx": 915,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(T2.grade) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.ID",
    "exec_result": 0
  },
  {
    "idx": 916,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT min(grade) FROM highschooler WHERE ID NOT IN (SELECT friend_id FROM friend)",
    "exec_result": 0
  },
  {
    "idx": 917,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT DISTINCT student_id FROM Friend);",
    "exec_result": 1
  },
  {
    "idx": 918,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT DISTINCT T1.state FROM Owners AS T1 JOIN Professional_Addresses AS T2 ON T1.owner_id = T2.owner_id",
    "exec_result": 0
  },
  {
    "idx": 919,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT DISTINCT state FROM Owners INTERSECT SELECT DISTINCT state FROM Professionals",
    "exec_result": 1
  },
  {
    "idx": 920,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(T1.age) FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
    "exec_result": 0
  },
  {
    "idx": 921,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id",
    "exec_result": 0
  },
  {
    "idx": 922,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT professional_id, last_name, cell_number FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2)",
    "exec_result": 1
  },
  {
    "idx": 923,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT DISTINCT P.professional_id, P.last_name, P.cell_number FROM Professionals AS P INNER JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE P.state = 'Indiana' OR COUNT(T.treatment_id) > 2 GROUP BY P.professional_id",
    "exec_result": 0
  },
  {
    "idx": 924,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT T2.name FROM Treatments AS T1 INNER JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id WHERE T1.cost_of_treatment <= 1000",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT DISTINCT T1.name FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id INNER JOIN Owners AS T3 ON T1.owner_id = T3.owner_id WHERE T3.owner_id = T1.owner_id GROUP BY T1.name HAVING SUM(T2.cost_of_treatment) <= 1000",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)",
    "exec_result": 1
  },
  {
    "idx": 927,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT first_name FROM owners WHERE first_name NOT IN ( SELECT first_name FROM dogs UNION SELECT first_name FROM professionals ) UNION SELECT last_name FROM professionals WHERE last_name NOT IN ( SELECT first_name FROM dogs UNION SELECT last_name FROM professionals );",
    "exec_result": 0
  },
  {
    "idx": 928,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT professional_id ,  role_code ,  email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);",
    "exec_result": 1
  },
  {
    "idx": 929,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT professional_id, role_code, email_address FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments)",
    "exec_result": 1
  },
  {
    "idx": 930,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT owner_id, first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 931,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT owner_id, first_name, last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owner_id, first_name, last_name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 932,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT T3.professional_id ,  T2.role_code ,  T3.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id JOIN Professions AS T3 ON T2.professional_id  =  T3.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "exec_result": 0
  },
  {
    "idx": 933,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT professional_id ,  role_code ,  first_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY professional_id, role_code, first_name HAVING COUNT(professional_id)  >=  2",
    "exec_result": 0
  },
  {
    "idx": 934,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT breed_name FROM breeds ORDER BY COUNT(breed_code) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 935,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T2.breed_code ORDER BY COUNT(T2.dog_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 936,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.owner_id ,  T3.last_name FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id JOIN Owners AS T3 ON T1.owner_id = T3.owner_id GROUP BY T1.owner_id ORDER BY SUM(T2.cost_of_treatment) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 937,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.owner_id, T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY SUM(T2.cost_of_treatment) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 939,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT T1.treatment_type_description FROM Treatment_Types AS T1 INNER JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_description ORDER BY SUM(T2.cost_of_treatment) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 940,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT owner_id, zip_code FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments) GROUP BY owner_id, zip_code ORDER BY SUM(cost_of_treatment) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 941,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT T2.owner_id ,  T2.zip_code FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T2.owner_id ,  T2.zip_code ORDER BY SUM(T1.cost_of_treatment) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 942,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT professional_id, cell_number FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2",
    "exec_result": 0
  },
  {
    "idx": 943,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT P.professional_id, P.cell_number FROM Professional P WHERE ( SELECT COUNT(T.treatment_id) FROM Treatments T WHERE T.professional_id = P.professional_id ) >= 2",
    "exec_result": 0
  },
  {
    "idx": 944,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))",
    "exec_result": 0
  },
  {
    "idx": 945,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT first_name, last_name FROM professionals WHERE professional_id IN ( SELECT professional_id FROM treatments WHERE cost_of_treatment < ( SELECT AVG(cost_of_treatment) FROM treatments ) )",
    "exec_result": 0
  },
  {
    "idx": 946,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id",
    "exec_result": 1
  },
  {
    "idx": 947,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "exec_result": 1
  },
  {
    "idx": 948,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT cost_of_treatment, T1.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "exec_result": 0
  },
  {
    "idx": 949,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT T2.cost_of_treatment, T3.treatment_type_description FROM Treatments AS T1 JOIN Charges AS T2 ON T1.treatment_type_code = T2.charge_id JOIN Treatment_Types AS T3 ON T1.treatment_type_code = T3.treatment_type_code",
    "exec_result": 0
  },
  {
    "idx": 950,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT T3.first_name ,  T3.last_name ,  T4.size_description FROM Dogs AS T1 INNER JOIN Owners AS T3 ON T1.owner_id = T3.owner_id INNER JOIN Sizes AS T4 ON T1.size_code = T4.size_code",
    "exec_result": 0
  },
  {
    "idx": 951,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT O.first_name, O.last_name, D.size_code FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id",
    "exec_result": 1
  },
  {
    "idx": 952,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT T1.first_name, T2.name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id",
    "exec_result": 1
  },
  {
    "idx": 953,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT O.first_name, D.name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 954,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT T2.name, T3.date_of_treatment FROM Dogs AS T1  JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code  JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id  GROUP BY T2.breed_code  ORDER BY COUNT(T1.dog_id) ASC  LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 955,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT T2.name, T3.date_of_treatment FROM dogs AS T1 INNER JOIN treatments AS T3 ON T1.dog_id = T3.dog_id INNER JOIN breeds AS T2 ON T2.breed_code = T1.breed_code WHERE T2.breed_name = (SELECT breed_name FROM ( SELECT T1.breed_name, COUNT(*) AS cnt FROM dogs AS T1 INNER JOIN breeds AS T2 ON T2.breed_code = T1.breed_code GROUP BY T1.breed_code ORDER BY cnt ) AS T4 LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 956,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT T1.first_name, T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",
    "exec_result": 1
  },
  {
    "idx": 957,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT DISTINCT T1.first_name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",
    "exec_result": 0
  },
  {
    "idx": 958,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
    "exec_result": 1
  },
  {
    "idx": 959,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT T1.date_arrived, T1.date_departed FROM Dogs AS T1 INNER JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id",
    "exec_result": 1
  },
  {
    "idx": 960,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT T3.last_name FROM Dogs AS T1 INNER JOIN Owners AS T3 ON T1.owner_id = T3.owner_id WHERE T1.date_of_birth = ( SELECT MIN(date_of_birth) FROM Dogs )",
    "exec_result": 0
  },
  {
    "idx": 961,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id ORDER BY T1.date_of_birth ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin')",
    "exec_result": 1
  },
  {
    "idx": 963,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT email_address FROM professionals WHERE state IN ('Hawaii', 'Wisconsin')",
    "exec_result": 1
  },
  {
    "idx": 964,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT date_arrived, date_departed FROM Dogs;",
    "exec_result": 1
  },
  {
    "idx": 965,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT date_arrived, date_departed FROM dogs",
    "exec_result": 1
  },
  {
    "idx": 966,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT T1.dog_id) FROM Treatments AS T1",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(dog_id) FROM Treatments",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT professional_id) FROM Treatments",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT professional_id) FROM Treatments",
    "exec_result": 1
  },
  {
    "idx": 970,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%'",
    "exec_result": 1
  },
  {
    "idx": 971,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT t1.role_code, t1.street, t1.city, t1.state FROM professionals AS t1 INNER JOIN owners AS t2 ON t1.owner_id = t2.owner_id WHERE t2.city LIKE '%West%'",
    "exec_result": 0
  },
  {
    "idx": 972,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'",
    "exec_result": 1
  },
  {
    "idx": 973,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'",
    "exec_result": 1
  },
  {
    "idx": 974,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(*) FROM Dogs WHERE age < ( SELECT AVG(age) FROM Dogs )",
    "exec_result": 1
  },
  {
    "idx": 975,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)",
    "exec_result": 1
  },
  {
    "idx": 976,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 977,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT MAX(T2.cost_of_treatment) FROM Treatments AS T1 JOIN Charges AS T2 ON T1.treatment_type_code = T2.charge_type ORDER BY T1.date_of_treatment DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 978,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)",
    "exec_result": 1
  },
  {
    "idx": 979,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "pred": "SELECT COUNT(*) FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments)",
    "exec_result": 1
  },
  {
    "idx": 980,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT count(*) FROM owners WHERE dog_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 981,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL);",
    "exec_result": 0
  },
  {
    "idx": 982,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(professional_id) FROM treatments WHERE professional_id NOT IN (SELECT professional_id FROM treatments)",
    "exec_result": 0
  },
  {
    "idx": 983,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT count(*) FROM Professional WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)",
    "exec_result": 0
  },
  {
    "idx": 984,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT name ,  age ,  weight FROM dogs WHERE abandoned_yn = '1'",
    "exec_result": 1
  },
  {
    "idx": 985,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1'",
    "exec_result": 1
  },
  {
    "idx": 986,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(age) FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 987,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(age) FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 988,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(age) FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 989,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(age) FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 990,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT charge_type ,  charge_amount FROM CHARGES",
    "exec_result": 1
  },
  {
    "idx": 991,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT charge_type, charge_amount FROM Charges",
    "exec_result": 1
  },
  {
    "idx": 992,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT MAX(charge_amount) FROM CHARGES",
    "exec_result": 1
  },
  {
    "idx": 993,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 994,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "exec_result": 1
  },
  {
    "idx": 995,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT email_address, cell_number, home_phone FROM Professionals",
    "exec_result": 1
  },
  {
    "idx": 996,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT breed_code, size_code FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 997,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT DISTINCT breed_code, size_code FROM Dogs",
    "exec_result": 1
  },
  {
    "idx": 998,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT P.first_name, TT.treatment_type_description FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code",
    "exec_result": 1
  },
  {
    "idx": 999,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT P.first_name, TT.treatment_type_description FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id JOIN Treatment_Types AS TT ON T.treatment_type_code = TT.treatment_type_code",
    "exec_result": 1
  },
  {
    "idx": 1000,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT count(*) FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1001,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT count(*) FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1002,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "exec_result": 1
  },
  {
    "idx": 1003,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "exec_result": 1
  },
  {
    "idx": 1004,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year, Citizenship FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1005,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year ,  Citizenship FROM singer",
    "exec_result": 1
  },
  {
    "idx": 1006,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT Name FROM singer WHERE Citizenship != 'France';",
    "exec_result": 1
  },
  {
    "idx": 1007,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT Name FROM singer WHERE Citizenship != 'France'",
    "exec_result": 1
  },
  {
    "idx": 1008,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);",
    "exec_result": 1
  },
  {
    "idx": 1009,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Birth_Year  =  1948 OR T1.Birth_Year  =  1949",
    "exec_result": 0
  },
  {
    "idx": 1010,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT name FROM singer ORDER BY net_worth_millions DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1011,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1012,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT COUNT(*) ,  Citizenship FROM singer GROUP BY Citizenship",
    "exec_result": 1
  },
  {
    "idx": 1013,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1014,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT citizenship FROM singer GROUP BY citizenship ORDER BY COUNT(citizenship) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1015,
    "db_id": "singer",
    "question": "",
    "gold": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "pred": "SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1016,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship ,  MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "exec_result": 1
  },
  {
    "idx": 1017,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT citizenship, max(net_worth_millions) FROM singer GROUP BY citizenship",
    "exec_result": 1
  },
  {
    "idx": 1018,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT song.Title, singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID",
    "exec_result": 1
  },
  {
    "idx": 1019,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT s.Title ,  si.Name FROM song AS s JOIN singer AS si ON s.Singer_ID  =  si.Singer_ID",
    "exec_result": 1
  },
  {
    "idx": 1020,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT t1.Name FROM singer AS T1 INNER JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000",
    "exec_result": 1
  },
  {
    "idx": 1021,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT Name FROM singer WHERE Sales > 300000",
    "exec_result": 0
  },
  {
    "idx": 1022,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 1023,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 1024,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID",
    "exec_result": 1
  },
  {
    "idx": 1025,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT T1.Name, SUM(T2.Sales) AS Total_Sales FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",
    "exec_result": 1
  },
  {
    "idx": 1026,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "exec_result": 1
  },
  {
    "idx": 1027,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT T1.name FROM singer AS T1 LEFT JOIN song AS T2 ON T1.singer_id = T2.singer_id WHERE T2.singer_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1028,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT T1.citizenship FROM singer AS T1 JOIN song AS T2 ON T1.singer_id  =  T2.singer_id WHERE T1.birth_year  <  1945 INTERSECT SELECT T1.citizenship FROM singer AS T1 JOIN song AS T2 ON T1.singer_id  =  T2.singer_id WHERE T1.birth_year  >  1955",
    "exec_result": 0
  },
  {
    "idx": 1029,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT T2.Citizenship FROM singer AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Birth_Year < 1945 AND T2.Birth_Year > 1955",
    "exec_result": 0
  },
  {
    "idx": 1030,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT count(*) FROM Other_Available_Features",
    "pred": "SELECT COUNT(*) FROM Other_Available_Features",
    "exec_result": 1
  },
  {
    "idx": 1031,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "pred": "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'Amenity'",
    "exec_result": 1
  },
  {
    "idx": 1032,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "pred": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_code = 'House'",
    "exec_result": 0
  },
  {
    "idx": 1033,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "pred": "SELECT T2.property_name FROM Ref_Property_Types AS T1 INNER JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code WHERE T1.property_type_description IN ('House', 'Apartment') AND T2.room_count > 1;",
    "exec_result": 0
  }
]