[
  {
    "idx": 0,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) AS \"Number of Singers\" FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(Singer_ID) AS Total_Singers FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 2,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT s.Name, s.Country, s.Age FROM singer s ORDER BY s.Age DESC;",
    "exec_result": 1
  },
  {
    "idx": 3,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT s.Name, s.Country, s.Age FROM singer s ORDER BY s.Age DESC;",
    "exec_result": 1
  },
  {
    "idx": 4,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(`Age`) AS Average_Age, MIN(`Age`) AS Min_Age, MAX(`Age`) AS Max_Age FROM singer WHERE `Country` = 'France';",
    "exec_result": 1
  },
  {
    "idx": 5,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';",
    "exec_result": 1
  },
  {
    "idx": 6,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT s.Song_Name, s.Song_release_year FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE s.Age = (SELECT MIN(Age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 7,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT s.Song_Name, s.Song_release_year FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE s.Age = (SELECT MIN(Age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 8,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT Country FROM singer WHERE Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 9,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT Country FROM singer WHERE Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 10,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT Country, COUNT(*) AS Singer_Count FROM singer GROUP BY Country;",
    "exec_result": 1
  },
  {
    "idx": 11,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT Country, COUNT(*) AS Singer_count FROM singer GROUP BY Country;",
    "exec_result": 1
  },
  {
    "idx": 12,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT s.Song_Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE s.Age > (SELECT AVG(Age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 13,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT s.Song_Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE s.Age > (SELECT AVG(Age) FROM singer)",
    "exec_result": 0
  },
  {
    "idx": 14,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 15,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 16,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select max(capacity), average from stadium",
    "pred": "-- Maximum capacity of all stadiums SELECT MAX(\"Capacity\") AS max_capacity FROM stadium;  -- Average of all stadiums' capacities SELECT AVG(\"Capacity\") AS avg_capacity FROM stadium;",
    "exec_result": 0
  },
  {
    "idx": 17,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select avg(capacity) ,  max(capacity) from stadium",
    "pred": "SELECT AVG(Stadium.Capacity) AS AverageCapacity, MAX(Stadium.Capacity) AS MaximumCapacity FROM stadium;",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT s.Name, s.Capacity FROM stadium s JOIN (     SELECT Stadium_ID, AVG(Capacity) AS avg_capacity     FROM stadium     GROUP BY Stadium_ID     ORDER BY avg_capacity DESC     LIMIT 1 ) sc ON s.Stadium_ID = sc.Stadium_ID;",
    "exec_result": 0
  },
  {
    "idx": 19,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT s.Name AS Stadium_Name, s.Capacity AS Stadium_Capacity FROM stadium s JOIN (     SELECT Stadium_ID, AVG(Average) AS Average_Attendance     FROM stadium     GROUP BY Stadium_ID     ORDER BY Average_Attendance DESC     LIMIT 1 ) max_avg_stadium ON s.Stadium_ID = max_avg_stadium.Stadium_ID;",
    "exec_result": 1
  },
  {
    "idx": 20,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*) AS Total_Congress FROM concert WHERE Year IN ('2014', '2015');",
    "exec_result": 1
  },
  {
    "idx": 21,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*) as num_concerts FROM concert WHERE Year IN ('2014', '2015');",
    "exec_result": 1
  },
  {
    "idx": 22,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT stadium.Name, COUNT(concert.concert_ID) AS ConcertCount FROM stadium JOIN concert_in_concert ON stadium.Stadium_ID = concert_in_concert.Stadium_ID GROUP BY stadium.Stadium_ID, stadium.Name;",
    "exec_result": 0
  },
  {
    "idx": 23,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT s.Stadium_ID, COUNT(*) AS Concerts FROM stadium s JOIN singer_in_concert sic ON s.Stadium_ID = sic.Stadium_ID GROUP BY s.Stadium_ID;",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= '2014' GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 25,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "pred": "SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > '2013' GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 26,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Year, COUNT(*) as NumConcerts FROM concert GROUP BY Year ORDER BY NumConcerts DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 27,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Year, COUNT(*) as Total_Concerts FROM concert GROUP BY Year ORDER BY Total_Concerts DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 28,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT s.Name FROM stadium s LEFT JOIN singer_in_concert sic ON s.Stadium_ID = sic.Stadium_ID WHERE sic.concert_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 29,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT s.Name FROM stadium s LEFT JOIN singer_in_concert sic ON s.Stadium_ID = sic.Stadium_ID WHERE sic.concert_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 30,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "pred": "SELECT DISTINCT s.Country FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE s.Age > 40 AND s.Age < 30;",
    "exec_result": 0
  },
  {
    "idx": 31,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT DISTINCT stadium.Name FROM stadium LEFT JOIN singer_in_concert ON stadium.Stadium_ID = singer_in_concert.Stadium_ID LEFT JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year != '2014';",
    "exec_result": 0
  },
  {
    "idx": 32,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT s.Name AS Stadium_Name FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE YEAR(c.Year) != 2014;",
    "exec_result": 0
  },
  {
    "idx": 33,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "pred": "SELECT concert.concert_Name, concert.Theme, COUNT(singer.Singer_ID) AS Singer_Count FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY concert.concert_ID, concert.Theme;",
    "exec_result": 1
  },
  {
    "idx": 34,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "pred": "SELECT concert.concert_Name, concert.Theme, COUNT(singer.Singer_ID) AS Singer_Count FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;",
    "exec_result": 1
  },
  {
    "idx": 35,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT s.Name AS Singer_Name, COUNT(c.concert_ID) AS Concert_Count FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Singer_ID;",
    "exec_result": 1
  },
  {
    "idx": 36,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT s.Name AS Singer_Name, COUNT(*) AS Concert_Count FROM singer s JOIN singer_in_concert sci ON s.Singer_ID = sci.Singer_ID GROUP BY s.Singer_ID;",
    "exec_result": 1
  },
  {
    "idx": 37,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT s.Name FROM singer s INNER JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID INNER JOIN concert c ON sic.concert_ID = c.concert_ID WHERE YEAR(c.Year) = 2014;",
    "exec_result": 0
  },
  {
    "idx": 38,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = '2014';",
    "exec_result": 1
  },
  {
    "idx": 39,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT s.Name, s.Country FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE sic.Song_Name LIKE '%Hey%';",
    "exec_result": 0
  },
  {
    "idx": 40,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT s.Name, s.Country FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE sic.Song_Name LIKE '%Hey%'",
    "exec_result": 0
  },
  {
    "idx": 41,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT s.Location, s.Name FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN ('2014', '2015')",
    "exec_result": 0
  },
  {
    "idx": 42,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT stadium.Name, stadium.Location FROM stadium INNER JOIN concert_in_concert ON stadium.Stadium_ID = concert_in_concert.Stadium_ID INNER JOIN concert ON concert_in_concert.concert_ID = concert.concert_ID WHERE concert.Year IN ('2014', '2015')",
    "exec_result": 0
  },
  {
    "idx": 43,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(*) as num_concerts FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);",
    "exec_result": 1
  },
  {
    "idx": 44,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(*) as num_concerts FROM concert WHERE Stadium_ID IN (     SELECT Stadium_ID     FROM stadium     ORDER BY Capacity DESC     LIMIT 1 );",
    "exec_result": 1
  },
  {
    "idx": 45,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(PetID) AS Heavy_Pets FROM Pets WHERE weight > 10;",
    "exec_result": 1
  },
  {
    "idx": 46,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*) AS num_pets_greater_than_10 FROM Pets WHERE weight > 10;",
    "exec_result": 1
  },
  {
    "idx": 47,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT p.weight FROM Pets p JOIN Has_Pet hp ON p.PetID = hp.PetID JOIN Student s ON hp.StuID = s.StuID WHERE s.Age = (SELECT MIN(Age) FROM Student) AND p.PetType = 'dog';",
    "exec_result": 0
  },
  {
    "idx": 48,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT p.pet_age FROM Pets p JOIN Has_Pet hp ON p.PetID = hp.PetID WHERE p.pet_type = 'dog' AND p.pet_age = (SELECT MIN(pet_age) FROM Pets WHERE pet_type = 'dog')",
    "exec_result": 0
  },
  {
    "idx": 49,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT Pets.PetType, MAX(Pets.weight) AS MaxWeight FROM Pets INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID INNER JOIN Student ON Has_Pet.StuID = Student.StuID GROUP BY Pets.PetType;",
    "exec_result": 1
  },
  {
    "idx": 50,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT Pet.PetType, MAX(Pets.weight) AS MaxWeight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID GROUP BY Pet.PetType;",
    "exec_result": 0
  },
  {
    "idx": 51,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*) AS Num_Owned_Pets FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 52,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*) AS num_pets FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 53,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(PetID) FROM Pets AS p JOIN Has_Pet AS hp ON p.PetID = hp.PetID JOIN Student AS s ON hp.StuID = s.StuID WHERE s.Sex = 'F' AND p.PetType = 'dog';",
    "exec_result": 0
  },
  {
    "idx": 54,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(PetID) AS Dog_Pets_Females FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE PetType = 'dog' AND Sex = 'F';",
    "exec_result": 0
  },
  {
    "idx": 55,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) AS NumberOfDistinctPetTypes FROM Pets;",
    "exec_result": 1
  },
  {
    "idx": 56,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) AS 'Number of Different Pet Types' FROM Pets;",
    "exec_result": 1
  },
  {
    "idx": 57,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT S.Fname FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog');",
    "exec_result": 1
  },
  {
    "idx": 58,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT S.Fname FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog');",
    "exec_result": 1
  },
  {
    "idx": 59,
    "db_id": "pets_1",
    "question": "",
    "gold": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT S.Fname FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'cat' AND P.PetType = 'dog';",
    "exec_result": 1
  },
  {
    "idx": 60,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT S.Fname, S.LName FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType IN ('cat', 'dog');",
    "exec_result": 0
  },
  {
    "idx": 61,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT s.Major, s.Age FROM Student s LEFT JOIN Has_Pet hp ON s.StuID = hp.StuID WHERE hp.PetID NOT IN (SELECT PetID FROM Pets WHERE PetType = 'cat')",
    "exec_result": 0
  },
  {
    "idx": 62,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT s.Major, s.Age FROM Student s LEFT JOIN Has_Pet hp ON s.StuID = hp.StuID WHERE hp.PetID IS NULL AND s.Sex = 'F' -- Filter for female students without cats",
    "exec_result": 0
  },
  {
    "idx": 63,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT StuID FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' )",
    "exec_result": 1
  },
  {
    "idx": 64,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT StuID FROM Student WHERE StuID NOT IN (     SELECT StuID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE Pets.PetType = 'cat' );",
    "exec_result": 1
  },
  {
    "idx": 65,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT Stu.Fname, Stu.Age FROM Student Stu JOIN Has_Pet HP ON Stu.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'dog' AND P.PetID NOT IN (     SELECT PetID     FROM Has_Pet     JOIN Pets ON Has_Pet.PetID = Pets.PetID     WHERE PetType = 'cat' )",
    "exec_result": 0
  },
  {
    "idx": 66,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'dog' AND P.PetID NOT IN (     SELECT PetID     FROM Has_Pet     WHERE PetID IN (         SELECT PetID         FROM Pets         WHERE PetType = 'cat'     ) );",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT PetType, weight FROM Pets WHERE PetID IN (     SELECT PetID     FROM Has_Pet     WHERE StuID = (         SELECT MIN(StuID)         FROM Student     ) ) ORDER BY pet_age LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 68,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT Pets.PetType, Pets.weight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age = (SELECT MIN(Age) FROM Student)",
    "exec_result": 0
  },
  {
    "idx": 69,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT p.PetID, p.weight FROM Pets p JOIN Has_Pet hp ON p.PetID = hp.PetID JOIN Student s ON hp.StuID = s.StuID WHERE p.pet_age > 1;",
    "exec_result": 1
  },
  {
    "idx": 70,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT p.PetID, p.weight FROM Pets p JOIN Has_Pet h ON p.PetID = h.PetID JOIN Student s ON h.StuID = s.StuID WHERE p.pet_age > 1;",
    "exec_result": 1
  },
  {
    "idx": 71,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaximumAge FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 72,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaximumAge FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 73,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(weight) AS AverageWeight FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 74,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(weight) AS AverageWeight FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 75,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT Stu.Fname, Stu.Age FROM Student Stu INNER JOIN Has_Pet HP ON Stu.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID;",
    "exec_result": 1
  },
  {
    "idx": 76,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT DISTINCT S.Fname, S.Age FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID;",
    "exec_result": 1
  },
  {
    "idx": 77,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT DISTINCT p.PetID FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.LName = 'Smith';",
    "exec_result": 1
  },
  {
    "idx": 78,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT DISTINCT PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith';",
    "exec_result": 1
  },
  {
    "idx": 79,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "pred": "SELECT StuID, COUNT(*) AS Num_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY StuID;",
    "exec_result": 0
  },
  {
    "idx": 80,
    "db_id": "pets_1",
    "question": "",
    "gold": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "pred": "SELECT StuID, COUNT(*) AS Num_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY StuID;",
    "exec_result": 0
  },
  {
    "idx": 81,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT Stu.Fname, Stu.Sex FROM Student Stu JOIN Has_Pet HP ON Stu.StuID = HP.StuID GROUP BY Stu.Fname, Stu.Sex HAVING COUNT(DISTINCT HP.PetID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 82,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT S.Fname, S.Sex FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID GROUP BY S.StuID, S.Fname, S.Sex HAVING COUNT(HP.PetID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT DISTINCT S.LName FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.pet_age = 3 AND P.PetType = 'cat';",
    "exec_result": 1
  },
  {
    "idx": 84,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT DISTINCT S.LName FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.pet_age = 3 AND P.PetType = 'cat';",
    "exec_result": 1
  },
  {
    "idx": 85,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(Student.Age) AS Average_AgeWITHOUTPets FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.PetID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 86,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(Age) AS Average_Age_No_Pets FROM Student WHERE NOT EXISTS (     SELECT 1     FROM Has_Pet     WHERE Student.StuID = Student.StuID );",
    "exec_result": 0
  },
  {
    "idx": 87,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(*) AS ContinentCount FROM continents;",
    "exec_result": 1
  },
  {
    "idx": 88,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(*) AS \"Number of Continents\" FROM continents;",
    "exec_result": 1
  },
  {
    "idx": 89,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS CountryCount FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;",
    "exec_result": 1
  },
  {
    "idx": 90,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT c.ContId, c.Continent, COUNT(c.CountryId) AS CountryCount FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.ContId, c.Continent;",
    "exec_result": 0
  },
  {
    "idx": 91,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT COUNT(*) AS \"Number of Countries\" FROM countries;",
    "exec_result": 1
  },
  {
    "idx": 92,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT COUNT(*) AS CountryCount FROM countries;",
    "exec_result": 1
  },
  {
    "idx": 93,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT c.Maker.FullName, c.Id, COUNT(m.Model) AS ModelsProduced FROM car_makers c JOIN model_list m ON c.Id = m.Maker GROUP BY c.Id, c.FullName;",
    "exec_result": 0
  },
  {
    "idx": 94,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT c.FullName, c.Id, COUNT(m.Model) AS ModelCount FROM car_makers c JOIN model_list m ON c.Id = m.Maker GROUP BY c.Id, c.FullName;",
    "exec_result": 1
  },
  {
    "idx": 95,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.Id = cars_data.MakeId MINIMIZE horsepower GROUP BY model_list.Model;",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT model_list.Model FROM car_names JOIN model_list ON car_names.Make = model_list.Id JOIN cars_data ON car_names.Model = cars_data.MakeId WHERE cars_data.Horsepower = (     SELECT MIN(Horsepower)     FROM cars_data )",
    "exec_result": 0
  },
  {
    "idx": 97,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT m.Model FROM model_list m JOIN cars_data cd ON m.Model = cd.Model WHERE cd.Weight < (SELECT AVG(Weight) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT m.Model FROM model_list m JOIN cars_data cd ON m.Model = cd.Make WHERE cd.Weight < (     SELECT AVG(Weight)     FROM cars_data )",
    "exec_result": 0
  },
  {
    "idx": 99,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT car_makers.Maker FROM car_makers INNER JOIN car_names ON car_makers.Id = car_names.MakeId INNER JOIN cars_data ON car_names.Model = cars_data.Make AND cars_data.Year = 1970",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT DISTINCT car_makers.Maker FROM car_makers INNER JOIN cars_data ON car_makers.Id = cars_data.MakeId WHERE cars_data.Year = 1970;",
    "exec_result": 0
  },
  {
    "idx": 101,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT c.Maker, c.Year FROM car_names AS cn JOIN cars_data AS cd ON cn.Model = cd.MakeId JOIN car_makers AS cm ON cn.Maker = cm.Id JOIN continents AS cont ON cm.Country = countries.CountryId WHERE cont.Continent = (     SELECT MIN(ContId)     FROM continents )",
    "exec_result": 0
  },
  {
    "idx": 102,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT car_makers.Maker, cars_data.Year FROM car_makers JOIN cars_data ON car_makers.Id = cars_data.MakeId JOIN model_list ON cars_data.Model = model_list.Model WHERE cars_data.Year = (     SELECT MIN(Year)     FROM cars_data )",
    "exec_result": 0
  },
  {
    "idx": 103,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT Model FROM car_names JOIN cars_data ON car_names.Model = cars_data.MakeId WHERE cars_data.Year > 1980;",
    "exec_result": 0
  },
  {
    "idx": 104,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT m.Model FROM car_names AS m JOIN cars_data AS cd ON m.Model = cd.Make WHERE cd.Year > 1980;",
    "exec_result": 0
  },
  {
    "idx": 105,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT continents.Continent, COUNT(car_makers.Id) AS MakerCount FROM continents JOIN car_makers ON continents.Continent = car_makers.Country GROUP BY continents.Continent;",
    "exec_result": 0
  },
  {
    "idx": 106,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT continents.Continent, COUNT(car_makers.Id) AS CarMakersCount FROM continents LEFT JOIN car_makers ON continents.Continent = car_makers.Country GROUP BY continents.Continent;",
    "exec_result": 0
  },
  {
    "idx": 107,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 108,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 109,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "pred": "SELECT c.Fullname, COUNT(m.Model) AS ModelCount FROM car_makers c JOIN model_list m ON c.Id = m.Maker GROUP BY c.Id, c.FullName;",
    "exec_result": 1
  },
  {
    "idx": 110,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "pred": "SELECT Maker.Id, Maker.FullName, COUNT(Model.Model) AS ModelsProduced FROM car_makers Maker JOIN model_list Model ON Maker.Id = Model.Maker GROUP BY Maker.Id, Maker.FullName;",
    "exec_result": 1
  },
  {
    "idx": 111,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'AMC Hornet Sportabout' AND model_list.Model = 'SW';",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT Accelerate FROM cars_data WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'amc' AND Model = 'hornet sportabout (sw)');",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(*) AS \"Number of Car Makers in France\" FROM car_makers WHERE Country = 'france';",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(DISTINCT car_makers.Country) AS \"Number of Car Makers in France\" FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(Model) AS 'Number of Models' FROM model_list JOIN cars_data ON model_list.Model = cars_data.MakeId JOIN countries AS usa ON cars_data.Country = usa.CountryId WHERE usa.CountryName = 'USA';",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(Model) AS 'Number of Car Models' FROM car_names JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';",
    "exec_result": 0
  },
  {
    "idx": 117,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(MPG) AS avg_mpgs FROM cars_data WHERE Cylinders = 4;",
    "exec_result": 1
  },
  {
    "idx": 118,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(MPG) AS avg_MPGs FROM cars_data WHERE Cylinders = 4;",
    "exec_result": 1
  },
  {
    "idx": 119,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT MIN(`Weight`) AS smallest_weight FROM `cars_data` WHERE `Cylinders` = 8 AND YEAR(`Year`) = 1974 AND `MakeId` IN (     SELECT `ModelId`     FROM `model_list`     WHERE `MakerId` IN (         SELECT `Id`         FROM `car_makers`         WHERE `Country` = (             SELECT `CountryId`             FROM `countries`             WHERE `Continent` = (                 SELECT `ContId`                 FROM `continents`                 WHERE `Continent` = (                     SELECT `Continent`                     FROM `countries`                     WHERE `CountryName` = 'america'                 )             )         )     ) );",
    "exec_result": 0
  },
  {
    "idx": 120,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT MIN(`Weight`) AS Minimum_Weight FROM `cars_data` WHERE `Cylinders` = 8 AND `Year` = 1974;",
    "exec_result": 1
  },
  {
    "idx": 121,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",
    "exec_result": 0
  },
  {
    "idx": 122,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",
    "exec_result": 0
  },
  {
    "idx": 123,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName, countries.CountryId HAVING COUNT(car_makers.Id) > 0;",
    "exec_result": 1
  },
  {
    "idx": 124,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT c.CountryName, c.CountryId FROM countries c INNER JOIN car_makers cm ON c.CountryId = cm.Country",
    "exec_result": 0
  },
  {
    "idx": 125,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) AS 'Number_of_Cars' FROM cars_data WHERE Horsepower > 150;",
    "exec_result": 1
  },
  {
    "idx": 126,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) AS 'Number of Cars' FROM cars_data WHERE Horsepower > 150;",
    "exec_result": 1
  },
  {
    "idx": 127,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data GROUP BY Year;",
    "exec_result": 1
  },
  {
    "idx": 128,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT Year, AVG(Weight), AVG(Year) FROM (   SELECT YEAR(CarsData.Year) AS Year, Weight, CarsData.Year   FROM cars_data ) AS yearly_data GROUP BY Year;",
    "exec_result": 0
  },
  {
    "idx": 129,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 3 AND countries.Continent = 2; -- Assuming 'europe' has ContinentId 2",
    "exec_result": 1
  },
  {
    "idx": 130,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.CountryId GROUP BY c.CountryId, c.CountryName HAVING COUNT(cm.Id) >= 3 AND c.Continent = 2;",
    "exec_result": 0
  },
  {
    "idx": 131,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT MAX(Horsepower), Maker FROM cars_data JOIN model_list ON cars_data.Model = model_list.Model WHERE Cylinders = 3;",
    "exec_result": 0
  },
  {
    "idx": 132,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT MAX(Horsepower) AS Max_Horsepower, Maker FROM cars_data JOIN model_list ON cars_data.Model = model_list.Model WHERE Cylinders = 3;",
    "exec_result": 0
  },
  {
    "idx": 133,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "pred": "SELECT model_list.Model, MAX(car_names.MPG) AS max_MPG FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY max_MPG DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 134,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "pred": "SELECT ModelList.Model FROM ModelList JOIN CarsData ON ModelList.Model = CarsData.MakeId ORDER BY CarsData.MPG DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 135,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "pred": "SELECT AVG(Horsepower) AS Average_Horsepower_Before_1980 FROM cars_data WHERE Year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 136,
    "db_id": "car_1",
    "question": "",
    "gold": "select avg(horsepower) from cars_data where year  <  1980;",
    "pred": "SELECT AVG(Horsepower) AS avg_horsepower FROM cars_data WHERE Year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 137,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(car_names.Edispl) AS average_edispl FROM car_names JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE car_makers MAKER = 'volvo';",
    "exec_result": 0
  },
  {
    "idx": 138,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(edispl) AS avg_edispl FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'Volvo';",
    "exec_result": 0
  },
  {
    "idx": 139,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT Cylinders, MAX(Accelerate) AS MaxAccelerate FROM cars_data GROUP BY Cylinders;",
    "exec_result": 1
  },
  {
    "idx": 140,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT MAX(accelerate) AS max_accelerate_per_cylinder FROM cars_data GROUP BY Cylinders;",
    "exec_result": 0
  },
  {
    "idx": 141,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT model_list.Model, COUNT(*) AS version_count FROM model_list GROUP BY model_list.Model ORDER BY version_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 142,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT m.Model, COUNT(DISTINCT ml.ModelId) AS VersionCount FROM model_list ml JOIN car_names cn ON ml.Model = cn.Model GROUP BY m.Model ORDER BY VersionCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 143,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) AS cars_with_more_than_4_cylinders FROM cars_data WHERE Cylinders > 4;",
    "exec_result": 1
  },
  {
    "idx": 144,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) AS num_cars_with_more_than_4_cylinders FROM cars_data WHERE Cylinders > 4;",
    "exec_result": 1
  },
  {
    "idx": 145,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*) AS \"Number of Cars Produced in 1980\" FROM cars_data WHERE YEAR = 1980;",
    "exec_result": 1
  },
  {
    "idx": 146,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*) AS \"Number_of_Cars_Made_In_1980\" FROM \"cars_data\" WHERE YEAR(\"Year\") = 1980;",
    "exec_result": 0
  },
  {
    "idx": 147,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(Model) AS 'Number of Models' FROM model_list AS m JOIN car_makers AS cm ON m.Maker = cm.Id JOIN car_names AS cn ON m.Model = cn.Make WHERE cm.FullName = 'American Motor Company';",
    "exec_result": 0
  },
  {
    "idx": 148,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(Model) AS 'Number of Models' FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.MakeId WHERE car_makers.FullName = 'American Motor Company';",
    "exec_result": 0
  },
  {
    "idx": 149,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT cm.FullName, cm.Id FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.Id, cm.FullName HAVING COUNT(ml.Model) > 3;",
    "exec_result": 1
  },
  {
    "idx": 150,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT c.Maker, c.Id FROM car_makers c JOIN model_list m ON c.Id = m.Maker GROUP BY c.Id, c.Maker HAVING COUNT(m.Model) > 3;",
    "exec_result": 0
  },
  {
    "idx": 151,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON car_makers.Id = cars_data.MakeId WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT m.Model FROM car_makers c JOIN model_list m ON c.Id = m.Maker JOIN cars_data cd ON m.Model = cd.Make WHERE c.Maker = 'General Motors' OR cd.Weight > 3500;",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT YEAR(cars_data.Year) FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Weight BETWEEN 3000 AND 4000;",
    "exec_result": 0
  },
  {
    "idx": 154,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Weight > 3000;",
    "exec_result": 1
  },
  {
    "idx": 155,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT MAX(cars_data.Horsepower) AS Max_Horsepower FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId WHERE cars_data.Accelerate = (     SELECT MAX(Accelerate)     FROM cars_data )",
    "exec_result": 0
  },
  {
    "idx": 156,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT Horsepower FROM cars_data WHERE Accelerate = (     SELECT MAX(Accelerate)     FROM cars_data )",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT COUNT(cylinders) AS 'Number of Cylinders' FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.Id JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers cm ON model_list.Maker = cm.Id JOIN countries c ON cm.Country = countries.CountryId WHERE car_names.Model = 'volvo' AND cars_data.accelerate = (     SELECT MIN(accelerate)     FROM cars_data     WHERE MakeId = car_names.Id )",
    "exec_result": 0
  },
  {
    "idx": 158,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT COUNT(*) AS LeastAccelCylinders FROM (     SELECT m.Cylinders, c.Model     FROM model_list m     JOIN cars_data c ON m.Model = c.Model     WHERE m.Maker = 'volvo'     ORDER BY c.Accelerate ASC     LIMIT 1 ) AS min_accelerate_version",
    "exec_result": 0
  },
  {
    "idx": 159,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) AS \"Cars With Larger Accelerate\" FROM cars_data WHERE Accelerate > (     SELECT MAX(Accelerate)     FROM cars_data )",
    "exec_result": 0
  },
  {
    "idx": 160,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) AS 'Number of Cars with Greater Accelerate' FROM cars_data WHERE Accelerate > (     SELECT MAX(Horsepower) FROM cars_data )",
    "exec_result": 0
  },
  {
    "idx": 161,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(*) AS num_countries_with_many_makers FROM countries c JOIN car_makers cm ON c.CountryId = cm.CountryId GROUP BY c.CountryId HAVING COUNT(cm.Id) > 2;",
    "exec_result": 0
  },
  {
    "idx": 162,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(DISTINCT countries.CountryId) AS 'CountriesWithMultipleMakers' FROM countries JOIN car_makers ON countries.CountryId = car_makers.CountryId GROUP BY countries.CountryId HAVING COUNT(car_makers.Id) > 2;",
    "exec_result": 0
  },
  {
    "idx": 163,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) AS cars_with_more_than_6_cylinders FROM cars_data WHERE Cylinders > 6;",
    "exec_result": 1
  },
  {
    "idx": 164,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) AS 'Number of Cars with Over 6 Cylinders' FROM `cars_data` WHERE `Cylinders` > 6;",
    "exec_result": 1
  },
  {
    "idx": 165,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT ml.Model, MAX(hp.Horsepower) AS MaxHorsepower FROM model_list ml JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.MakeId WHERE cd.Cylinders = 4 GROUP BY ml.Model ORDER BY MaxHorsepower DESC;",
    "exec_result": 0
  },
  {
    "idx": 166,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT ml.Model, MAX(hp.Horsepower) AS Max_Horsepower FROM model_list ml JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.MakeId JOIN car_makers cm ON ml.Id = cm.Id JOIN car_names hp ON cd.Model = hp.Model AND cd.Cylinders = 4 GROUP BY ml.Model ORDER BY Max_Horsepower DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 167,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "pred": "WITH hp_lowest AS (   SELECT MIN(Horsepower) AS min_horsepower   FROM cars_data ), cars_with_high_horsepower AS (   SELECT CarNames.MakeId, CarNames.Model, CarMakers.Maker   FROM cars_data   JOIN car_names ON cars_data.Id = car_names.MakeId   WHERE Horsepower > (SELECT min_horsepower FROM hp_lowest) ), cars_with_three_cylinders_or_less AS (   SELECT CarNames.MakeId, CarNames.Model, CarMakers.Maker   FROM cars_data   JOIN car_names ON cars_data.Id = car_names.MakeId   JOIN model_list ON car_names.Model = model_list.Model   JOIN car_makers ON model_list.Maker = car_makers.Id   WHERE Cylinders <= 3 ) SELECT DISTINCT cars_with_high_horsepower.MakeId, CarMakers.FullName FROM cars_with_high_horsepower JOIN cars_with_three_cylinders_or_less ON cars_with_high_horsepower.MakeId = cars_with_three_cylinders_or_less.MakeId;",
    "exec_result": 0
  },
  {
    "idx": 168,
    "db_id": "car_1",
    "question": "",
    "gold": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "pred": "SELECT c.Id AS MakeId, c.Model AS MakerName FROM car_names AS cn JOIN car_makers AS cm ON cn.Make = cm.Id JOIN model_list AS ml ON cn.Model = ml.Model WHERE ml.Cylinders < 4 AND cn.Horsepower < (     SELECT MIN(Horsepower) FROM cars_data     WHERE Model IN (         SELECT Model FROM model_list WHERE Maker = cm.Id     ) )",
    "exec_result": 0
  },
  {
    "idx": 169,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT MAX(MPG) AS max_mpg FROM cars_data WHERE Cylinders = 8 AND Year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 170,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT MAX(cars_data.MPG) AS max_mpgh FROM cars_data JOIN car_names ON cars_data.MakeId = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE car_names.Cylinders = 8 OR cars_data.Year < 1980;",
    "exec_result": 0
  },
  {
    "idx": 171,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT ml.Model FROM model_list ml JOIN cars_data cd ON ml.Model = cd.Make WHERE ml.Maker != 'Ford Motor Company' AND cd.Weight < 3500;",
    "exec_result": 0
  },
  {
    "idx": 172,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT DISTINCT m.Model FROM model_list m JOIN cars_data cd ON m.Model = cd.Model JOIN car_makers cm ON m.Id = cm.Id WHERE cm.Maker != 'ford' AND cd.Weight < 3500;",
    "exec_result": 0
  },
  {
    "idx": 173,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT c.CountryName FROM countries c LEFT JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryId, c.CountryName HAVING COUNT(cm.Id) = 0;",
    "exec_result": 1
  },
  {
    "idx": 174,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT c.CountryName FROM countries c LEFT JOIN car_makers cm ON c.CountryId = cm.CountryId WHERE cm.CountryId IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 175,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "pred": "WITH makers_with_models AS (   SELECT maker.Id, Maker   FROM car_makers maker   JOIN model_list models ON maker.Id = models.Maker   GROUP BY maker.Id, Maker   HAVING COUNT(models.Model) >= 2 ), makers_count AS (   SELECT maker.Id, Maker, COUNT(*) as model_count   FROM makers_with_models   GROUP BY maker.Id, Maker   HAVING COUNT(*) > 3 ) SELECT makers_count.Id, makers_count.Maker FROM makers_count;",
    "exec_result": 0
  },
  {
    "idx": 176,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT c.Id, c.Maker FROM car_makers c JOIN model_list m ON c.Id = m.Maker JOIN cars_data cd ON m.Model = cd.Make GROUP BY c.Id, c.Maker HAVING COUNT(m.Model) >= 2 AND COUNT(cd.Id) > 3;",
    "exec_result": 0
  },
  {
    "idx": 177,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "pred": "SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryId, c.CountryName HAVING COUNT(cm.Id) > 3 OR cm.Maker = 'fiat';",
    "exec_result": 1
  },
  {
    "idx": 178,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "pred": "SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.CountryId JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model WHERE cm.Id IN (     SELECT Maker     FROM car_makers     GROUP BY Maker     HAVING COUNT(*) > 3 ) OR cn.Make = 'fiat'",
    "exec_result": 0
  },
  {
    "idx": 179,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';",
    "exec_result": 1
  },
  {
    "idx": 180,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Country FROM airlines WHERE Abbreviation = 'Jetblue';",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';",
    "exec_result": 1
  },
  {
    "idx": 182,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Abbreviation FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE Airline = 'Jetblue Airways';",
    "exec_result": 0
  },
  {
    "idx": 183,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 184,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 185,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'Anthony';",
    "exec_result": 1
  },
  {
    "idx": 186,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'Anthony';",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT COUNT(*) AS \"Number of Airlines\" FROM airlines;",
    "exec_result": 1
  },
  {
    "idx": 188,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT COUNT(Airline) AS TotalAirlines FROM airlines;",
    "exec_result": 1
  },
  {
    "idx": 189,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(*) AS AirportCount FROM airports;",
    "exec_result": 1
  },
  {
    "idx": 190,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(*) AS AirportCount FROM airports;",
    "exec_result": 1
  },
  {
    "idx": 191,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) AS TotalFlights FROM flights;",
    "exec_result": 1
  },
  {
    "idx": 192,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) AS flight_count FROM flights;",
    "exec_result": 1
  },
  {
    "idx": 193,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT * FROM airlines WHERE Abbreviation = 'UAL';",
    "exec_result": 0
  },
  {
    "idx": 194,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT * FROM airlines WHERE Abbreviation = 'UAL';",
    "exec_result": 0
  },
  {
    "idx": 195,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) AS num_airlines_from_usa FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 196,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) AS 'Number of Airlines in USA' FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 197,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT airports.City, airports.Country FROM airports WHERE AirportCode = 'ALTON';",
    "exec_result": 1
  },
  {
    "idx": 198,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT airports.City, airports.Country FROM airports WHERE AirportCode = 'ALTON';",
    "exec_result": 1
  },
  {
    "idx": 199,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO';",
    "exec_result": 1
  },
  {
    "idx": 200,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO';",
    "exec_result": 1
  },
  {
    "idx": 201,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 202,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(*) AS DepartingFlights FROM flights WHERE SourceAirport = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 204,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(*) AS flight_count FROM flights WHERE SourceAirport = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 205,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*) AS num_flights_to_ATO FROM flights WHERE DestAirport = 'ATO';",
    "exec_result": 1
  },
  {
    "idx": 206,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*) AS flight_count FROM flights WHERE DestAirport = 'ATO';",
    "exec_result": 1
  },
  {
    "idx": 207,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS 'Flights Departing from Aberdeen' FROM flights WHERE SourceAirport = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 208,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS \"Number of Flights Departing from Aberdeen\" FROM flights WHERE SourceAirport = 'ABE';",
    "exec_result": 1
  },
  {
    "idx": 209,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) as num_flights_arriving FROM flights WHERE DestAirport = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 210,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS num_flights_arriving FROM flights WHERE DestAirport = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 211,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS num_flights FROM flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Ashley';",
    "exec_result": 1
  },
  {
    "idx": 212,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS flight_count FROM flights WHERE SourceAirport = 'Aberdeen' AND DestAirport = 'Ashley';",
    "exec_result": 1
  },
  {
    "idx": 213,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) AS flight_count FROM flights WHERE Airline = 'JetBlue Airways';",
    "exec_result": 0
  },
  {
    "idx": 214,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) AS JetblueFlights FROM flights WHERE Airline = 'Jetblue Airlines';",
    "exec_result": 0
  },
  {
    "idx": 215,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*)  FROM flights  WHERE Airline = 1 AND DestAirport = 'ASY';",
    "exec_result": 1
  },
  {
    "idx": 216,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*)  FROM flights  WHERE Airline = 1 -- Assuming United Airlines has uid 1 AND DestAirport = 'ASY';",
    "exec_result": 0
  },
  {
    "idx": 217,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*) AS United_Airlines_flights_from_AHD FROM flights WHERE Airline = 1 AND SourceAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 218,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*) AS United_Airlines_AHD_Flights FROM flights WHERE Airline = 1 -- United Airlines (uid 1) AND SourceAirport = 'AHD';",
    "exec_result": 0
  },
  {
    "idx": 219,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*) AS num_flights FROM flights WHERE Airline = 1 AND SourceAirport = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 220,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*) AS United_Airlines_Arrivals_in_Aberdeen FROM flights WHERE Airline = 1 -- United Airlines (uid is 1) AND DestAirport = 'Aberdeen';",
    "exec_result": 0
  },
  {
    "idx": 221,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT airports.City, COUNT(*) AS ArrivingFlights FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY ArrivingFlights DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 222,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT airports.City, COUNT(*) AS frequency FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY airports.City ORDER BY frequency DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 223,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT airports.City, COUNT(*) AS num_flights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY num_flights DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 224,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT airports.City AS MostFrequentSource FROM airports WHERE airports.AirportCode IN (     SELECT SourceAirport     FROM flights     GROUP BY SourceAirport     ORDER BY COUNT(*) DESC     LIMIT 1 );",
    "exec_result": 1
  },
  {
    "idx": 225,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY COUNT(flights.FlightNo) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 226,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT airports.AirportCode FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY COUNT(flights.FlightNo) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 227,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT AirportCode FROM airports MINIMIZE COUNT(*) AS flight_count GROUP BY AirportCode;",
    "exec_result": 0
  },
  {
    "idx": 228,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT AirportCode FROM airports MINCOUNT(CASE WHEN flights.Airline IN (SELECT Airline FROM flights) THEN 1 END) AS flight_count GROUP BY AirportCode LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 229,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Airline, COUNT(*) AS TotalFlights FROM flights GROUP BY Airline ORDER BY TotalFlights DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Airline, COUNT(*) AS TotalFlights FROM flights GROUP BY Airline ORDER BY TotalFlights DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 231,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT A.Abbreviation, A.Country FROM airlines AS A JOIN flights AS F ON A.uid = F.Airline GROUP BY A.uid ORDER BY COUNT(F.FlightNo) MIN LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT Abbreviation, Country FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY Abbreviation, Country ORDER BY COUNT(*) MIN LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 233,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT A.Airline FROM airlines A JOIN flights F ON A.uid = F.Airline WHERE F.SourceAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 234,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT Airline FROM flights WHERE SourceAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 235,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT A.Airline FROM airlines A INNER JOIN flights F ON A.uid = F.Airline WHERE F.DestAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 236,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT Airline FROM flights WHERE DestAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'APG' AND flights.DestAirport = 'CVO';",
    "exec_result": 1
  },
  {
    "idx": 238,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT A.Airline FROM airlines AS A JOIN flights AS F ON A.uid = F.Airline WHERE F.SourceAirport = 'APG' AND F.DestAirport = 'CVO';",
    "exec_result": 1
  },
  {
    "idx": 239,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'CVO' AND flights.DestAirport NOT IN ('APG')",
    "exec_result": 1
  },
  {
    "idx": 240,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT Airline FROM flights WHERE SourceAirport = 'CVO' AND DestAirport NOT IN ('APG') AND Airline IN (     SELECT Airline     FROM airports     WHERE AirportCode = 'APG' );",
    "exec_result": 1
  },
  {
    "idx": 241,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT Airlines.Airline FROM airlines AS Airlines JOIN flights AS Flights ON Airlines.uid = Flights.Airline GROUP BY Airlines.Airline HAVING COUNT(Flights.FlightNo) >= 10;",
    "exec_result": 1
  },
  {
    "idx": 242,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.uid HAVING COUNT(flights.FlightNo) >= 10;",
    "exec_result": 0
  },
  {
    "idx": 243,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT airlines.Airline FROM airlines LEFT JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Airline HAVING COUNT(flights.FlightNo) < 200;",
    "exec_result": 1
  },
  {
    "idx": 244,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT Airline FROM airlines AS a JOIN flights AS f ON a.uid = f.Airline GROUP BY a.uid HAVING COUNT(f.FlightNo) < 200;",
    "exec_result": 0
  },
  {
    "idx": 245,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';",
    "exec_result": 0
  },
  {
    "idx": 246,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT FlightNo FROM flights WHERE Airline = 1;",
    "exec_result": 1
  },
  {
    "idx": 247,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 248,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f INNER JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.City = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 249,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode OR f.DestAirport = a.AirportCode WHERE a.AirportName = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 250,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.AirportName = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 251,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT f.FlightNo FROM flights f WHERE f.SourceAirport = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 252,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 253,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT FlightNo FROM flights WHERE DestAirport = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 254,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT FlightNo FROM flights WHERE DestAirport = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 255,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) AS TotalFlights FROM flights WHERE SourceAirport IN ('Aberdeen', 'Abilene')",
    "exec_result": 1
  },
  {
    "idx": 256,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) as TotalFlights FROM flights WHERE SourceAirport IN ('Aberdeen', 'Abilene');",
    "exec_result": 1
  },
  {
    "idx": 257,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT airports.AirportName FROM airports LEFT JOIN flights ON airports.AirportCode = flights.SourceAirport LEFT JOIN flights AS dest_flights ON airports.AirportCode = dest_flights.DestAirport WHERE flights.SourceAirport IS NULL OR dest_flights.DestAirport IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 258,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT airports.City, AirportCode, AirportName, Country, CountryAbbreviation FROM airports WHERE NOT EXISTS (     SELECT 1     FROM flights     WHERE flights.SourceAirport = airports.AirportCode OR flights.DestAirport = airports.AirportCode ) AND flights.Airline IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 259,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) AS EmployeeCount FROM employee;",
    "exec_result": 1
  },
  {
    "idx": 260,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) AS \"Total_Employees\" FROM employee;",
    "exec_result": 1
  },
  {
    "idx": 261,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT Name, Age FROM employee ORDER BY Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 262,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT Name FROM employee ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 263,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT City, COUNT(Employee_ID) AS NumEmployees FROM employee GROUP BY City;",
    "exec_result": 1
  },
  {
    "idx": 264,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT City, COUNT(Employee_ID) AS EmployeeCount FROM employee GROUP BY City;",
    "exec_result": 1
  },
  {
    "idx": 265,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1;",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1;",
    "exec_result": 1
  },
  {
    "idx": 267,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT Location, COUNT(Shop_ID) AS Number_of_Shops FROM shop GROUP BY Location;",
    "exec_result": 1
  },
  {
    "idx": 268,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT Location, COUNT(Shop_ID) AS Number_of_Shops FROM shop GROUP BY Location;",
    "exec_result": 1
  },
  {
    "idx": 269,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT s.Name AS Manager_Name, s.District FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID JOIN employee e ON h.Employee_ID = e.Employee_ID WHERE s.Number_products = (SELECT MAX(Number_products) FROM shop)",
    "exec_result": 0
  },
  {
    "idx": 270,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT s.Name AS Shop_Name, s.District AS Shop_District FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID JOIN employee e ON h.Employee_ID = e.Employee_ID GROUP BY s.Shop_ID, s.District ORDER BY SUM(h.Number_products) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 271,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(`Number_products`) AS Minimum_products, MAX(`Number_products`) AS Maximum_products FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 272,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(`Number_products`) AS MinProducts, MAX(`Number_products`) AS MaxProducts FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 273,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT s.Name, s.Location, s.District FROM shop s ORDER BY s.Number_products DESC;",
    "exec_result": 1
  },
  {
    "idx": 274,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT s.Name, s.Location, s.District FROM shop s ORDER BY s.Number_products DESC;",
    "exec_result": 1
  },
  {
    "idx": 275,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "WITH avg_products AS (   SELECT AVG(`Number_products`) AS avg_products   FROM shop ) SELECT s.Name FROM shop s JOIN avg_products ap ON s.`Number_products` > ap.avg_products;",
    "exec_result": 1
  },
  {
    "idx": 276,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT s.Name AS Shop_Name, s.Number_products FROM shop s JOIN (     SELECT AVG(Number_products) AS Average_Products     FROM shop ) AS avg_shop ON s.Number_products > avg_shop.Average_Products;",
    "exec_result": 0
  },
  {
    "idx": 277,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT e.Name FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID GROUP BY e.Employee_ID, e.Name HAVING COUNT(*) = (SELECT MAX(count) FROM (     SELECT Employee_ID, COUNT(*) AS count     FROM evaluation     GROUP BY Employee_ID ) AS max_counts)",
    "exec_result": 1
  },
  {
    "idx": 278,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT e.Name FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID GROUP BY e.Employee_ID, e.Name HAVING COUNT(*) = (     SELECT MAX(awards_count)     FROM (         SELECT COUNT(*) AS awards_count         FROM evaluation         GROUP BY Employee_ID     ) as max_awards_per_employee );",
    "exec_result": 1
  },
  {
    "idx": 279,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT e.Name FROM employee e INNER JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Bonus = (     SELECT MAX(Bonus)     FROM evaluation )",
    "exec_result": 1
  },
  {
    "idx": 280,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT e.Name FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Bonus = (SELECT MAX(Bonus) FROM evaluation)",
    "exec_result": 1
  },
  {
    "idx": 281,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT e.Name FROM employee e LEFT JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Year_awarded IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT e.Name FROM employee e LEFT JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Employee_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 283,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID, s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 284,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.Name AS Shop_Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID JOIN employee e ON h.Employee_ID = e.Employee_ID GROUP BY s.Shop_ID, s.Name ORDER BY COUNT(e.Employee_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 285,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT s.Name FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Shop_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 286,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT s.Name FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID LEFT JOIN employee e ON h.Employee_ID = e.Employee_ID WHERE h.Shop_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 287,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT shop.Name, COUNT(hiring.Employee_ID) AS num_hired FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Shop_ID;",
    "exec_result": 1
  },
  {
    "idx": 288,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT s.Name AS Shop_Name, COUNT(e.Employee_ID) AS Employee_Count FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID LEFT JOIN employee e ON h.Employee_ID = e.Employee_ID GROUP BY s.Shop_ID, s.Name;",
    "exec_result": 0
  },
  {
    "idx": 289,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(Bonus) AS Total_Bonus FROM evaluation;",
    "exec_result": 1
  },
  {
    "idx": 290,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(Bonus) AS Total_Bonus FROM evaluation;",
    "exec_result": 1
  },
  {
    "idx": 291,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT * FROM hiring;",
    "exec_result": 1
  },
  {
    "idx": 292,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT * FROM hiring;",
    "exec_result": 1
  },
  {
    "idx": 293,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT h.District FROM hiring h JOIN shop s ON h.Shop_ID = s.Shop_ID WHERE s.Number_products < 3000 AND s.Number_products > 10000;",
    "exec_result": 0
  },
  {
    "idx": 294,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT DISTINCT District FROM shop AS s1 JOIN hiring AS h1 ON s1.Shop_ID = h1.Shop_ID JOIN employee AS e1 ON h1.Employee_ID = e1.Employee_ID JOIN shop AS s2 ON s2.Shop_ID = h1.Shop_ID AND s2.Number_products > 10000 WHERE s1.Number_products < 3000;",
    "exec_result": 0
  },
  {
    "idx": 295,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT Location) AS StoreLocations FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 296,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT shop.Location) AS Unique_StoreLocations FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 297,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(*) AS Total_Documents FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 298,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(Document_ID) AS Document_Count FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 299,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT Document_ID, Document_Name, Document_Description FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 300,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT Document_ID, Document_Name, Document_Description FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 301,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT Document_Name, Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Document_Description LIKE '%w%';",
    "exec_result": 0
  },
  {
    "idx": 302,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT Document_Name, Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Document_Description LIKE '%w%'",
    "exec_result": 0
  },
  {
    "idx": 303,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT Documents.Document_ID, Templates.Template_ID, Documents.Document_Description FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';",
    "exec_result": 1
  },
  {
    "idx": 304,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT Document_ID, Template_ID, Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Document_Name = 'Robbin CV';",
    "exec_result": 0
  },
  {
    "idx": 305,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT Template_Type_Code) AS DifferentTemplates FROM Templates WHERE Template_ID IN (     SELECT Template_ID     FROM Documents     GROUP BY Template_ID     HAVING COUNT(*) = (SELECT COUNT(*) FROM Documents) );",
    "exec_result": 0
  },
  {
    "idx": 306,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT Template_ID) AS DifferentTemplatesUsed FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 307,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(*)  FROM Documents  WHERE Template_ID IN (     SELECT Template_ID      FROM Templates      WHERE Template_Type_Code = 'PPT' );",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(Documents.Template_ID) FROM Documents JOIN Ref_Template_Types AS T ON Documents.Template_Type_Code = T.Template_Type_Code WHERE T.Template_Type_Description = 'PPT';",
    "exec_result": 0
  },
  {
    "idx": 309,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Document_Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;",
    "exec_result": 1
  },
  {
    "idx": 310,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT T.Template_ID, COUNT(*) AS UsageCount FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;",
    "exec_result": 1
  },
  {
    "idx": 311,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T.Template_ID, R.Template_Type_Code FROM Templates T JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code GROUP BY T.Template_ID, R.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 312,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T.Template_ID, T.Template_Type_Code FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Template_Type_Code HAVING COUNT(D.Document_ID) = (     SELECT MAX(count)     FROM (         SELECT Template_ID, COUNT(Document_ID) AS count         FROM Documents         GROUP BY Template_ID     ) AS doc_counts     WHERE doc_counts.Template_ID IN (         SELECT Template_ID         FROM Templates     ) );",
    "exec_result": 0
  },
  {
    "idx": 313,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(Documents.Document_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 314,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(DISTINCT Documents.Document_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 315,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT T.Template_ID FROM Templates AS T LEFT JOIN Documents AS D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT Templates.Template_ID FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Template_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(Template_ID) AS Total_Templates FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 318,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(Template_ID) AS Template_Count FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 319,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 320,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 321,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT Template_Type_Code  FROM Templates  JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 322,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;",
    "exec_result": 0
  },
  {
    "idx": 323,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",
    "exec_result": 1
  },
  {
    "idx": 324,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT Templates.Template_ID FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT')",
    "exec_result": 1
  },
  {
    "idx": 325,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(Template_ID) AS Num_CVs FROM Templates WHERE Template_Type_Code = 'CV';",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(Templates.Template_ID) AS Template_Count FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'CV';",
    "exec_result": 1
  },
  {
    "idx": 327,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT T.Version_Number, RT.Template_Type_Code FROM Templates T JOIN Ref_Template_Types RT ON T.Template_Type_Code = RT.Template_Type_Code WHERE T.Version_Number > 5;",
    "exec_result": 1
  },
  {
    "idx": 328,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;",
    "exec_result": 1
  },
  {
    "idx": 329,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(Template_ID) AS Num_Templates FROM Templates GROUP BY Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 330,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(Template_ID) AS Template_Count FROM Templates GROUP BY Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 331,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code, COUNT(Template_ID) AS NumTemplates FROM Templates GROUP BY Template_Type_Code ORDER BY NumTemplates DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 332,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH TemplateCounts AS (   SELECT Template_Type_Code, COUNT(*) AS TemplateCount   FROM Templates   GROUP BY Template_Type_Code   ORDER BY TemplateCount DESC   LIMIT 1 ) SELECT TemplateCounts.Template_Type_Code FROM TemplateCounts;",
    "exec_result": 1
  },
  {
    "idx": 333,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code IN (     SELECT Template_Type_Code     FROM Templates     GROUP BY Template_Type_Code     HAVING COUNT(Template_ID) < 3 );",
    "exec_result": 1
  },
  {
    "idx": 334,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code IN (     SELECT Template_Type_Code     FROM Templates     GROUP BY Template_Type_Code     HAVING COUNT(Template_ID) < 3 );",
    "exec_result": 1
  },
  {
    "idx": 335,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT MIN(Version_Number), Template_Type_Code FROM Templates WHERE Version_Number = (     SELECT MIN(Version_Number)     FROM Templates ) AND Template_Type_Code IN (     SELECT Template_Type_Code     FROM Ref_Template_Types )",
    "exec_result": 1
  },
  {
    "idx": 336,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT min(Template-Version_Number), Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Template_Type_Description IN ('PPT', 'CV', 'AD', 'PP', 'BK') GROUP BY Template_Type_Code ORDER BY min(Template-Version_Number) ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 337,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Document_Name = 'Database';",
    "exec_result": 0
  },
  {
    "idx": 338,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT Template_Type_Code FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Document_Name = 'Database';",
    "exec_result": 0
  },
  {
    "idx": 339,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT Documents.Document_Name FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';",
    "exec_result": 1
  },
  {
    "idx": 340,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT Document_Name FROM Documents WHERE Template_ID IN(SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'BK');",
    "exec_result": 1
  },
  {
    "idx": 341,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(Document_ID) AS DocumentCount FROM Templates GROUP BY Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 342,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(Document_ID) AS DocumentCount FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 343,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code, COUNT(*) AS DocumentCount FROM Documents JOIN Ref_Template_Types ON Documents.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Template_Type_Code ORDER BY DocumentCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 344,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code, COUNT(*) AS UsageCount FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Template_Type_Code ORDER BY UsageCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 345,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (     SELECT Template_Type_Code     FROM Templates     LEFT JOIN Documents ON Templates.Template_Type_Code = Documents.Template_Type_Code     GROUP BY Templates.Template_Type_Code     HAVING COUNT(Documents.Document_ID) = 0 );",
    "exec_result": 0
  },
  {
    "idx": 346,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (     SELECT Template_Type_Code     FROM Templates     JOIN Documents ON Templates.Template_Type_Code = Documents.Template_Type_Code )",
    "exec_result": 0
  },
  {
    "idx": 347,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;",
    "exec_result": 1
  },
  {
    "idx": 349,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT Template_Type_Description  FROM Ref_Template_Types  WHERE Template_Type_Code = 'AD';",
    "exec_result": 1
  },
  {
    "idx": 350,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';",
    "exec_result": 1
  },
  {
    "idx": 351,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';",
    "exec_result": 1
  },
  {
    "idx": 353,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT Template_Type_Description FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 354,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT Template_Type_Description FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 355,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation';",
    "exec_result": 0
  },
  {
    "idx": 356,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation';",
    "exec_result": 0
  },
  {
    "idx": 357,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) AS Total_Paragraphs FROM Paragraphs;",
    "exec_result": 1
  },
  {
    "idx": 358,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) AS Paragraph_Count FROM Paragraphs;",
    "exec_result": 1
  },
  {
    "idx": 359,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(*) AS Paragraph_Count FROM Paragraphs WHERE Document_Name = 'Summer Show';",
    "exec_result": 0
  },
  {
    "idx": 360,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(*) AS Paragraph_Count FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Summer Show';",
    "exec_result": 1
  },
  {
    "idx": 361,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT p.Paragraph_ID, d.Document_Name, p.Paragraph_Text, d.Other_Details FROM Paragraphs p INNER JOIN Documents d ON p.Document_ID = d.Document_ID WHERE p.Paragraph_Text = 'Korea';",
    "exec_result": 0
  },
  {
    "idx": 362,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT Documents.Document_Name, Documents.Document_Description, Paragraphs.Paragraph_Text, Paragraphs.Other_Details FROM Documents INNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text LIKE '%Korea%';",
    "exec_result": 0
  },
  {
    "idx": 363,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT Paragraph_ID, Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Document_Name = 'Welcome to NY';",
    "exec_result": 1
  },
  {
    "idx": 364,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT p.Paragraph_ID, p.Paragraph_Text FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE d.Document_Name = 'Welcome to NY';",
    "exec_result": 1
  },
  {
    "idx": 365,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Document_Name = 'Customer reviews';",
    "exec_result": 1
  },
  {
    "idx": 366,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT Paragraph_Text FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Document_Name = 'Customer reviews';",
    "exec_result": 1
  },
  {
    "idx": 367,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS Paragraph_Count FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 368,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) AS Paragraph_Count FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID ORDER BY Documents.Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 369,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS Paragraph_Count FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name;",
    "exec_result": 1
  },
  {
    "idx": 370,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT Documents.Document_ID, Documents.Document_Name, COUNT(Paragraphs.Paragraph_ID) AS Paragraph_Count FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name;",
    "exec_result": 1
  },
  {
    "idx": 371,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 372,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 373,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID, Documents.Document_Name ORDER BY COUNT(Paragraphs.Paragraph_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 374,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Document_ID, Document_Name FROM Documents INNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID, Document_Name ORDER BY COUNT(Paragraph_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 375,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID HAVING COUNT(Paragraph_ID) = MIN(COUNT(Paragraph_ID))",
    "exec_result": 0
  },
  {
    "idx": 376,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Documents.Document_ID FROM Documents INNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) = MIN(COUNT(Paragraphs.Paragraph_ID)) LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 377,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT Document_ID FROM Documents WHERE Document_ID IN (     SELECT Document_ID     FROM Paragraphs     GROUP BY Document_ID     HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2 );",
    "exec_result": 1
  },
  {
    "idx": 378,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID HAVING COUNT(Paragraphs.Paragraph_ID) BETWEEN 1 AND 2;",
    "exec_result": 1
  },
  {
    "idx": 379,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT Documents.Document_ID FROM Documents INNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text IN ('Brazil', 'Ireland')",
    "exec_result": 0
  },
  {
    "idx": 380,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT Documents.Document_ID FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID WHERE Paragraphs.Paragraph_Text IN ('Brazil', 'Ireland')",
    "exec_result": 0
  },
  {
    "idx": 381,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(Teacher_ID) AS Total_Teachers FROM teacher;",
    "exec_result": 1
  },
  {
    "idx": 382,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(Teacher_ID) AS Total_Teachers FROM teacher;",
    "exec_result": 1
  },
  {
    "idx": 383,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT t.Name FROM teacher t ORDER BY t.Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 384,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT t.Name FROM teacher t ORDER BY t.Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 385,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT t.Age, t.Hometown FROM teacher t",
    "exec_result": 1
  },
  {
    "idx": 386,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT t.Age, t.Hometown FROM teacher t;",
    "exec_result": 1
  },
  {
    "idx": 387,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT t.Name FROM teacher t WHERE t.Hometown != 'Little Lever Urban District';",
    "exec_result": 0
  },
  {
    "idx": 388,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT t.Name FROM teacher t LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID WHERE ca.Hometown != 'Little Lever Urban District'",
    "exec_result": 0
  },
  {
    "idx": 389,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID WHERE t.Age IN ('32', '33')",
    "exec_result": 0
  },
  {
    "idx": 390,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT t.Name FROM teacher t WHERE t.Age IN ('32', '33');",
    "exec_result": 1
  },
  {
    "idx": 391,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT T2.Hometown FROM `teacher` AS T1 JOIN `course_arrange` AS CA ON T1.Teacher_ID = CA.Teacher_ID JOIN `teacher` AS T2 ON CA.Youngest_Teacher_ID = T2.Teacher_ID WHERE T2.Age = (SELECT MIN(Age) FROM `teacher`)",
    "exec_result": 0
  },
  {
    "idx": 392,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT t.Name, t.Hometown FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID MINIMIZE t.Age GROUP BY t.Teacher_ID, t.Hometown;",
    "exec_result": 0
  },
  {
    "idx": 393,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT T.Hometown, COUNT(T.Teacher_ID) AS TeacherCount FROM teacher T GROUP BY T.Hometown;",
    "exec_result": 1
  },
  {
    "idx": 394,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT T.Hometown, COUNT(T.Teacher_ID) AS Number_of_Teachers FROM teacher T GROUP BY T.Hometown;",
    "exec_result": 1
  },
  {
    "idx": 395,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T.Hometown, COUNT(*) AS Count FROM teacher T GROUP BY T.Hometown ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 396,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T.Hometown, COUNT(*) AS occurrence FROM teacher T GROUP BY T.Hometown ORDER BY occurrence DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 397,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T2.Hometown FROM course AS C JOIN course_arrange AS CA ON C.Course_ID = CA.Course_ID JOIN teacher AS T1 ON CA.Teacher_ID = T1.Teacher_ID JOIN teacher AS T2 ON CA.Teacher_ID = T2.Teacher_ID AND T1.Hometown <> T2.Hometown;",
    "exec_result": 1
  },
  {
    "idx": 398,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT T.Hometown FROM teacher T GROUP BY T.Hometown HAVING COUNT(T.Teacher_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 399,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT t.Name, ca.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID;",
    "exec_result": 0
  },
  {
    "idx": 400,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT t.Name, ca.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID;",
    "exec_result": 0
  },
  {
    "idx": 401,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT t.Name, ca.Course FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID ORDER BY t.Name ASC;",
    "exec_result": 0
  },
  {
    "idx": 402,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT t.Name, c.Course FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID ORDER BY t.Name ASC, c.Course ASC;",
    "exec_result": 0
  },
  {
    "idx": 403,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT t.Name FROM `course` c JOIN `course_arrange` ca ON c.Course_ID = ca.Course_ID JOIN `teacher` t ON ca.Teacher_ID = t.Teacher_ID WHERE c.Course = 'Math';",
    "exec_result": 1
  },
  {
    "idx": 404,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT t.Name FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID WHERE ca.Course = 'Math';",
    "exec_result": 0
  },
  {
    "idx": 405,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT t.Name, COUNT(c.Course_ID) AS CourseCount FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID GROUP BY t.Teacher_ID, t.Name;",
    "exec_result": 1
  },
  {
    "idx": 406,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT t.Name AS Teacher_Name, COUNT(c.Course_ID) AS Course_Count FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID GROUP BY t.Teacher_ID, t.Name;",
    "exec_result": 1
  },
  {
    "idx": 407,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.Name FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID, t.Name HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 408,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.Name FROM teacher t INNER JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID, t.Name HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 409,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT t.Name FROM teacher t LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID WHERE ca.Course_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 410,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT t.Name FROM teacher t LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID WHERE ca.Course_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 411,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE age  <  30",
    "pred": "SELECT COUNT(*) AS \"Visitors_Below_30\" FROM visitor WHERE Age < 30;",
    "exec_result": 1
  },
  {
    "idx": 412,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "pred": "SELECT v.Name FROM visitor v JOIN visit vvisit ON v.ID = vvisit.visitor_ID WHERE v.Level_of_membership > 4 ORDER BY v.Level_of_membership DESC;",
    "exec_result": 0
  },
  {
    "idx": 413,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "pred": "SELECT AVG(visitor.Age) AS Average_Age FROM visitor WHERE visitor.Level_of_membership <= 4;",
    "exec_result": 1
  },
  {
    "idx": 414,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "pred": "SELECT v.Name, v.Level_of_membership FROM visitor AS v JOIN visit AS v2 ON v.ID = v2.visitor_ID WHERE v.Level_of_membership > 4 ORDER BY v.Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 415,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "pred": "SELECT m.Museum_ID, m.Name FROM museum m ORDER BY m.Num_of_Staff DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 416,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "pred": "SELECT AVG(Num_of_Staff) AS Average_Staff FROM museum WHERE Open_Year < '2009';",
    "exec_result": 1
  },
  {
    "idx": 417,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "pred": "SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';",
    "exec_result": 1
  },
  {
    "idx": 418,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "pred": "SELECT m.Name FROM museum m WHERE m.Num_of_Staff > (     SELECT MIN(Num_of_Staff)     FROM museum     WHERE Open_Year > '2010' );",
    "exec_result": 1
  },
  {
    "idx": 419,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "pred": "SELECT v.ID, v.Name, v.Age FROM visitor v JOIN visit v2 ON v.ID = v2.visitor_ID GROUP BY v.ID, v.Name, v.Age HAVING COUNT(DISTINCT v2.Museum_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 420,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "pred": "SELECT v.ID, v.Name, v.Level_of_membership FROM visitor v JOIN visit v\u8bbf\u95ee ON v.ID = v\u8bbf\u95ee.visitor_ID GROUP BY v.ID, v.Name, v.Level_of_membership ORDER BY SUM(v.Visit.Total_spent) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 421,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT m.Museum_ID, m.Name FROM museum m JOIN visit v ON m.Museum_ID = v.Museum_ID GROUP BY m.Museum_ID, m.Name ORDER BY COUNT(v.Museum_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 422,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "pred": "SELECT m.Name FROM museum m LEFT JOIN visit v ON m.Museum_ID = v.Museum_ID WHERE v.ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 423,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "pred": "SELECT v.Name, v.Age FROM visitor v JOIN visit v2 ON v.ID = v2.visitor_ID GROUP BY v.ID, v.Name, v.Age HAVING SUM(v2.Num_of_Ticket) = (     SELECT MAX(SUM(t.Num_of_Ticket))     FROM visit t )",
    "exec_result": 0
  },
  {
    "idx": 424,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "pred": "SELECT AVG(`Num_of_Ticket`) AS Average_Tickets, MAX(`Num_of_Ticket`) AS Maximum_Tickets FROM `visit`;",
    "exec_result": 1
  },
  {
    "idx": 425,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "pred": "SELECT SUM(`Total_spent`) AS Total_Ticket Expense FROM visit WHERE `Level_of_membership` = 1;",
    "exec_result": 0
  },
  {
    "idx": 426,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "pred": "SELECT v.Name FROM visitor v JOIN visit v2 ON v.ID = v2.visitor_ID JOIN museum m1 ON v2.Museum_ID = m1.Museum_ID JOIN museum m2 ON m1.Open_Year < '2009' AND m2.Open_Year > '2011' WHERE m1.Open_Year < '2009' AND m2.Open_Year > '2011';",
    "exec_result": 1
  },
  {
    "idx": 427,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "pred": "SELECT COUNT(visitor.ID) AS Non_Recent_Visitors FROM visitor LEFT JOIN visit ON visitor.ID = visit.visitor_ID WHERE visit.Museum_ID IS NULL OR visit.Open_Year < '2010';",
    "exec_result": 0
  },
  {
    "idx": 428,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "pred": "SELECT COUNT(*) AS Num_Museums FROM museum WHERE Open_Year >= '2008' OR Open_Year < '2013';",
    "exec_result": 0
  },
  {
    "idx": 429,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(player_id) AS total_players FROM players;",
    "exec_result": 1
  },
  {
    "idx": 430,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(*) AS \"Number of Players\" FROM players;",
    "exec_result": 1
  },
  {
    "idx": 431,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(match_num) AS total_matches FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 432,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(*) AS match_count FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 433,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 434,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT first_name, birth_date FROM players WHERE country_code = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 435,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches JOIN players ON matches.loser_id = players.player_id JOIN players AS winner ON matches.winner_id = winner.player_id;",
    "exec_result": 1
  },
  {
    "idx": 436,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches JOIN players ON matches.loser_id = players.player_id JOIN players AS winner ON matches.winner_id = winner.player_id;",
    "exec_result": 1
  },
  {
    "idx": 437,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(winner_rank) AS average_winner_rank FROM matches WHERE winner_id IN (     SELECT player_id     FROM matches     GROUP BY winner_id )",
    "exec_result": 0
  },
  {
    "idx": 438,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(winner_rank) AS average_rank FROM matches WHERE winner_rank IS NOT NULL;",
    "exec_result": 1
  },
  {
    "idx": 439,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(loser_rank) AS highest_loser_rank FROM matches JOIN players ON matches.loser_id = players.player_id;",
    "exec_result": 0
  },
  {
    "idx": 440,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MIN(winner_rank) AS best_losers_rank FROM matches WHERE winner_id IN (     SELECT player_id     FROM matches     GROUP BY loser_id     ORDER BY COUNT(*) DESC     LIMIT 1 );",
    "exec_result": 0
  },
  {
    "idx": 441,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT country_code) AS distinct_country_codes FROM players;",
    "exec_result": 1
  },
  {
    "idx": 442,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT country_code) AS distinct_countries FROM players;",
    "exec_result": 1
  },
  {
    "idx": 443,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) AS distinct_losers FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 444,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) AS distinct_loser_names FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 445,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT tournament_name FROM matches GROUP BY tournament_name HAVING COUNT(*) > 10;",
    "exec_result": 0
  },
  {
    "idx": 446,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT tournament_name FROM matches GROUP BY tournament_name HAVING COUNT(*) > 10;",
    "exec_result": 0
  },
  {
    "idx": 447,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT winner_name FROM matches JOIN players ON matches.winner_id = players.player_id WHERE match_year IN (2013, 2016)",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016);",
    "exec_result": 0
  },
  {
    "idx": 449,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*) AS 'Number of Matches' FROM matches WHERE year IN (2013, 2016);",
    "exec_result": 1
  },
  {
    "idx": 450,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*) AS total_matches FROM matches WHERE year IN (2013, 2016);",
    "exec_result": 1
  },
  {
    "idx": 451,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT p.country_code, p.first_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open')",
    "exec_result": 0
  },
  {
    "idx": 452,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id, p.first_name, p.country_code HAVING COUNT(DISTINCT m.tourney_name) = 2;",
    "exec_result": 0
  },
  {
    "idx": 453,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT first_name, country_code FROM players WHERE birth_date = (     SELECT MIN(birth_date)     FROM players )",
    "exec_result": 1
  },
  {
    "idx": 454,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT `first_name`, `country_code` FROM `players` WHERE `birth_date` = (SELECT MIN(`birth_date`) FROM `players`)",
    "exec_result": 1
  },
  {
    "idx": 455,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 456,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT `first_name`, `last_name` FROM players ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 457,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 458,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date;",
    "exec_result": 0
  },
  {
    "idx": 459,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code FROM players p JOIN (     SELECT player_id, COUNT(*) AS tours     FROM rankings     GROUP BY player_id     ORDER BY tours DESC     LIMIT 1 ) ranked_players ON p.player_id = ranked_players.player_id;",
    "exec_result": 0
  },
  {
    "idx": 460,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT `first_name`, `country_code` FROM `players` JOIN `rankings` ON `players.player_id` = `rankings.player_id` GROUP BY `player_id`, `country_code` ORDER BY `tours` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 461,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 462,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 463,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT winner_name, winner_rank_points FROM matches JOIN (     SELECT player_id, COUNT(*) AS match_wins     FROM matches     GROUP BY winner_id     ORDER BY match_wins DESC ) AS match_wins_counts ON matches.winner_id = match_wins_counts.player_id LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT winner_name, SUM(ranking_points) AS total_rank_points FROM matches JOIN players ON matches.winner_id = players.player_id GROUP BY winner_name ORDER BY total_rank_points DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT winner_name FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE tours = 'Australian Open' AND ranking_points = (     SELECT MAX(ranking_points)     FROM rankings     WHERE tours = 'Australian Open' )",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT winner_name FROM matches JOIN rankings ON matches.winner_id = rankings.player_id WHERE tours = 'Australian Open' AND winner_ioc = 'AUS' ORDER BY ranking_points DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 467,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT m.loser_name AS 'Loser Name', m.winner_name AS 'Winner Name' FROM matches m JOIN players p ON m.loser_id = p.player_id AND m.winner_id = p.player_id WHERE m.minutes = (SELECT MAX(minutes) FROM matches)",
    "exec_result": 0
  },
  {
    "idx": 468,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);",
    "exec_result": 1
  },
  {
    "idx": 469,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT players.first_name, AVG(rankings.ranking) AS average_rank FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;",
    "exec_result": 1
  },
  {
    "idx": 470,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT players.first_name, AVG(rankings.ranking) AS average_rank FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name;",
    "exec_result": 0
  },
  {
    "idx": 471,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT players.first_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;",
    "exec_result": 1
  },
  {
    "idx": 472,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT first_name, SUM(ranking_points) AS total_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY first_name;",
    "exec_result": 1
  },
  {
    "idx": 473,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;",
    "exec_result": 1
  },
  {
    "idx": 474,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code;",
    "exec_result": 1
  },
  {
    "idx": 475,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 476,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 477,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;",
    "exec_result": 1
  },
  {
    "idx": 478,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50;",
    "exec_result": 1
  },
  {
    "idx": 479,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;",
    "exec_result": 1
  },
  {
    "idx": 480,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;",
    "exec_result": 1
  },
  {
    "idx": 481,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year;",
    "exec_result": 1
  },
  {
    "idx": 482,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year;",
    "exec_result": 1
  },
  {
    "idx": 483,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT winner_name, winner_rank FROM matches JOIN players ON matches.winner_id = players.player_id WHERE winner_age = (SELECT MIN(winner_age) FROM matches) GROUP BY winner_name, winner_rank LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 484,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT winner_name, winner_rank FROM matches JOIN players ON matches.winner_id = players.player_id WHERE winner_age = (     SELECT MIN(winner_age)     FROM matches     JOIN players ON matches.winner_id = players.player_id ) GROUP BY winner_name, winner_rank LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 485,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L' AND players.hand IS NOT NULL;",
    "exec_result": 1
  },
  {
    "idx": 486,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(*) AS left_handed_winners FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'L' AND tours = 'WTA Championships';",
    "exec_result": 0
  },
  {
    "idx": 487,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.winner_rank_points = (     SELECT MAX(winner_rank_points)     FROM matches     WHERE winner_id IN (         SELECT player_id         FROM matches         GROUP BY player_id         HAVING SUM(winner_rank_points) = (             SELECT MAX(sum_rank_points)             FROM (                 SELECT player_id, SUM(winner_rank_points) as sum_rank_points                 FROM matches                 GROUP BY player_id             ) AS max_rank_points_per_player         )     ) )",
    "exec_result": 0
  },
  {
    "idx": 488,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT first_name, country_code, birth_date FROM players WHERE player_id IN (   SELECT winner_id   FROM matches   GROUP BY winner_id   HAVING SUM(winner_rank_points) = (     SELECT MAX(sum_winner_rank_points)     FROM (       SELECT winner_id, SUM(winner_rank_points) as sum_winner_rank_points       FROM matches       GROUP BY winner_id     ) AS max_points_winner   ) );",
    "exec_result": 1
  },
  {
    "idx": 489,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;",
    "exec_result": 1
  },
  {
    "idx": 490,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand;",
    "exec_result": 1
  },
  {
    "idx": 491,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "pred": "SELECT COUNT(*) AS captured_ships FROM ship WHERE disposition_of_ship = 'Captured';",
    "exec_result": 1
  },
  {
    "idx": 492,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "pred": "SELECT name, tonnage FROM battle JOIN ship ON battle.id = ship.lost_in_battle ORDER BY name DESC;",
    "exec_result": 0
  },
  {
    "idx": 493,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  date FROM battle",
    "pred": "SELECT battle.name, battle.date, battle.result FROM battle;",
    "exec_result": 0
  },
  {
    "idx": 494,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT max(killed) ,  min(killed) FROM death",
    "pred": "SELECT battle.name AS Battle_Name, MAX(death.injured) AS Max_Toll, MIN(death.injured) AS Min_Toll FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.name;",
    "exec_result": 0
  },
  {
    "idx": 495,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT avg(injured) FROM death",
    "pred": "SELECT AVG(injured) AS average_injuries FROM death;",
    "exec_result": 1
  },
  {
    "idx": 496,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "pred": "SELECT d.note, d.killed, d.injured FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't';",
    "exec_result": 0
  },
  {
    "idx": 497,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "pred": "SELECT b.name, b.result FROM battle b WHERE b.bulgarian_commander != 'Boril';",
    "exec_result": 1
  },
  {
    "idx": 498,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "pred": "SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.ship_type = 'Brig';",
    "exec_result": 1
  },
  {
    "idx": 499,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "pred": "SELECT b.id, b.name FROM battle b JOIN death d ON b.id = d.caused_by_ship_id GROUP BY b.id, b.name HAVING SUM(d.killed) > 10;",
    "exec_result": 0
  },
  {
    "idx": 500,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id, s.name ORDER BY SUM(d.injured) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "pred": "SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'Kaloyan' AND battle.latin_commander = 'Baldwin I';",
    "exec_result": 1
  },
  {
    "idx": 502,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(DISTINCT RESULT) FROM battle",
    "pred": "SELECT COUNT(DISTINCT result) AS distinct_results FROM battle;",
    "exec_result": 1
  },
  {
    "idx": 503,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "pred": "SELECT COUNT(*) AS battles_no_ship_225 FROM battle WHERE NOT EXISTS (     SELECT 1     FROM ship     WHERE ship.id = battle.lost_in_battle         AND ship.tonnage = '225' );",
    "exec_result": 0
  },
  {
    "idx": 504,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "pred": "SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name IN ('Lettice', 'HMS Atalanta')",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "pred": "SELECT b.name, b.result, b.bulgarian_commander FROM battle b WHERE b.lost_in_battle IS NULL AND b.location NOT LIKE '%English Channel%'",
    "exec_result": 0
  },
  {
    "idx": 506,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT note FROM death WHERE note LIKE '%East%'",
    "pred": "SELECT d.note FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE d.note LIKE '%East%'",
    "exec_result": 1
  },
  {
    "idx": 507,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT Addresses.line_1, Addresses.line_2 FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 508,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT      a.line_1 AS FirstLine,      a.line_2 AS SecondLine FROM      Addresses a",
    "exec_result": 1
  },
  {
    "idx": 509,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(*) AS total_courses FROM Courses;",
    "exec_result": 1
  },
  {
    "idx": 510,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(course_id) AS total_courses FROM Courses;",
    "exec_result": 1
  },
  {
    "idx": 511,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT c.course_description FROM Courses c WHERE c.course_name = 'Math';",
    "exec_result": 0
  },
  {
    "idx": 512,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT Courses.course_description FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id WHERE Courses.degree_summary_name LIKE '%Math%';",
    "exec_result": 0
  },
  {
    "idx": 513,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';",
    "exec_result": 1
  },
  {
    "idx": 514,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';",
    "exec_result": 1
  },
  {
    "idx": 515,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Departments.department_name, Departments.department_id FROM Departments JOIN Degree_Programs ON Departments.department_id = Degree_Programs.department_id GROUP BY Departments.department_id, Departments.department_name ORDER BY COUNT(Degree_Programs.degree_program_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 516,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "pred": "SELECT d.department_name, d.department_id FROM Departments d JOIN Degree_Programs dp ON d.department_id = dp.department_id GROUP BY d.department_id, d.department_name ORDER BY COUNT(dp.degree_program_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 517,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT Departments.department_id) AS num_departments FROM Degrees_Programs JOIN Departments ON Degrees_Programs.department_id = Departments.department_id;",
    "exec_result": 0
  },
  {
    "idx": 518,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT Departments.department_id) AS different_departments FROM Degrees_Programs JOIN Departments ON Degrees_Programs.department_id = Departments.department_id;",
    "exec_result": 0
  },
  {
    "idx": 519,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT degree_summary_name) AS DifferentDegreeNames FROM Degree_Programs;",
    "exec_result": 1
  },
  {
    "idx": 520,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT Degree_Programs.degree_summary_name) AS Different_Degree_Programs FROM Degree_Programs",
    "exec_result": 1
  },
  {
    "idx": 521,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(*)  FROM Degree_Programs dp WHERE dp.department_id IN (     SELECT department_id      FROM Departments      WHERE department_name = 'Engineering' );",
    "exec_result": 1
  },
  {
    "idx": 522,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(*) AS engineering_degrees FROM Degree_Programs dp JOIN Departments d ON dp.department_id = d.department_id WHERE d.department_name = 'Engineering';",
    "exec_result": 1
  },
  {
    "idx": 523,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT Sections.section_name, Sections.section_description FROM Sections",
    "exec_result": 1
  },
  {
    "idx": 524,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT section_name, section_description FROM Sections;",
    "exec_result": 1
  },
  {
    "idx": 525,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_id HAVING COUNT(Student_Enrolment_Courses.student_enrolment_id) <= 2;",
    "exec_result": 0
  },
  {
    "idx": 526,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT c.course_name, c.course_id FROM Courses c LEFT JOIN Student_Enrolment_courses sc ON c.course_id = sc.course_id GROUP BY c.course_id HAVING COUNT(sc.student_enrolment_id) < 2;",
    "exec_result": 0
  },
  {
    "idx": 527,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM Sections ORDER BY section_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 528,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM Sections ORDER BY section_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 529,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.semester_name, s.semester_id FROM Semesters s JOIN Student_Enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id, s.semester_name ORDER BY COUNT(se.student_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 530,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Semesters.semester_name, Semesters.semester_id, Courses.course_name AS most_students_course_name, MAX(Students.student_id) AS max_students FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id JOIN Courses ON Student_Enrolment.course_id = Courses.course_id GROUP BY Semesters.semester_id, Semesters.semester_name, Courses.course_name ORDER BY max_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 531,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT d.department_description FROM Departments d WHERE d.department_name LIKE '%computer%';",
    "exec_result": 1
  },
  {
    "idx": 532,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT d.department_description FROM Departments d WHERE d.department_name LIKE '%computer%';",
    "exec_result": 1
  },
  {
    "idx": 533,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name, se.student_id FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sm ON se.semester_id = sm.semester_id GROUP BY s.student_id HAVING COUNT(dp.degree_program_id) = 2;",
    "exec_result": 1
  },
  {
    "idx": 534,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name, s.student_id, de.degree_summary_name AS degree_program FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs de ON se.degree_program_id = de.degree_program_id JOIN Semesters sem ON se.semester_id = sem.semester_id GROUP BY s.student_id, de.degree_summary_name HAVING COUNT(de.degree_summary_name) = 2;",
    "exec_result": 0
  },
  {
    "idx": 535,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor';",
    "exec_result": 1
  },
  {
    "idx": 536,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.department_name LIKE '%Bachelor%'",
    "exec_result": 0
  },
  {
    "idx": 537,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_summary_name, COUNT(*) AS student_count FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.department_id = se.degree_program_id GROUP BY dp.degree_summary_name ORDER BY student_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 538,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_summary_name, COUNT(*) AS num_students FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.department_id = se.degree_program_id GROUP BY dp.degree_summary_name ORDER BY num_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 539,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_program_id, dp.degree_summary_name AS Summary FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.department_id = se.degree_program_id GROUP BY dp.degree_program_id, dp.degree_summary_name ORDER BY COUNT(se.student_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 540,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_program_id, dp.degree_summary_name, COUNT(*) AS total_students FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.department_id = se.degree_program_id GROUP BY dp.degree_program_id, dp.degree_summary_name ORDER BY total_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 541,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(*) AS enrollment_count FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name ORDER BY enrollment_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name, s.student_id, COUNT(se.student_enrolment_id) AS enrollment_count FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id GROUP BY s.student_id ORDER BY enrollment_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 543,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_enrolment_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 544,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 545,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT DISTINCT Courses.course_name FROM Courses INNER JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id INNER JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id",
    "exec_result": 1
  },
  {
    "idx": 546,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT DISTINCT Courses.course_name FROM Courses INNER JOIN Student_Enrolment_Courses ON Courses.course_id = Student_Enrolment_Courses.course_id GROUP BY Courses.course_id HAVING COUNT(Student_Enrolment_Courses.student_enrolment_id) > 0;",
    "exec_result": 0
  },
  {
    "idx": 547,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Courses.course_name, COUNT(*) AS enrollment_count FROM Student_Enrolment JOIN Courses ON Student_Enrolment.course_id = Courses.course_id GROUP BY Courses.course_id, Courses.course_name ORDER BY enrollment_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 548,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Courses.course_name, COUNT(Student_Enrolment.student_id) AS enrolled_students FROM Courses JOIN Student_Enrolment ON Courses.course_id = Student_Enrolment.course_id GROUP BY Courses.course_id, Courses.course_name ORDER BY enrolled_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 549,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT DISTINCT last_name  FROM Students  WHERE current_address_id IN (     SELECT address_id      FROM Addresses      WHERE state_province_county = 'North Carolina' ) AND degree_program_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 550,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT DISTINCT S.last_name FROM Students S INNER JOIN Addresses A ON S.permanent_address_id = A.address_id WHERE A.country = 'North Carolina' AND S.student_enrolment_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 551,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT t.transcript_date, t.transcript_id FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id HAVING COUNT(DISTINCT tc.student_course_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 552,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.transcript_date, T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(T2.student_course_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 553,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "pred": "SELECT s.cell_mobile_number FROM Students s WHERE s.first_name = 'Timmothy' AND s.last_name = 'Ward';",
    "exec_result": 1
  },
  {
    "idx": 554,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "pred": "SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s WHERE date_first_registered = (     SELECT MIN(date_first_registered)     FROM Students );",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s WHERE s.date_first_registered = (     SELECT MIN(date_first_registered)     FROM Students )",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters se2 ON se.semester_id = se2.semester_id JOIN Transcripts t ON se.student_enrolment_id = t.student_enrolment_id WHERE t.transcript_date = (     SELECT MIN(transcript_date) AS earliest_transcript_date     FROM Transcripts )",
    "exec_result": 0
  },
  {
    "idx": 558,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sem ON se.semester_id = sem.semester_id JOIN Transcripts t ON se.student_enrolment_id = t.student_enrolment_id WHERE t.transcript_date = (     SELECT MIN(transcript_date)     FROM Transcripts )",
    "exec_result": 0
  },
  {
    "idx": 559,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT Students.first_name, Students.last_name FROM Students WHERE Students.permanent_address_id <> Students.current_address_id;",
    "exec_result": 0
  },
  {
    "idx": 560,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT s.first_name  FROM Students s WHERE s.permanent_address_id <> s.current_address_id;",
    "exec_result": 1
  },
  {
    "idx": 561,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.address_id, GROUP_CONCAT(a.line_1, ', ', a.line_2, ', ', COALESCE(a.line_3, ''), ', ', a.city, ', ', a.zip_postcode) AS full_address FROM Addresses a JOIN Students s ON a.current_address_id = s.current_address_id GROUP BY a.address_id ORDER BY COUNT(s.student_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 562,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.address_id, a.line_1, a.line_2 FROM Addresses a JOIN Students s ON a.address_id = s.current_address_id JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id GROUP BY a.address_id, a.line_1, a.line_2 ORDER BY COUNT(se.student_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 563,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(transcript_date) AS average_transcript_date FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 564,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(transcript_date) AS average_transcript_date FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 565,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT t.transcript_date, tc.student_course_id, c.course_name, c.course_description FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id JOIN Student_Enrolment_Courses sc ON tc.student_course_id = sc.student_course_id JOIN Courses c ON sc.course_id = c.course_id WHERE t.transcript_date = (     SELECT MIN(transcript_date)     FROM Transcripts     WHERE student_enrolment_id IN (         SELECT se.student_enrolment_id         FROM Student_Enrolment se         GROUP BY se.student_id         LIMIT 1     ) )",
    "exec_result": 0
  },
  {
    "idx": 566,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT MIN(transcript_date) AS earliest_transcript_date,         T2.student_id,         T2.first_name,         T2.middle_name,         T2.last_name,         T1.course_id,         T1.section_name,         T1.transcript_date FROM Transcripts T1 JOIN Student_Enrolment_Courses T2 ON T1.student_course_id = T2.student_course_id GROUP BY T1.student_id, T1.course_id, T1.section_name, T1.transcript_date;",
    "exec_result": 0
  },
  {
    "idx": 567,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(*) AS total_transcripts FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 568,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(*) AS transcript_count FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 569,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) AS last_transcript_release_date FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 570,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) AS last_transcript_date FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 571,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.student_enrolment_id, COUNT(*) AS max_transcripts FROM Student_Enrolment se JOIN Student_Enrolment_Courses sce ON se.student_enrolment_id = sce.student_enrolment_id JOIN Transcripts t ON sce.course_id = t.course_id GROUP BY s.student_enrolment_id",
    "exec_result": 0
  },
  {
    "idx": 572,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.course_id, MAX(te.student_enrolment_id) AS max_enrollment_id FROM Courses c JOIN Student_Enrolment_Courses sce ON c.course_id = sce.course_id JOIN Transcripts t ON sce.student_course_id = t.student_course_id GROUP BY c.course_id",
    "exec_result": 0
  },
  {
    "idx": 573,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT t.transcript_date, transcript_id FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id MIN_COUNT = COUNT(tc.student_course_id) ORDER BY MIN_COUNT ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 574,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT t.transcript_date, t.transcript_id FROM Transcripts t INNER JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id, t.transcript_date HAVING COUNT(tc.student_course_id) = (     SELECT MIN(count)     FROM (         SELECT COUNT(*) AS count         FROM Transcript_Contents         GROUP BY transcript_id     ) AS min_counts ) ORDER BY count ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 575,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT Semesters.semester_name FROM Students JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Students.degrees = 'Bachelor' AND EXISTS (     SELECT 1 FROM Students AS bachelor_students     JOIN Student_Enrolment AS bachelor_enrolment ON bachelor_students.student_id = bachelor_enrolment.student_id     JOIN Degree_Programs AS bachelor_degrees ON bachelor_enrolment.degree_program_id = bachelor_degrees.degree_program_id     WHERE bachelor_students.degrees = 'Master' AND bachelor_enrolment.semester_id = Student_Enrolment.semester_id )",
    "exec_result": 0
  },
  {
    "idx": 576,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT Semesters.semester_id FROM Semesters JOIN Student_Enrolment AS se ON Semesters.semester_id = se.semester_id JOIN Degree_Programs AS dp ON se.degree_program_id = dp.degree_program_id JOIN Courses AS c ON dp.department_id = Courses.department_id WHERE dp.degree_summary_name IN ('Bachelor', 'Master') AND EXISTS (     SELECT 1     FROM Student_Enrolment AS se2     JOIN Courses AS c2 ON se2.course_id = c2.course_id     WHERE se2.student_id != se.student_id AND c2.course_name IN ('Bachelor Program', 'Bachelor Course', 'Master Program', 'Master Course') );",
    "exec_result": 0
  },
  {
    "idx": 577,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT COUNT(DISTINCT current_address_id) AS distinct_current_addresses FROM Students;",
    "exec_result": 1
  },
  {
    "idx": 578,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT DISTINCT Addresses.address_id, line_1, city, country FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id OR Addresses.address_id = Students.permanent_address_id;",
    "exec_result": 0
  },
  {
    "idx": 579,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT * FROM Students ORDER BY last_name, middle_name, first_name ASC;",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT other_student_details FROM Students ORDER BY last_name DESC;",
    "exec_result": 0
  },
  {
    "idx": 581,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT * FROM Sections;",
    "exec_result": 0
  },
  {
    "idx": 582,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT section_description FROM Sections WHERE section_name = 'h';",
    "exec_result": 1
  },
  {
    "idx": 583,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT s.first_name FROM Students s JOIN Addresses pa ON s.permanent_address_id = pa.address_id JOIN Countries c ON pa.country = c.country WHERE c.country = 'Haiti' OR s.cell_mobile_number = '09700166582';",
    "exec_result": 0
  },
  {
    "idx": 584,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT DISTINCT s.first_name  FROM Students s JOIN Addresses pa ON s.permanent_address_id = pa.address_id JOIN Countries c ON pa.country = c.country WHERE c.country = 'Haiti' OR s.cell_mobile_number = '09700166582';",
    "exec_result": 0
  },
  {
    "idx": 585,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT Title FROM Cartoon ORDER BY Title ASC;",
    "exec_result": 1
  },
  {
    "idx": 586,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT Title FROM Cartoon ORDER BY Title ASC;",
    "exec_result": 1
  },
  {
    "idx": 587,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';",
    "exec_result": 0
  },
  {
    "idx": 588,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Directed_by = 'Ben Jones';",
    "exec_result": 1
  },
  {
    "idx": 589,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(*)  FROM Cartoon WHERE Written_by = 'Joseph Kuhr';",
    "exec_result": 1
  },
  {
    "idx": 590,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(*) AS cartoon_count FROM Cartoon WHERE Written_by = 'Joseph Kuhr';",
    "exec_result": 1
  },
  {
    "idx": 591,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Cartoon.Original_air_date;",
    "exec_result": 1
  },
  {
    "idx": 592,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT Cartoon.Title, Directed_by FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id ORDER BY Cartoon.Original_air_date;",
    "exec_result": 1
  },
  {
    "idx": 593,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by IN ('Ben Jones', 'Brandon Vietti');",
    "exec_result": 1
  },
  {
    "idx": 594,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT Cartoon.Title FROM Cartoon INNER JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon DIRECTED_BY 'Ben Jones' OR Cartoon.Written_by 'Brandon Vietti';",
    "exec_result": 0
  },
  {
    "idx": 595,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Country, COUNT(*) AS NumChannels FROM TV_Channel GROUP BY Country ORDER BY NumChannels DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 596,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Country, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Country ORDER BY ChannelCount DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 597,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT `series_name`, `Content`) AS 'Number_of_Different_Series' FROM TV_Channel;",
    "exec_result": 0
  },
  {
    "idx": 598,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT tv.Channel), COUNT(DISTINCT tv.Content) FROM TV_Channel tv;",
    "exec_result": 0
  },
  {
    "idx": 599,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT `Content`  FROM `TV_Channel`  WHERE `series_name` = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Content FROM TV_series WHERE Channel = 'Sky Radio';",
    "exec_result": 0
  },
  {
    "idx": 601,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 602,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 603,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(*) AS \"Number of English Channels\" FROM TV_Channel WHERE Language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 604,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(*) AS EnglishChannels FROM TV_Channel WHERE Language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 605,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Language, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language ORDER BY ChannelCount ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 606,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Language, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language ORDER BY ChannelCount ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 607,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language;",
    "exec_result": 1
  },
  {
    "idx": 608,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language;",
    "exec_result": 1
  },
  {
    "idx": 609,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT TV_Channel.series_name FROM TV_Channel INNER JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Title = 'The Rise of the Blue Beetle!';",
    "exec_result": 0
  },
  {
    "idx": 610,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT T2.series_name FROM `TV_Channel` AS T1 INNER JOIN `TV_series` AS T2 ON T1.id = T2.Channel WHERE T2.title = 'The Rise of the Blue Beetle';",
    "exec_result": 0
  },
  {
    "idx": 611,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Title FROM Cartoon WHERE Channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio');",
    "exec_result": 1
  },
  {
    "idx": 612,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Title FROM Cartoon WHERE Channel IN (     SELECT id     FROM TV_Channel     WHERE series_name = 'Sky Radio' );",
    "exec_result": 1
  },
  {
    "idx": 613,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT Episode, Rating FROM TV_series ORDER BY Rating;",
    "exec_result": 0
  },
  {
    "idx": 614,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT * FROM TV_series ORDER BY Rating;",
    "exec_result": 0
  },
  {
    "idx": 615,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT T2.Episode, T2.Rating FROM TV_series AS T1 JOIN TV_series AS T2 ON T1.Channel = T2.Channel WHERE T1.Rating = (     SELECT MAX(Rating)     FROM TV_series     WHERE Channel = T1.Channel ) ORDER BY T2.Rating DESC LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 616,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT TOP 3 T2.Episode, T2.Rating FROM TV_series AS T1 INNER JOIN TV_Channel AS T2 ON T1.Channel = T2.id ORDER BY T2.Rating DESC;",
    "exec_result": 0
  },
  {
    "idx": 617,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MIN(Share), MAX(Share) FROM TV_series;",
    "exec_result": 1
  },
  {
    "idx": 618,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MIN(`Share`) AS MinimumShare, MAX(`Share`) AS MaximumShare FROM `TV_series`;",
    "exec_result": 1
  },
  {
    "idx": 619,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 620,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 621,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 622,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 623,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 624,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Series_Name FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 0
  },
  {
    "idx": 625,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT TV_series.Episode FROM TV_series INNER JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 626,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Episode FROM TV_series WHERE Channel = 'Sky Radio';",
    "exec_result": 0
  },
  {
    "idx": 627,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT Directed_by, COUNT(*) AS 'Number_of_Cartoons' FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Channel IN (700, 701, 703, 704) -- List of directors' channels GROUP BY Directed_by;",
    "exec_result": 0
  },
  {
    "idx": 628,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT Directed_by, COUNT(*) AS Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;",
    "exec_result": 1
  },
  {
    "idx": 629,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT Production_code, Channel FROM Cartoon WHERE Original_air_date = (SELECT MAX(Original_air_date) FROM Cartoon);",
    "exec_result": 1
  },
  {
    "idx": 630,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT Cartoon.production_code, Cartoon.Channel FROM Cartoon INNER JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.id IN (     SELECT MAX(id) AS MaxId     FROM Cartoon )",
    "exec_result": 0
  },
  {
    "idx": 631,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT Package_Option, Series_name FROM TV_Channel WHERE Hight_definition_TV = 'yes';",
    "exec_result": 1
  },
  {
    "idx": 632,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT Package_Option, `Series_name` FROM TV_Channel WHERE Hight_definition_TV = 'yes';",
    "exec_result": 1
  },
  {
    "idx": 633,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT T2.Country FROM TV_Channel T1 JOIN TV_series T2 ON T1.id = T2.Channel JOIN Cartoon C ON T2.id = C.Channel WHERE C.Written_by = 'Todd Casey';",
    "exec_result": 0
  },
  {
    "idx": 634,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT T2.Country FROM TV_series AS T1 JOIN Cartoon AS T2 ON T1.Channel = T2.Channel WHERE T2.Written_by = 'Todd Casey';",
    "exec_result": 0
  },
  {
    "idx": 635,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT T2.Country FROM TV_Channel T1 JOIN TV_series T2 ON T1.id = T2.Channel JOIN Cartoon C ON T2.id = C.Channel WHERE C.Written_by = 'Todd Casey' AND T1.id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT T2.Country FROM TV_Channel AS T1 JOIN TV_series AS T3 ON T1.id = T3.Channel JOIN Cartoon AS T4 ON T3.id = T4.id WHERE T4.Written_by = 'Todd Casey' EXCEPT SELECT DISTINCT T2.Country FROM TV_Channel AS T1 JOIN TV_series AS T3 ON T1.id = T3.Channel;",
    "exec_result": 0
  },
  {
    "idx": 637,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 INNER JOIN Cartoon AS C ON T1.id = C.Channel WHERE C.Directed_by IN ('Ben Jones', 'Michael Chang')",
    "exec_result": 0
  },
  {
    "idx": 638,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by IN ('Ben Jones', 'Michael Chang')",
    "exec_result": 0
  },
  {
    "idx": 639,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';",
    "exec_result": 1
  },
  {
    "idx": 640,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT TV_Channel.id FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2;",
    "exec_result": 1
  },
  {
    "idx": 642,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT c.id FROM TV_Channel c JOIN TV_Channel cc ON c.id = cc.id GROUP BY c.id HAVING COUNT(*) > 2;",
    "exec_result": 0
  },
  {
    "idx": 643,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT TV_Channel.id FROM TV_Channel LEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon Directed_by = 'Ben Jones' IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 644,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT TV_Channel.id FROM TV_Channel LEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon Directed_by = 'Ben Jones' IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 645,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT Package_Option FROM TV_Channel WHERE Channel NOT IN (     SELECT Channel     FROM Cartoon     WHERE Directed_by = 'Ben Jones' )",
    "exec_result": 0
  },
  {
    "idx": 646,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT Package_Option FROM TV_Channel WHERE Channel NOT IN (     SELECT Channel     FROM Cartoon     WHERE Directed_by = 'Ben Jones' )",
    "exec_result": 0
  },
  {
    "idx": 647,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 648,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) AS \"Number_of_Poker_Players\" FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 649,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 650,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT p.Poker_Player_ID, p.Final_Table_Made, p.Best_Finish FROM poker_player p JOIN people pe ON p.People_ID = pe.People_ID;",
    "exec_result": 0
  },
  {
    "idx": 652,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT p.Poker_Player_ID, p.Final_Table_Made, p.Best_Finish FROM poker_player p JOIN people pe ON p.People_ID = pe.People_ID;",
    "exec_result": 0
  },
  {
    "idx": 653,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(`Earnings`) AS Average_Earnings FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 654,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(Earnings) AS Average_Earnings FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 655,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);",
    "exec_result": 1
  },
  {
    "idx": 656,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);",
    "exec_result": 1
  },
  {
    "idx": 657,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT COUNT(\"Poker_Player_ID\") AS Max_Final_Tables_Made FROM poker_player WHERE \"Earnings\" < 200000 GROUP BY \"Poker_Player_ID\" ORDER BY Max_Final_Tables_Made DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 658,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(\"Final_Table_Made\") AS max_final_tables FROM poker_player WHERE \"Earnings\" < 200000;",
    "exec_result": 1
  },
  {
    "idx": 659,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT Name FROM poker_player;",
    "exec_result": 0
  },
  {
    "idx": 660,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT `Poker_Player_Name` FROM `poker_player` JOIN `people` ON `poker_player.People_ID` = `people.People_ID`;",
    "exec_result": 0
  },
  {
    "idx": 661,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT Name FROM poker_player WHERE Earnings > 300000;",
    "exec_result": 0
  },
  {
    "idx": 662,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT p.Name FROM poker_player p JOIN people pe ON p.People_ID = pe.People_ID WHERE p.Earnings > 300000;",
    "exec_result": 0
  },
  {
    "idx": 663,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT `Name` FROM `poker_player` ORDER BY `Final_Table_Made` ASC;",
    "exec_result": 0
  },
  {
    "idx": 664,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT `Name` FROM `poker_player` JOIN `people` ON `poker_player.People_ID` = `people.People_ID` ORDER BY `Final_Table_Made` ASC;",
    "exec_result": 0
  },
  {
    "idx": 665,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT Birth_Date FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID WHERE Earnings = (SELECT MIN(Earnings) FROM poker_player)",
    "exec_result": 1
  },
  {
    "idx": 666,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT `Birth_Date` FROM `people` AS p JOIN `poker_player` AS pp ON p.`People_ID` = pp.`People_ID` WHERE pp.`Earnings` = (SELECT MIN(`Earnings`) FROM `poker_player`)",
    "exec_result": 1
  },
  {
    "idx": 667,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player WHERE People_ID IN (     SELECT People_ID     FROM people     ORDER BY Height DESC     LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 668,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player WHERE People_ID IN (SELECT People_ID FROM people WHERE Height = (SELECT MAX(Height) FROM people)) ORDER BY Money_Rank DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 669,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(Earnings) AS Average_Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;",
    "exec_result": 1
  },
  {
    "idx": 670,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(Earnings) AS Average_Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;",
    "exec_result": 1
  },
  {
    "idx": 671,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 672,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 673,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) AS NumberOfPeople FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY Nationality;",
    "exec_result": 0
  },
  {
    "idx": 674,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) AS NumberOfPeople FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY Nationality;",
    "exec_result": 0
  },
  {
    "idx": 675,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) AS nation_count FROM people GROUP BY Nationality ORDER BY nation_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 676,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) AS MostCommonNationalityCount FROM people GROUP BY Nationality ORDER BY MostCommonNationalityCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 677,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY Nationality HAVING COUNT(DISTINCT poker_player.People_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 678,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID GROUP BY Nationality HAVING COUNT(*) > 1;",
    "exec_result": 1
  },
  {
    "idx": 679,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 680,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 681,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT Name FROM people WHERE Nationality != 'Russia';",
    "exec_result": 1
  },
  {
    "idx": 682,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT Name FROM people WHERE Nationality != 'Russia';",
    "exec_result": 1
  },
  {
    "idx": 683,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT p.Name FROM people p LEFT JOIN poker_player pp ON p.People_ID = pp.People_ID WHERE pp.Poker_Player_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 684,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT Poker_Player_ID FROM poker_player);",
    "exec_result": 0
  },
  {
    "idx": 685,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID;",
    "exec_result": 0
  },
  {
    "idx": 686,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) AS 'Number of Different Nationalities' FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID;",
    "exec_result": 0
  },
  {
    "idx": 687,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM area_code_state",
    "pred": "SELECT COUNT(*) AS 'Number of States' FROM AREA_CODE_STATE;",
    "exec_result": 1
  },
  {
    "idx": 688,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "pred": "SELECT contestant_number, contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 689,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "pred": "SELECT vote_id, phone_number, state FROM VOTES;",
    "exec_result": 1
  },
  {
    "idx": 690,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "pred": "SELECT MIN(area_code) AS Minimum_Area_Code, MAX(area_code) AS Maximum_Area_Code FROM AREA_CODE_STATE;",
    "exec_result": 1
  },
  {
    "idx": 691,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "pred": "SELECT MAX(created) AS last_date_created FROM VOTES WHERE state = 'CA';",
    "exec_result": 1
  },
  {
    "idx": 692,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "pred": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';",
    "exec_result": 1
  },
  {
    "idx": 693,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT DISTINCT state ,  created FROM votes",
    "pred": "SELECT DISTINCT state, created FROM VOTES;",
    "exec_result": 1
  },
  {
    "idx": 694,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "pred": "SELECT c.contestant_number, c.contestant_name FROM Contestants c JOIN Votes v ON c.contestant_number = v.contestant_number GROUP BY c.contestant_number, c.contestant_name HAVING COUNT(v.vote_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 695,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT contestant_number, contestant_name FROM CONTESTANTS JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number GROUP BY contestant_number, contestant_name ORDER BY COUNT(*) ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 696,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "pred": "SELECT COUNT(*) AS vote_count FROM VOTES WHERE state IN ('NY', 'CA');",
    "exec_result": 1
  },
  {
    "idx": 697,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "pred": "SELECT COUNT(*) AS unvoted_contestants FROM CONTESTANTS LEFT JOIN VOTES ON CONTESTANTS.contestant_number = VOTES.contestant_number WHERE VOTES.vote_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 698,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.area_code AS Most_Voted_Area FROM AREA_CODE_STATE a JOIN VOTES v ON a.state = v.state GROUP BY a.area_code ORDER BY COUNT(v.vote_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 699,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "pred": "SELECT created, state, phone_number FROM VOTES WHERE contestant_name = 'Tabatha Gehling';",
    "exec_result": 0
  },
  {
    "idx": 700,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "pred": "SELECT DISTINCT area_code FROM VOTES WHERE contestant_number IN (     SELECT contestant_number     FROM CONTESTANTS     WHERE contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') )",
    "exec_result": 0
  },
  {
    "idx": 701,
    "db_id": "voter_1",
    "question": "",
    "gold": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "pred": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%';",
    "exec_result": 1
  },
  {
    "idx": 702,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT Name FROM country WHERE IndepYear > 1950;",
    "exec_result": 1
  },
  {
    "idx": 703,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT Name FROM country WHERE IndepYear > 1950;",
    "exec_result": 1
  },
  {
    "idx": 704,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(*)  FROM country  WHERE GovernmentForm = 'Republic';",
    "exec_result": 1
  },
  {
    "idx": 705,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(*)  FROM country  WHERE GovernmentForm = 'Republic';",
    "exec_result": 1
  },
  {
    "idx": 706,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(`SurfaceArea`) AS Total_Surface_Area FROM country WHERE `Continent` = 'Caribbean';",
    "exec_result": 0
  },
  {
    "idx": 707,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(`SurfaceArea`) AS TotalSurfaceArea FROM country WHERE Continent = 'Caribbean';",
    "exec_result": 0
  },
  {
    "idx": 708,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT Continent FROM country WHERE Code = 'VGB'; -- Assuming 'VGB' is the code for Anguilla (it might be different if it uses a different ISO code)",
    "exec_result": 1
  },
  {
    "idx": 709,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT c.Name AS Continent FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' -- Assuming Anguilla's official language is English AND c.Code = 'AIA' -- Country code for Anguilla (which is not in the provided schema, but assuming it's correct)",
    "exec_result": 0
  },
  {
    "idx": 710,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT Region FROM city WHERE Name = 'Kabul';",
    "exec_result": 0
  },
  {
    "idx": 711,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT Region  FROM city  WHERE Name = 'Kabul' AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan');",
    "exec_result": 0
  },
  {
    "idx": 712,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT Language, SUM(Percentage) AS TotalPercentage FROM countrylanguage WHERE CountryCode = 'AWA' -- Aruba's country code (replace 'AWA' with 'SUR' for Suriname, if needed) GROUP BY Language ORDER BY TotalPercentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 713,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT Language  FROM countrylanguage  WHERE CountryCode = 'AWU' -- Assuming 'AWU' is the abbreviation for Aruba (assuming it's in the countrycode column) AND IsOfficial = 'T' -- T for 'official' LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT c.Population, c.LifeExpectancy FROM country AS c WHERE c.Name = 'Brazil';",
    "exec_result": 1
  },
  {
    "idx": 715,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT c.Population, c.LifeExpectancy FROM country AS c WHERE c.Name = 'Brazil';",
    "exec_result": 1
  },
  {
    "idx": 716,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT Region, Population FROM country WHERE Code = 'AGO';",
    "exec_result": 1
  },
  {
    "idx": 717,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT Region, Population FROM country WHERE Code = 'AGO';",
    "exec_result": 1
  },
  {
    "idx": 718,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(`LifeExpectancy`) AS AverageLifeExpectancy FROM country WHERE `Continent` = 'Central Africa';",
    "exec_result": 0
  },
  {
    "idx": 719,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(`LifeExpectancy`) AS AverageLifeExpectancy FROM `country` WHERE `Continent` = 'Central Africa';",
    "exec_result": 0
  },
  {
    "idx": 720,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT `Name` FROM `country` WHERE `Continent` = 'Asia' AND `LifeExpectancy` = (SELECT MIN(`LifeExpectancy`) FROM `country` WHERE `Continent` = 'Asia')",
    "exec_result": 1
  },
  {
    "idx": 721,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT `Name`  FROM `country`  WHERE `Continent` = 'Asia'  ORDER BY `LifeExpectancy` ASC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 722,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT SUM(`Population`) AS TotalPopulation, MAX(`GNP`) AS MaxGNP FROM city c JOIN country c2 ON c.CountryCode = c2.Code WHERE c2.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 723,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT COUNT(*) AS total_people_in_Asia, MAX(GNP) AS largest_GNP FROM city c JOIN country co ON c.CountryCode = co.Code WHERE co.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 724,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(`LifeExpectancy`) AS avg_life_expectancy FROM `country` WHERE `Continent` = 'Africa' AND `GovernmentForm` = 'Republic';",
    "exec_result": 1
  },
  {
    "idx": 725,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(`LifeExpectancy`) AS avg_life_expectancy FROM country WHERE `Continent` = 'Africa' AND `GovernmentForm` = 'Republic';",
    "exec_result": 1
  },
  {
    "idx": 726,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(`SurfaceArea`) AS TotalSurfaceArea FROM `country` WHERE `Continent` IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 727,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(`SurfaceArea`) AS TotalSurfaceArea FROM country WHERE `Continent` IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 728,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT SUM(`Population`) AS PopulationInGelderland FROM city WHERE `District` = 'Gelderland';",
    "exec_result": 1
  },
  {
    "idx": 729,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT SUM(`Population`) AS TotalPopulation FROM `city` WHERE `District` = 'Gelderland';",
    "exec_result": 1
  },
  {
    "idx": 730,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'US';",
    "exec_result": 0
  },
  {
    "idx": 731,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(GNP) AS MeanGNP, SUM(Population) AS TotalPopulation FROM country WHERE GovernmentForm = 'US Territory';",
    "exec_result": 1
  },
  {
    "idx": 732,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage;",
    "exec_result": 1
  },
  {
    "idx": 733,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT Language)  FROM countrylanguage;",
    "exec_result": 1
  },
  {
    "idx": 734,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';",
    "exec_result": 1
  },
  {
    "idx": 735,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';",
    "exec_result": 1
  },
  {
    "idx": 736,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT SUM(`Percentage`) AS TotalLanguagesUsedInAruba FROM countrylanguage WHERE `CountryCode` = 'AWU' -- Assuming Aruba's code is 'AWU'",
    "exec_result": 0
  },
  {
    "idx": 737,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT COUNT(*) AS LanguageCount FROM countrylanguage WHERE CountryCode = 'AWU' -- Assuming 'AWU' is the code for Aruba",
    "exec_result": 0
  },
  {
    "idx": 738,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*) AS OfficialLanguages FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 739,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*) AS OfficialLanguages FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 740,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name AS CountryName FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code, c.Name ORDER BY SUM(cl.Percentage) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 741,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name AS NationName, COUNT(*) AS LanguageCount FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name ORDER BY LanguageCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 742,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Continent, SUM(c.Language != '\u5b98\u65b9\u8bed\u8a00' OR c.Percentage <> 100) AS LanguageDiversity FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode GROUP BY c.Continent ORDER BY LanguageDiversity DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 743,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Continent`, SUM(`Percentage`) AS TotalPercentage FROM `countrylanguage` GROUP BY `Continent` ORDER BY TotalPercentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 744,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(*)  FROM countrylanguage  WHERE CountryCode IN (     SELECT CountryCode      FROM countrylanguage      WHERE Language = 'English'      AND CountryCode IN (         SELECT CountryCode          FROM countrylanguage          WHERE Language = 'Dutch'     ) );",
    "exec_result": 0
  },
  {
    "idx": 745,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(DISTINCT c.Code) AS NumCountriesEnglishDutch FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'Dutch');",
    "exec_result": 0
  },
  {
    "idx": 746,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT c.Name AS NationName FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'French') AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 747,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'French') AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 748,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name  FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.Language = 'French' AND cl.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 749,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'French') AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 750,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(DISTINCT Continent)  FROM countrylanguage AS cl  JOIN country AS c ON cl.CountryCode = c.Code  WHERE Language = 'Chinese';",
    "exec_result": 1
  },
  {
    "idx": 751,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(*) AS 'Number of Continents' FROM countrylanguage WHERE Language = 'Chinese';",
    "exec_result": 1
  },
  {
    "idx": 752,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('English', 'Dutch')",
    "exec_result": 1
  },
  {
    "idx": 753,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT Region FROM country WHERE CountryCode IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language IN ('Dutch', 'English') )",
    "exec_result": 0
  },
  {
    "idx": 754,
    "db_id": "world_1",
    "question": "",
    "gold": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "pred": "SELECT c.Name AS Country, c.Language AS OfficialLanguage FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial IN ('T', 'F') -- 'T' for English, 'F' for Dutch",
    "exec_result": 0
  },
  {
    "idx": 755,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT c.Code, c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'Dutch') AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 756,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT Language, SUM(Percentage) AS TotalPercentage FROM countrylanguage WHERE Continent = 'Asia' AND IsOfficial = 'T' GROUP BY Language ORDER BY TotalPercentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 757,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT Language, SUM(Percentage) AS TotalPercentage FROM countrylanguage WHERE Continent = 'Asia' AND IsOfficial = 'T' GROUP BY Language ORDER BY TotalPercentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 758,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT Language FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE GovernmentForm = 'Republic' AND HeadOfState IS NOT NULL ) GROUP BY Language HAVING COUNT(*) = 1;",
    "exec_result": 1
  },
  {
    "idx": 759,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT Language  FROM countrylanguage  WHERE CountryCode IN (     SELECT Code      FROM country      WHERE GovernmentForm = 'Republic'      GROUP BY Code      HAVING COUNT(*) = 1 )",
    "exec_result": 0
  },
  {
    "idx": 760,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT c.Name AS City_Name, c.Population AS Population FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE cl.Language = 'English' AND c.Population = (SELECT MAX(Population) FROM city)",
    "exec_result": 0
  },
  {
    "idx": 761,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT c.Name AS CityName, c.Population AS Population FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE cl.Language = 'English' AND c.Population = (SELECT MAX(Population) FROM city)",
    "exec_result": 0
  },
  {
    "idx": 762,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, c.LifeExpectancy FROM country c WHERE c.Continent = 'Asia' AND c.SurfaceArea = (     SELECT MAX(SurfaceArea)     FROM country     WHERE Continent = 'Asia' )",
    "exec_result": 1
  },
  {
    "idx": 763,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name AS CountryName, c.Population, c.LifeExpectancy FROM country c WHERE c.Continent = 'Asia' AND c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')",
    "exec_result": 1
  },
  {
    "idx": 764,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(`LifeExpectancy`) AS AverageLifeExpectancy FROM country WHERE `Language` != 'English' AND `IsOfficial` = 'F';",
    "exec_result": 0
  },
  {
    "idx": 765,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(`LifeExpectancy`) AS MeanLifeExpectancy FROM `country` WHERE `IsOfficial` != 'T' AND `Language` LIKE '%English%';",
    "exec_result": 0
  },
  {
    "idx": 766,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT SUM(T2.Population) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language <> 'English';",
    "exec_result": 0
  },
  {
    "idx": 767,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT SUM(c.Population) FROM country c LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language <> 'English';",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT Language FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE HeadOfState = 'Beatrix' ) AND IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 769,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT Language FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE HeadOfState = 'Beatrix' ) AND IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 770,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (     SELECT Code     FROM country     WHERE IndepYear < 1930 ) AND IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 771,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT SUM(CASE WHEN T2.IndepYear < 1930 THEN 1 ELSE 0 END) AS TotalDistinctOfficialLanguages FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 772,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT c.Name AS Country FROM country c WHERE c.Continent = 'Asia' AND c.SurfaceArea > (     SELECT MAX(SurfaceArea) AS MaxSurfaceArea     FROM country WHERE Continent = 'Europe' );",
    "exec_result": 0
  },
  {
    "idx": 773,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT c.Code FROM country c WHERE c.Continent = 'Asia' AND c.SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe');",
    "exec_result": 0
  },
  {
    "idx": 774,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT c.Name AS Country FROM country c WHERE c.Continent = 'Africa' AND c.Population < (     SELECT MIN(Population)     FROM country     WHERE Continent = 'Asia' );",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT c.CountryCode FROM country AS c WHERE c.Continent = 'Africa' AND c.Population < (     SELECT MAX(c2.Population)     FROM country AS c2     WHERE c2.Continent = 'Asia' );",
    "exec_result": 0
  },
  {
    "idx": 776,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT c.Name, c.Continent FROM country c JOIN (     SELECT MAX(Population) AS MaxPop_Africa     FROM country     WHERE Continent = 'Africa' ) af_max ON c.Population > af_max.MaxPop_Africa WHERE c.Continent = 'Asia'",
    "exec_result": 0
  },
  {
    "idx": 777,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT c.CountryCode, c.Name AS Country FROM country c WHERE c.Continent = 'Asia' AND c.Population > (     SELECT MAX(Population)     FROM country d     WHERE d.Continent = 'Africa' );",
    "exec_result": 0
  },
  {
    "idx": 778,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT CountryCode FROM countrylanguage WHERE Language = 'English' IS FALSE;",
    "exec_result": 0
  },
  {
    "idx": 779,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT CountryCode FROM countrylanguage WHERE Language != 'English';",
    "exec_result": 0
  },
  {
    "idx": 780,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT CountryCode FROM country WHERE CountryCode IN (     SELECT CountryCode     FROM countrylanguage     WHERE Language != 'English' AND IsOfficial = 'T' )",
    "exec_result": 0
  },
  {
    "idx": 781,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT c.Code FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language != 'English';",
    "exec_result": 1
  },
  {
    "idx": 782,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT c.Code FROM country c WHERE c.Language != 'English' AND c.GovernmentForm != 'Republic';",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT c.Code FROM country c WHERE c.GovernmentForm != 'Republic' AND c.Language NOT LIKE 'Eng%' ;",
    "exec_result": 0
  },
  {
    "idx": 784,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT c.Name AS City FROM city c JOIN country c2 ON c.CountryCode = c2.Code JOIN countrylanguage cl ON c2.Code = cl.CountryCode AND cl.Language != 'English' WHERE c2.Continent = 'Europe';",
    "exec_result": 0
  },
  {
    "idx": 785,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT c.Name  FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE cl.Language <> 'English' AND cl.IsOfficial = 'F' AND cl.Continent = 'Europe';",
    "exec_result": 0
  },
  {
    "idx": 786,
    "db_id": "world_1",
    "question": "",
    "gold": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "pred": "SELECT DISTINCT city.Name FROM city INNER JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese' AND country.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 787,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "pred": "SELECT DISTINCT c.Name FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE c.Continent = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 788,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)",
    "exec_result": 0
  },
  {
    "idx": 789,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT c.Name, c.IndepYear, c.SurfaceArea FROM country c WHERE c.Population = (SELECT MIN(Population) FROM country)",
    "exec_result": 0
  },
  {
    "idx": 790,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Population, c.Name, c.HeadOfState FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)",
    "exec_result": 0
  },
  {
    "idx": 791,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, c.HeadOfState FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)",
    "exec_result": 0
  },
  {
    "idx": 792,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT c.Name, COUNT(*) AS LanguageCount FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code HAVING COUNT(*) >= 3;",
    "exec_result": 1
  },
  {
    "idx": 793,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT c.Name AS CountryName, COUNT(*) AS LanguagesSpoken FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code HAVING COUNT(*) > 2;",
    "exec_result": 1
  },
  {
    "idx": 794,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT c.District, COUNT(*) AS CityCount FROM city c JOIN country c2 ON c.CountryCode = c2.Code GROUP BY c.District HAVING AVG(c.Population) > (SELECT AVG(Population) FROM city)",
    "exec_result": 0
  },
  {
    "idx": 795,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT c.District, COUNT(*) AS AboveAverageCities FROM city c JOIN (   SELECT AVG(Population) AS AvgPopulation   FROM city ) avg ON c.Population > avg.AvgPopulation GROUP BY c.District;",
    "exec_result": 1
  },
  {
    "idx": 796,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT c.Name AS GovernmentForm, SUM(cl.Population) AS TotalPopulation FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.GovernmentForm HAVING AVG(cl.LifeExpectancy) > 72;",
    "exec_result": 0
  },
  {
    "idx": 797,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT c.GovernmentForm, SUM(c.Population) AS TotalPopulation FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = ' Official' -- Assuming 'Official' is the column for 'IsOfficial' being true GROUP BY c.GovernmentForm HAVING AVG(c.LifeExpectancy) > 72",
    "exec_result": 0
  },
  {
    "idx": 798,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT Continent, AVG(LifeExpectancy) AS AvgLifeExpectancy, SUM(Population) AS TotalPopulation FROM (   SELECT c.CountryCode, c.Continent, cl.LifeExpectancy, c.Population   FROM country c   JOIN countrylanguage cl ON c.Code = cl.CountryCode   WHERE cl.Percentage < 0.72 ) subquery GROUP BY Continent HAVING AVG(LifeExpectancy) < 72;",
    "exec_result": 0
  },
  {
    "idx": 799,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT Continent, SUM(Country.Population) AS TotalPopulation, AVG(LifeExpectancy) AS AverageLifeExpectancy FROM country JOIN city ON country.Code = city.CountryCode JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent HAVING AVG(LifeExpectancy) < 72;",
    "exec_result": 0
  },
  {
    "idx": 800,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT c.Name, c.SurfaceArea FROM country AS c ORDER BY c.SurfaceArea DESC LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 801,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT c.Name, c.SurfaceArea FROM country AS c ORDER BY c.Population DESC LIMIT 5;",
    "exec_result": 0
  },
  {
    "idx": 802,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT c.Name  FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Percentage = (SELECT MAX(Percentage) FROM countrylanguage) ORDER BY Population DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 803,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT Name FROM country WHERE Population = (SELECT MAX(Population) FROM country) LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 804,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT Name  FROM country  WHERE Population IN (SELECT MIN(Population)                       FROM country                       ORDER BY Population ASC                       LIMIT 3);",
    "exec_result": 0
  },
  {
    "idx": 805,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT c.Name FROM country c INNER JOIN (     SELECT CountryCode, MIN(Population) AS MinPopulation     FROM city     GROUP BY CountryCode ) AS min_pop_cities ON c.Code = min_pop_cities.CountryCode ORDER BY MinPopulation ASC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 806,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(*) AS \"Number of Countries in Asia\" FROM country WHERE Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 807,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(*)  FROM country  WHERE Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 808,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Continent = 'Europe' AND c.Population = 80000;",
    "exec_result": 1
  },
  {
    "idx": 809,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT Name  FROM country  WHERE Continent = 'Europe' AND Population = 80000;",
    "exec_result": 1
  },
  {
    "idx": 810,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT SUM(`Population`) AS TotalPopulation, AVG(`SurfaceArea`) AS AverageArea FROM country WHERE Continent = 'North America' AND `SurfaceArea` > 3000;",
    "exec_result": 0
  },
  {
    "idx": 811,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT c.CountryCode, SUM(cl.Population) AS TotalPopulation, AVG(c.SurfaceArea) AS AverageSurfaceArea FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Continent = 'North America' AND c.SurfaceArea > 3000 GROUP BY c.CountryCode;",
    "exec_result": 0
  },
  {
    "idx": 812,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "pred": "SELECT c.Name AS City FROM city c INNER JOIN country ctry ON c.CountryCode = ctry.Code WHERE c.Population BETWEEN 160000 AND 900000;",
    "exec_result": 1
  },
  {
    "idx": 813,
    "db_id": "world_1",
    "question": "",
    "gold": "select name from city where population between 160000 and 900000",
    "pred": "SELECT `City.Name` FROM `city` WHERE `Population` BETWEEN 160000 AND 900000;",
    "exec_result": 0
  },
  {
    "idx": 814,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Language, SUM(Percentage) AS TotalPercentage FROM countrylanguage GROUP BY Language ORDER BY TotalPercentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 815,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Language FROM countrylanguage GROUP BY Language HAVING SUM(Percentage) = (     SELECT MAX(Percentage)     FROM countrylanguage )",
    "exec_result": 0
  },
  {
    "idx": 816,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT c.Code, cl.Language, cl.Percentage AS 'Percentage Spoken' FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode GROUP BY c.Code, cl.Language ORDER BY cl.Percentage DESC;",
    "exec_result": 0
  },
  {
    "idx": 817,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT Country.Code, Language.Language, MAX(Percentage) AS MaxPercentage FROM countrylanguage GROUP BY Country.Code, Language ORDER BY MaxPercentage DESC;",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(*) as TotalCountries FROM countrylanguage WHERE Language = 'spa' -- Assuming Spanish is represented as 'spa' GROUP BY CountryCode ORDER BY Percentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(*) AS num_countries_with_spain AS\u897f\u73ed\u7259\u4e3a\u4e3b\u8bed\u7684\u56fd\u5bb6\u6570\u91cf FROM countrylanguage WHERE Language = 'spa' AND Percentage = (     SELECT MAX(Percentage)     FROM countrylanguage AS cl     WHERE cl.CountryCode = countrylanguage.CountryCode )",
    "exec_result": 0
  },
  {
    "idx": 820,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT `CountryCode` FROM `countrylanguage` WHERE `Language` = 'Spanish' AND `Percentage` = (SELECT MAX(`Percentage`) FROM `countrylanguage` WHERE `Language` = 'Spanish')",
    "exec_result": 0
  },
  {
    "idx": 821,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT CountryCode  FROM countrylanguage  WHERE Language = 'Spanish' AND IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 822,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(*) AS \"Number of Conductors\" FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 823,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(*) AS \"Number of Conductors\" FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 824,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT Name FROM conductor ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 825,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT Name FROM conductor ORDER BY Age;",
    "exec_result": 1
  },
  {
    "idx": 826,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT Name FROM conductor WHERE Nationality != 'USA';",
    "exec_result": 1
  },
  {
    "idx": 827,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT Name FROM conductor WHERE Nationality != 'USA';",
    "exec_result": 1
  },
  {
    "idx": 828,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company, Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY Record_Company, Year_of_Founded ORDER BY Year_of_Founded DESC;",
    "exec_result": 0
  },
  {
    "idx": 829,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company, Year_of_Founded FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID ORDER BY Year_of_Founded DESC;",
    "exec_result": 0
  },
  {
    "idx": 830,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(Attendance) AS Average_Attendance FROM show;",
    "exec_result": 1
  },
  {
    "idx": 831,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(Attendance) AS Average_Attendance FROM show;",
    "exec_result": 1
  },
  {
    "idx": 832,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MIN(Share) AS MinShare, MAX(Share) AS MaxShare FROM performance WHERE Type != 'Live final';",
    "exec_result": 1
  },
  {
    "idx": 833,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MIN(Share), MAX(Share) FROM performance WHERE Type != 'Live final';",
    "exec_result": 1
  },
  {
    "idx": 834,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Nationality) AS Different_Nationalities FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 835,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Nationality) AS Different_Nationalities FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 836,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;",
    "exec_result": 1
  },
  {
    "idx": 837,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;",
    "exec_result": 1
  },
  {
    "idx": 838,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);",
    "exec_result": 1
  },
  {
    "idx": 839,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT c.Name FROM conductor c JOIN performance p ON c.Conductor_ID = p.Conductor_ID GROUP BY c.Name, c.Year_of_Work ORDER BY SUM(p.Year_of_Founded) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 840,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT c.Name AS Conductor_Name, o.Orchestra FROM conductor c JOIN performance p ON c.Conductor_ID = p.Conductor_ID JOIN orchestra o ON p.Orchestra_ID = o.Orchestra_ID;",
    "exec_result": 0
  },
  {
    "idx": 841,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT c.Name AS Conductor_Name, o.Orchestra FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID;",
    "exec_result": 1
  },
  {
    "idx": 842,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT c.Name FROM conductor c JOIN performance p ON c.Conductor_ID = p.Conductor_ID GROUP BY c.Name HAVING COUNT(p.Orchestra_ID) > 1;",
    "exec_result": 0
  },
  {
    "idx": 843,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT c.Name FROM conductor c WHERE EXISTS (     SELECT 1     FROM orchestra o     WHERE c.Conductor_ID = o.Conductor_ID     GROUP BY c.Conductor_ID     HAVING COUNT(o.Orchestra_ID) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 844,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name FROM conductor c JOIN performance p ON c.Conductor_ID = p.Conductor_ID GROUP BY c.Name ORDER BY COUNT(p.Orchestra_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 845,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name FROM conductor c GROUP BY c.Conductor_ID, c.Name HAVING COUNT(*) = (     SELECT MAX(Count_Orchestras)     FROM (         SELECT COUNT(*) AS Count_Orchestras         FROM performance p         JOIN conductor c ON p.Conductor_ID = c.Conductor_ID         GROUP BY p.Conductor_ID     ) as max_count_per_conductor );",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Year_of_Founded > 2008;",
    "exec_result": 1
  },
  {
    "idx": 847,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Year_of_Founded > 2008;",
    "exec_result": 1
  },
  {
    "idx": 848,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT Record_Company, COUNT(Orchestra_ID) AS NumberOfOrchestras FROM orchestra GROUP BY Record_Company;",
    "exec_result": 1
  },
  {
    "idx": 849,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT Record_Company, COUNT(Orchestra_ID) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company;",
    "exec_result": 1
  },
  {
    "idx": 850,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT Major_Record_Format, COUNT(*) AS Record_Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Record_Count ASC;",
    "exec_result": 0
  },
  {
    "idx": 851,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID GROUP BY Major_Record_Format ORDER BY Frequency DESC;",
    "exec_result": 0
  },
  {
    "idx": 852,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Record_Company, COUNT(*) AS num_orchestras FROM orchestra JOIN performance ON orchestra.Conductor_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID GROUP BY Record_Company ORDER BY num_orchestras DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 853,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Record_Company, COUNT(*) AS orchestra_count FROM orchestra GROUP BY Record_Company ORDER BY orchestra_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 854,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT Orchestra.Organization FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Performance_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 855,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT o.Orchestra_ID, o. Orchestra FROM orchestra o LEFT JOIN performance p ON o. Orchestra_ID = p. Orchestra_ID WHERE p.Performance_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 856,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT Record_Company FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE Year_of_Founded < 2003 OR Year_of_Founded > 2003;",
    "exec_result": 0
  },
  {
    "idx": 857,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003;",
    "exec_result": 1
  },
  {
    "idx": 858,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(*) AS num_orchestras FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');",
    "exec_result": 1
  },
  {
    "idx": 859,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(*) AS Num_Orchestras FROM orchestra JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID JOIN show ON performance.Performance_ID = show.Performance_ID WHERE performance.Major_Record_Format IN ('CD', 'DVD');",
    "exec_result": 0
  },
  {
    "idx": 860,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (     SELECT Orchestra_ID     FROM performance     GROUP BY Orchestra_ID     HAVING COUNT(*) > 1 )",
    "exec_result": 1
  },
  {
    "idx": 861,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT o.Year_of_Founded FROM orchestra o JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID GROUP BY o.Orchestra_ID HAVING COUNT(p.Performance_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 862,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(*) AS total_highschoolers FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(*) AS TotalHighSchoolers FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 864,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 865,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT h.name, h.grade FROM Highschooler h;",
    "exec_result": 1
  },
  {
    "idx": 866,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT DISTINCT grade FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 867,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT grade FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 868,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade  FROM Highschooler h  WHERE h.ID = (SELECT friend_id FROM Friend WHERE student_id = 1934);",
    "exec_result": 1
  },
  {
    "idx": 869,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 870,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name FROM Highschooler WHERE grade = 10;",
    "exec_result": 1
  },
  {
    "idx": 871,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name FROM Highschooler WHERE grade = 10;",
    "exec_result": 1
  },
  {
    "idx": 872,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 873,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 874,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) AS Total_Students FROM Highschooler WHERE grade IN (9, 10);",
    "exec_result": 1
  },
  {
    "idx": 875,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) AS count_grade_9_or_10 FROM Highschooler WHERE grade IN (9, 10);",
    "exec_result": 1
  },
  {
    "idx": 876,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade, COUNT(*) AS num_students FROM Highschooler GROUP BY grade;",
    "exec_result": 1
  },
  {
    "idx": 877,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade, COUNT(*) AS num_highschoolers FROM Highschooler GROUP BY grade;",
    "exec_result": 1
  },
  {
    "idx": 878,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade, COUNT(*) AS total_students FROM Highschooler GROUP BY grade ORDER BY total_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 879,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade, COUNT(*) AS num_students FROM Highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 880,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4;",
    "exec_result": 1
  },
  {
    "idx": 881,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade HAVING COUNT(*) >= 4;",
    "exec_result": 1
  },
  {
    "idx": 882,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT Highschooler.ID, COUNT(*) AS num_friends FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID;",
    "exec_result": 1
  },
  {
    "idx": 883,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT Highschooler.name, COUNT(Friend.student_id) AS num_friends FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID;",
    "exec_result": 0
  },
  {
    "idx": 884,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name AS StudentName, COUNT(f.student_id) AS Number_of_friends FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID;",
    "exec_result": 0
  },
  {
    "idx": 885,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name AS high_schooler_name, COUNT(f.student_id) AS num_friends FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID;",
    "exec_result": 0
  },
  {
    "idx": 886,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID, h.name HAVING COUNT(f.friend_id) = (     SELECT MAX(count_friends)     FROM (         SELECT student_id, COUNT(*) AS count_friends         FROM Friend         GROUP BY student_id     ) AS friend_counts     WHERE friend_counts.student_id = h.ID );",
    "exec_result": 0
  },
  {
    "idx": 887,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.name AS student_name, COUNT(f.student_id) AS friend_count FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID, h.name ORDER BY friend_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 888,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID, h.name HAVING COUNT(*) >= 3;",
    "exec_result": 1
  },
  {
    "idx": 889,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID, h.name HAVING COUNT(*) >= 3;",
    "exec_result": 1
  },
  {
    "idx": 890,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT DISTINCT Highschooler.name FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id WHERE Friend.friend_id = 1934;",
    "exec_result": 0
  },
  {
    "idx": 891,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT DISTINCT h.name FROM Highschooler h INNER JOIN Friend f ON h.ID = f.student_id WHERE f.friend_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');",
    "exec_result": 0
  },
  {
    "idx": 892,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) AS num_friends FROM Friend WHERE student_id = 1934;",
    "exec_result": 1
  },
  {
    "idx": 893,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) AS num_friends FROM Friend WHERE student_id = 1934;",
    "exec_result": 1
  },
  {
    "idx": 894,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT h.ID FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id OR h.ID = f.friend_id WHERE f.student_id IS NULL AND f.friend_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 895,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT h.ID FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id OR h.ID = f.friend_id WHERE f.student_id IS NULL OR f.friend_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT h.name FROM Highschooler h WHERE NOT EXISTS (     SELECT 1     FROM Friend f     WHERE f.student_id = h.ID OR f.friend_id = h.ID );",
    "exec_result": 0
  },
  {
    "idx": 897,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT h.name FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id OR h.ID = f.friend_id WHERE f.student_id IS NULL AND f.friend_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 898,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT h.ID FROM Highschooler h JOIN Friend f ON h.ID = f.student_id OR h.ID = f.friend_id JOIN Likes l ON h.ID = l.student_id OR h.ID = l.liked_id WHERE h.ID IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 899,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT DISTINCT h.ID FROM Highschooler h JOIN Friend f ON h.ID = f.student_id JOIN Likes l ON h.ID = l.student_id",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT h.name FROM Highschooler h WHERE EXISTS (     SELECT 1     FROM Friend f     WHERE h.ID = f.student_id     OR h.ID = f.friend_id ) AND EXISTS (     SELECT 1     FROM Likes l     WHERE h.ID = l.student_id OR h.ID = l.liked_id );",
    "exec_result": 0
  },
  {
    "idx": 901,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT DISTINCT h.name FROM Highschooler h INNER JOIN Friend f ON h.ID = f.student_id INNER JOIN Likes l ON h.ID = l.liked_id;",
    "exec_result": 0
  },
  {
    "idx": 902,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(*) AS num_likes FROM Likes GROUP BY student_id;",
    "exec_result": 1
  },
  {
    "idx": 903,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT h.ID, COUNT(*) AS num_likes FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID;",
    "exec_result": 1
  },
  {
    "idx": 904,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name, COUNT(*) AS num_likes FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID, h.name;",
    "exec_result": 1
  },
  {
    "idx": 905,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name, COUNT(l.liked_id) AS num_likes FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID, h.name;",
    "exec_result": 1
  },
  {
    "idx": 906,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.name FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID, h.name ORDER BY COUNT(l.liked_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 907,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.name AS student_name, COUNT(*) AS total_likes FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID, h.name ORDER BY total_likes DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 908,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID, h.name HAVING COUNT(l.liked_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 909,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.ID, h.name HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 910,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id OR h.ID = f.friend_id GROUP BY h.ID, h.name HAVING h.grade > 5 AND COUNT(DISTINCT CASE WHEN f.student_id = h.ID THEN f.friend_id END) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 911,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE h.grade > 5 AND (     SELECT COUNT(*)      FROM Friend f2      WHERE f2.student_id = h.ID ) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 912,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) AS total_likes FROM Likes WHERE liked_id = 1934 AND student_id = 12;",
    "exec_result": 0
  },
  {
    "idx": 913,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) AS num_likes FROM Likes l JOIN Highschooler h ON l.student_id = h.ID AND h.name = 'Kyle'",
    "exec_result": 1
  },
  {
    "idx": 914,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(grade) as average_grade FROM Highschooler WHERE EXISTS (     SELECT 1     FROM Friend     WHERE Highschooler.ID = Friend.student_id     OR Highschooler.ID = Friend.friend_id );",
    "exec_result": 0
  },
  {
    "idx": 915,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(h.grade) AS average_grade_with_friends FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID HAVING COUNT(f.student_id) > 0;",
    "exec_result": 0
  },
  {
    "idx": 916,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(grade) AS min_grade_no_friends FROM Highschooler WHERE NOT EXISTS (     SELECT 1     FROM Friend     WHERE Highschooler.ID = Friend.student_id OR Highschooler.ID = Friend.friend_id )",
    "exec_result": 0
  },
  {
    "idx": 917,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(grade) AS lowest_grade_without_friends FROM Highschooler WHERE NOT EXISTS (     SELECT 1     FROM Friend     WHERE Highschooler.ID = Friend.student_id OR Highschooler.ID = Friend.friend_id );",
    "exec_result": 0
  },
  {
    "idx": 918,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT DISTINCT state FROM Owners o JOIN Professionals p ON o.owner_id = p.professional_id;",
    "exec_result": 0
  },
  {
    "idx": 919,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT DISTINCT o.state, p.state FROM Owners o JOIN Professionals p ON o.owner_id = p.professional_id;",
    "exec_result": 0
  },
  {
    "idx": 920,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(d.age) AS average_age_of_treated_dogs FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY d.dog_id;",
    "exec_result": 0
  },
  {
    "idx": 921,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(Dogs.age) AS Average_Age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;",
    "exec_result": 0
  },
  {
    "idx": 922,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE p.state = 'Indiana' OR EXISTS (     SELECT 1     FROM Treatments t2     WHERE t2.professional_id = p.professional_id AND t2.treatment_id > (SELECT COUNT(*) FROM Treatments WHERE professional_id = p.professional_id) )",
    "exec_result": 0
  },
  {
    "idx": 923,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE p.state IN ('Indiana') OR EXISTS (     SELECT 1     FROM Treatments t2     WHERE t2.professional_id = p.professional_id AND t2.treatment_id > (SELECT COUNT(*) - 2 FROM Treatments WHERE professional_id = p.professional_id) )",
    "exec_result": 0
  },
  {
    "idx": 924,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT d.name FROM Dogs d LEFT JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT D.dog_name FROM Dogs D LEFT JOIN Treatments T ON D.dog_id = T.dog_id WHERE T.cost_of_treatment < 1000 AND T.professional_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT DISTINCT first_name FROM Owners UNION SELECT DISTINCT first_name FROM Professionals EXCEPT SELECT DISTINCT first_name FROM Dogs;",
    "exec_result": 0
  },
  {
    "idx": 927,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT DISTINCT T1.first_name FROM Owners AS T1 JOIN Professionals AS T2 ON T1.first_name = T2.first_name LEFT JOIN Dogs AS T3 ON T1.first_name != T3.name WHERE T1.first_name IS NOT NULL AND T2.first_name IS NOT NULL AND T3.name IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 928,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT p.professional_id, p.role_code, p.email_address FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.professional_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 929,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT p.professional_id, p.role_code, p.email_address FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.professional_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 930,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 931,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 932,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN Treatments t1 ON p.professional_id = t1.professional_id JOIN Treatments t2 ON p.professional_id = t2.professional_id AND t2.treatment_id > t1.treatment_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(t2.treatment_id) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 933,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(t.treatment_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 934,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Breeds.breed_name` FROM `Dogs` JOIN `Breeds` ON `Dogs.breed_code` = `Breeds.breed_code` GROUP BY `Breeds.breed_code` ORDER BY COUNT(`Dogs.dog_id`) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 935,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `breed_name` AS MostCommonBreed FROM `Dogs` GROUP BY `breed_code` ORDER BY COUNT(`dog_id`) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 936,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 937,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.last_name FROM Owners o JOIN Treatments t ON o.owner_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT `treatment_type_description`, SUM(`cost_of_treatment`) AS total_cost FROM `Treatments` JOIN `Treatment_Types` ON `treatment_type_code` = `treatment_type_code` GROUP BY `treatment_type_description` ORDER BY total_cost ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 939,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT t.treatment_type_description, SUM(t.cost_of_treatment) AS total_cost FROM Treatments t GROUP BY t.treatment_type_code ORDER BY total_cost ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 940,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT `owner_id`, `zip_code` FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Charges c ON d.dog_id = c.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(c.charge_amount) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 941,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.zip_code FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 942,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.cell_number FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.cell_number HAVING COUNT(DISTINCT t.treatment_type_code) > 1;",
    "exec_result": 1
  },
  {
    "idx": 943,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.cell_number FROM Professionals p JOIN Treatments t1 ON p.professional_id = t1.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t1.treatment_type_code) > 1;",
    "exec_result": 1
  },
  {
    "idx": 944,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "WITH avg_cost AS (   SELECT AVG(cost_of_treatment) AS avg_cost   FROM Treatments ) SELECT T.professional_id, T.first_name, T.last_name FROM Treatments T JOIN avg_cost AC ON T.cost_of_treatment < AC.avg_cost;",
    "exec_result": 0
  },
  {
    "idx": 945,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT T.professional_id, T.first_name, T.last_name FROM Treatments T JOIN Professionals P ON T.professional_id = P.professional_id WHERE T.cost_of_treatment < (     SELECT AVG(cost_of_treatment)     FROM Treatments )",
    "exec_result": 0
  },
  {
    "idx": 946,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT t.date_of_treatment, p.first_name FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 947,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT date_of_treatment, first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 948,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT Treatments.treatment_type_description, Costs.cost_of_treatment FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code JOIN Professionals ON Treatments.professional_id = Professionals.professional_id JOIN Charges ON Costs.cost_of_treatment = Charges.charge_amount",
    "exec_result": 0
  },
  {
    "idx": 949,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT t.cost_of_treatment, tt.treatment_type_description FROM Treatments t JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code;",
    "exec_result": 1
  },
  {
    "idx": 950,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;",
    "exec_result": 0
  },
  {
    "idx": 951,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT `first_name`, `last_name`, `size_code` FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 952,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 953,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT Owners.first_name AS Owner_First_Name, Dogs.name AS Dog_Name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 954,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT d.name, t.date_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id JOIN (     SELECT breed_code, MIN(breed_count) AS min_breed_count     FROM (         SELECT breed_code, COUNT(*) AS breed_count         FROM Dogs         GROUP BY breed_code     ) AS breed_counts     WHERE breed_count = (         SELECT MIN(count)         FROM (             SELECT COUNT(*) AS count             FROM Dogs         ) AS dog_counts     ) ) AS rarest_breed ON d.breed_code = rarest_breed.breed_code",
    "exec_result": 0
  },
  {
    "idx": 955,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT d.name, t.date_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id JOIN Breeds b ON d.breed_code = b.breed_code GROUP BY d.dog_id, d.name, t.date_of_treatment HAVING COUNT(DISTINCT b.breed_code) = (SELECT MIN(count) FROM (     SELECT COUNT(*) AS count     FROM Breeds ) AS min_breeds) ORDER BY COUNT(DISTINCT b.breed_code) ASC;",
    "exec_result": 0
  },
  {
    "idx": 956,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT o.first_name, d.name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE o.state = 'Virginia';",
    "exec_result": 1
  },
  {
    "idx": 957,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';",
    "exec_result": 1
  },
  {
    "idx": 958,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment IS NOT NULL;",
    "exec_result": 1
  },
  {
    "idx": 959,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment IS NOT NULL;",
    "exec_result": 1
  },
  {
    "idx": 960,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT DISTINCT o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM Dogs)",
    "exec_result": 0
  },
  {
    "idx": 961,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT DISTINCT T2.last_name FROM Dogs AS D JOIN Owners AS T1 ON D.owner_id = T1.owner_id JOIN (     SELECT dog_id, MIN(date_of_birth) AS min dob     FROM Dogs     GROUP BY dog_id ) AS YOUNGEST_DOG ON D.dog_id = YOUNGEST_DOG.dog_id JOIN Owners AS T2 ON T2.owner_id = YOUNGEST_DOG.owner_id ORDER BY YOUNGEST_DOG.min dob ASC;",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT Professionals.email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');",
    "exec_result": 1
  },
  {
    "idx": 963,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT Professionals.email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');",
    "exec_result": 1
  },
  {
    "idx": 964,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 965,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 966,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT Dogs.dog_id) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(*) AS dogs_with_treatment FROM Treatments;",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(*) AS num_profs_with_treatments FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT Professionals.professional_id) FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 970,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT p.role_code, p.street, p.city, p.state FROM Professionals p WHERE p.city LIKE '%West%';",
    "exec_result": 1
  },
  {
    "idx": 971,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT r.role_code, r.street, r.city, r.state FROM Professionals r WHERE r.city LIKE '%West%';",
    "exec_result": 1
  },
  {
    "idx": 972,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT o.first_name, o.last_name, o.email_address FROM Owners o WHERE o.state LIKE '%North%';",
    "exec_result": 1
  },
  {
    "idx": 973,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE '%North%';",
    "exec_result": 1
  },
  {
    "idx": 974,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(Dogs.dog_id) FROM Dogs WHERE Dogs.age < (SELECT AVG(age) FROM Dogs);",
    "exec_result": 1
  },
  {
    "idx": 975,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(Dogs.dog_id) FROM Dogs WHERE Dogs.age < (     SELECT AVG(Dogs.age)     FROM Dogs );",
    "exec_result": 1
  },
  {
    "idx": 976,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT MAX(t.cost_of_treatment) AS MostRecentTreatmentCost FROM Treatments t WHERE t.date_of_treatment = (     SELECT MAX(date_of_treatment)     FROM Treatments );",
    "exec_result": 1
  },
  {
    "idx": 977,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT MAX(`cost_of_treatment`) AS MostRecentTreatmentCost FROM Treatments WHERE `date_of_treatment` = (     SELECT MAX(`date_of_treatment`)     FROM Treatments )",
    "exec_result": 1
  },
  {
    "idx": 978,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT COUNT(Dogs.dog_id) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.dog_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 979,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "pred": "SELECT COUNT(Dogs.dog_id) AS un-treated_dogs FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.treatment_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 980,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(DISTINCT Owners.owner_id) AS owners_without_dogs FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.dog_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 981,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(*) AS owner_without_dogs FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.dog_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 982,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(*) AS ProfessionalsWithoutTreatments FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 983,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(*) AS untrained_professionals FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.dog_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 984,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT d.name, d.age, d.weight FROM Dogs d WHERE d.abandoned_yn = '1';",
    "exec_result": 1
  },
  {
    "idx": 985,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT d.name, d.age, d.weight FROM Dogs d WHERE d.abandoned_yn = '1';",
    "exec_result": 1
  },
  {
    "idx": 986,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(`age`) AS average_age FROM `Dogs`;",
    "exec_result": 1
  },
  {
    "idx": 987,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(`age`) AS average_age FROM `Dogs`;",
    "exec_result": 1
  },
  {
    "idx": 988,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(d.age) AS Oldest_Dog_Age FROM Dogs d",
    "exec_result": 1
  },
  {
    "idx": 989,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(`age`) AS oldest_age FROM `Dogs`;",
    "exec_result": 1
  },
  {
    "idx": 990,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT Charges.charge_type, Charges.charge_amount FROM Charges;",
    "exec_result": 1
  },
  {
    "idx": 991,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT `charge_type`, `charge_amount` FROM `Charges`;",
    "exec_result": 1
  },
  {
    "idx": 992,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT MAX(`charge_amount`) AS most_expensive_charge, `charge_type` FROM Charges WHERE `charge_amount` = (     SELECT MAX(`charge_amount`)     FROM Charges )",
    "exec_result": 0
  },
  {
    "idx": 993,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT MAX(`charge_amount`) AS most_expensive_charge_amount FROM Charges;",
    "exec_result": 1
  },
  {
    "idx": 994,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT email_address, cell_number, home_phone FROM Professionals;",
    "exec_result": 1
  },
  {
    "idx": 995,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT `email_address`, `cell_number`, `home_phone` FROM `Professionals`;",
    "exec_result": 1
  },
  {
    "idx": 996,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT DISTINCT T1.breed_name AS breed_type, T2.size_description AS size_type FROM Breeds T1 JOIN Sizes T2 ON T1.breed_code = T2.size_code;",
    "exec_result": 0
  },
  {
    "idx": 997,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT DISTINCT T1.breed_code, T2.size_code FROM Dogs AS T1 JOIN Sizes AS T2 ON T1.size_code = T2.size_code",
    "exec_result": 1
  },
  {
    "idx": 998,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT T.professional_id, P.first_name, T.treatment_type_description FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id",
    "exec_result": 0
  },
  {
    "idx": 999,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT T.professionals.first_name, T.treatment_type_description FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id",
    "exec_result": 0
  },
  {
    "idx": 1000,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM \"singer\";",
    "exec_result": 1
  },
  {
    "idx": 1001,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) AS Singer_Count FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1002,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;",
    "exec_result": 1
  },
  {
    "idx": 1003,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;",
    "exec_result": 1
  },
  {
    "idx": 1004,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year, Citizenship FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1005,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year, Citizenship FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1006,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT Name FROM singer WHERE Citizenship != 'France';",
    "exec_result": 1
  },
  {
    "idx": 1007,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT `Name` FROM `singer` WHERE `Citizenship` != 'France';",
    "exec_result": 1
  },
  {
    "idx": 1008,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);",
    "exec_result": 1
  },
  {
    "idx": 1009,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);",
    "exec_result": 1
  },
  {
    "idx": 1010,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT `Name` FROM `singer` WHERE `Net_Worth_Millions` = (SELECT MAX(`Net_Worth_Millions`) FROM `singer`)",
    "exec_result": 1
  },
  {
    "idx": 1011,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT `Name` FROM `singer` WHERE `Net_Worth_Millions` = (SELECT MAX(`Net_Worth_Millions`) FROM `singer`)",
    "exec_result": 1
  },
  {
    "idx": 1012,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, COUNT(*) AS Singer_Count FROM singer GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1013,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, COUNT(*) AS Singer_Count FROM singer GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1014,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Citizenship, COUNT(*) AS SingerCount FROM singer GROUP BY Citizenship ORDER BY SingerCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1015,
    "db_id": "singer",
    "question": "",
    "gold": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "pred": "SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1016,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1017,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, MAX(Net_Worth_Millions) AS Maximum_Net_Worth FROM singer GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1018,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT song.Title, singer.Name FROM song INNER JOIN singer ON song.Singer_ID = singer.Singer_ID;",
    "exec_result": 1
  },
  {
    "idx": 1019,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT Song.Title, Singer.Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID;",
    "exec_result": 1
  },
  {
    "idx": 1020,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT Singer_Name FROM singer INNER JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;",
    "exec_result": 0
  },
  {
    "idx": 1021,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT Name FROM singer WHERE Sales > 300000;",
    "exec_result": 0
  },
  {
    "idx": 1022,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT s.Name FROM singer s JOIN song s2 ON s.Singer_ID = s2.Singer_ID GROUP BY s.Name HAVING COUNT(s2.Song_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 1023,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT s.Name FROM singer s INNER JOIN song s2 ON s.Singer_ID = s2.Singer_ID GROUP BY s.Name HAVING COUNT(s.Song_ID) > 1;",
    "exec_result": 0
  },
  {
    "idx": 1024,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT Singer_Name, SUM(Sales) AS Total_Sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY Singer_Name;",
    "exec_result": 0
  },
  {
    "idx": 1025,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT Singer_Name, SUM(Sales) AS Total_Sales FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY Singer_Name;",
    "exec_result": 0
  },
  {
    "idx": 1026,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT s.Name FROM singer s LEFT JOIN song s2 ON s.Singer_ID = s2.Singer_ID WHERE s2.Song_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 1027,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT s.Name FROM singer s LEFT JOIN song s2 ON s.Singer_ID = s2.Singer_ID WHERE s2.Song_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 1028,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;",
    "exec_result": 0
  },
  {
    "idx": 1029,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;",
    "exec_result": 0
  },
  {
    "idx": 1030,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT count(*) FROM Other_Available_Features",
    "pred": "SELECT COUNT(*) AS Total_Available_Features FROM Other_Available_Features;",
    "exec_result": 1
  },
  {
    "idx": 1031,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "pred": "SELECT R.feature_type_name FROM Ref_Feature_Types R INNER JOIN Other_Available_Features OAF ON R.feature_type_code = OAF.feature_type_code WHERE OAF.feature_name = 'AirCon';",
    "exec_result": 1
  },
  {
    "idx": 1032,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "pred": "SELECT p.property_type_description FROM Properties p JOIN Ref_Property_Types r ON p.property_type_code = r.property_type_code WHERE r.property_type_code = 'Apartment';",
    "exec_result": 0
  },
  {
    "idx": 1033,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "pred": "SELECT p.property_name FROM Properties p WHERE p.property_type_code IN ('House', 'Apartment') AND p.room_count > 1;",
    "exec_result": 0
  }
]