[
  {
    "idx": 0,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 2,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT Name, Country, Age  FROM singer  ORDER BY Age DESC;",
    "exec_result": 1
  },
  {
    "idx": 3,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT Name, Country, Age FROM singer ORDER BY Age DESC;",
    "exec_result": 1
  },
  {
    "idx": 4,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';",
    "exec_result": 1
  },
  {
    "idx": 5,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';",
    "exec_result": 1
  },
  {
    "idx": 6,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT Song_Name, Song_release_year  FROM singer  WHERE Age = (SELECT MIN(Age) FROM singer);",
    "exec_result": 1
  },
  {
    "idx": 7,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT Song_Name, Song_release_year  FROM singer  WHERE Age = (SELECT MIN(Age) FROM singer);",
    "exec_result": 1
  },
  {
    "idx": 8,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT Country  FROM singer  WHERE Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 9,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT Country  FROM singer  WHERE Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 10,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country;",
    "exec_result": 1
  },
  {
    "idx": 11,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT Country, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Country;",
    "exec_result": 1
  },
  {
    "idx": 12,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT Song_Name  FROM singer  WHERE Age > (SELECT AVG(Age) FROM singer)",
    "exec_result": 1
  },
  {
    "idx": 13,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT Song_Name  FROM singer  WHERE Age > (SELECT AVG(Age) FROM singer)",
    "exec_result": 1
  },
  {
    "idx": 14,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 15,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 16,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select max(capacity), average from stadium",
    "pred": "SELECT MAX(Capacity), AVG(Capacity) FROM stadium;",
    "exec_result": 0
  },
  {
    "idx": 17,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select avg(capacity) ,  max(capacity) from stadium",
    "pred": "SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM stadium;",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);",
    "exec_result": 1
  },
  {
    "idx": 19,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);",
    "exec_result": 1
  },
  {
    "idx": 20,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*)  FROM concert  WHERE Year IN ('2014', '2015');",
    "exec_result": 1
  },
  {
    "idx": 21,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*)  FROM concert  WHERE Year IN ('2014', '2015')",
    "exec_result": 1
  },
  {
    "idx": 22,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT T1.Name, COUNT(T2.concert_ID) AS NumberOfConcerts FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID;",
    "exec_result": 1
  },
  {
    "idx": 23,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT      s.Stadium_ID,     COUNT(c.concert_ID) AS Number_of_Concerts FROM      stadium s JOIN      concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY      s.Stadium_ID;",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT S.Name, S.Capacity FROM stadium S JOIN concert C ON S.Stadium_ID = C.Stadium_ID WHERE C.Year >= '2014' GROUP BY S.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 25,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "pred": "SELECT T1.Name, T1.Capacity  FROM stadium AS T1  JOIN concert AS T2  ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year > 2013  GROUP BY T1.Stadium_ID  ORDER BY COUNT(T2.concert_ID) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 26,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Year  FROM concert  WHERE Year IN (     SELECT Year      FROM concert      GROUP BY Year      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 27,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Year  FROM concert  WHERE      (SELECT COUNT(*) FROM singer_in_concert sc WHERE concert.concert_ID = sc.concert_ID)      = (SELECT MAX(concert_count) FROM          (SELECT COUNT(*) AS concert_count, concert_Year          FROM concert          GROUP BY concert_Year) sub_query);",
    "exec_result": 0
  },
  {
    "idx": 28,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)",
    "exec_result": 1
  },
  {
    "idx": 29,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)",
    "exec_result": 1
  },
  {
    "idx": 30,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "pred": "SELECT Country  FROM singer  WHERE Age > 40  UNION  SELECT Country  FROM singer  WHERE Age < 30;",
    "exec_result": 0
  },
  {
    "idx": 31,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT Name  FROM stadium  WHERE Stadium_ID NOT IN (     SELECT Stadium_ID      FROM concert      WHERE Year = '2014' )",
    "exec_result": 1
  },
  {
    "idx": 32,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT Name  FROM stadium  WHERE Stadium_ID NOT IN (     SELECT Stadium_ID      FROM concert      WHERE Year = '2014' )",
    "exec_result": 1
  },
  {
    "idx": 33,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "pred": "SELECT c.concert_Name, c.Theme, COUNT(sc.Singer_ID) AS NumberOfSingers FROM concert c JOIN singer_in_concert sc ON c.concert_ID = sc.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;",
    "exec_result": 1
  },
  {
    "idx": 34,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "pred": "SELECT      concert.concert_Name,      concert.Theme,      COUNT(singer_in_concert.Singer_ID) AS Number_of_Singers FROM      concert JOIN      singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY      concert.concert_ID;",
    "exec_result": 1
  },
  {
    "idx": 35,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT s.Name, COUNT(ci.concert_ID) AS NumberOfConcerts FROM singer s JOIN singer_in_concert ci ON s.Singer_ID = ci.Singer_ID GROUP BY s.Name;",
    "exec_result": 1
  },
  {
    "idx": 36,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT s.Name, COUNT(*) AS NumberOfConcerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID GROUP BY s.Name;",
    "exec_result": 1
  },
  {
    "idx": 37,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT DISTINCT T3.Name  FROM concert AS T1  JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID  JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID  WHERE T1.Year = '2014';",
    "exec_result": 1
  },
  {
    "idx": 38,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT s.Name  FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = '2014';",
    "exec_result": 1
  },
  {
    "idx": 39,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT Name, Country  FROM singer  WHERE Song_Name LIKE '%Hey%';",
    "exec_result": 1
  },
  {
    "idx": 40,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';",
    "exec_result": 1
  },
  {
    "idx": 41,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN ('2014', '2015') GROUP BY s.Stadium_ID HAVING COUNT(c.Year) > 1;",
    "exec_result": 1
  },
  {
    "idx": 42,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT T1.Name, T1.Location  FROM stadium AS T1  JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID  WHERE T2.Year IN ('2014', '2015')  GROUP BY T1.Stadium_ID  HAVING COUNT(T2.Year) = 2;",
    "exec_result": 1
  },
  {
    "idx": 43,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID  WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);",
    "exec_result": 1
  },
  {
    "idx": 44,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);",
    "exec_result": 1
  },
  {
    "idx": 45,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*)  FROM Pets  WHERE weight > 10;",
    "exec_result": 1
  },
  {
    "idx": 46,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*)  FROM Pets  WHERE weight > 10;",
    "exec_result": 1
  },
  {
    "idx": 47,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT weight  FROM Pets  WHERE PetType = 'dog'  ORDER BY pet_age ASC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 48,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT weight  FROM Pets  WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')",
    "exec_result": 1
  },
  {
    "idx": 49,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT PetType, MAX(weight) AS MaxWeight FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 50,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT PetType, MAX(weight) AS MaxWeight FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 51,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 52,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 53,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(*)  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE s.Sex = 'F' AND p.PetType = 'dog'",
    "exec_result": 1
  },
  {
    "idx": 54,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(*)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Sex = 'F' AND Pets.PetType = 'dog'",
    "exec_result": 1
  },
  {
    "idx": 55,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) FROM Pets;",
    "exec_result": 1
  },
  {
    "idx": 56,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) FROM Pets;",
    "exec_result": 1
  },
  {
    "idx": 57,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT T1.Fname  FROM Student AS T1  JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.PetType IN ('cat', 'dog')",
    "exec_result": 1
  },
  {
    "idx": 58,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT DISTINCT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType IN ('cat', 'dog')",
    "exec_result": 1
  },
  {
    "idx": 59,
    "db_id": "pets_1",
    "question": "",
    "gold": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "pred": "SELECT S.Fname FROM Student S JOIN Has_Pet HP1 ON S.StuID = HP1.StuID JOIN Has_Pet HP2 ON S.StuID = HP2.StuID JOIN Pets P1 ON HP1.PetID = P1.PetID JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE P1.PetType = 'cat' AND P2.PetType = 'dog'",
    "exec_result": 1
  },
  {
    "idx": 60,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "pred": "SELECT s.Fname  FROM Student s JOIN Has_Pet hp1 ON s.StuID = hp1.StuID JOIN Pets p1 ON hp1.PetID = p1.PetID JOIN Has_Pet hp2 ON s.StuID = hp2.StuID JOIN Pets p2 ON hp2.PetID = p2.PetID WHERE p1.PetType = 'cat' AND p2.PetType = 'dog'",
    "exec_result": 1
  },
  {
    "idx": 61,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT S.Major, S.Age  FROM Student S  JOIN Has_Pet HP ON S.StuID = HP.StuID  JOIN Pets P ON HP.PetID = P.PetID  WHERE P.PetType <> 'cat'",
    "exec_result": 0
  },
  {
    "idx": 62,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT      S.Fname, S.LName, S.Age, ST.Major FROM      Student S JOIN      Has_Pet HP ON S.StuID = HP.StuID JOIN      Pets P ON HP.PetID = P.PetID WHERE      NOT EXISTS (         SELECT 1 FROM Pets P2 WHERE P2.PetType = 'cat' AND P2.PetID IN (SELECT PetID FROM Has_Pet WHERE StuID = S.StuID)     ) ORDER BY      S.Fname, S.LName;",
    "exec_result": 0
  },
  {
    "idx": 63,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT DISTINCT StuID  FROM Student  WHERE StuID NOT IN (     SELECT StuID      FROM Has_Pet      JOIN Pets ON Has_Pet.PetID = Pets.PetID      WHERE PetType = 'cat' )",
    "exec_result": 1
  },
  {
    "idx": 64,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT s.StuID  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE p.PetType <> 'cat'",
    "exec_result": 0
  },
  {
    "idx": 65,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT S.Fname, S.Age FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'dog' AND NOT EXISTS (     SELECT 1 FROM Has_Pet HP2 JOIN Pets P2 ON HP2.PetID = P2.PetID     WHERE HP2.StuID = S.StuID AND P2.PetType = 'cat' )",
    "exec_result": 1
  },
  {
    "idx": 66,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT S.Fname  FROM Student S  JOIN Has_Pet HP ON S.StuID = HP.StuID  JOIN Pets P ON HP.PetID = P.PetID  WHERE P.PetType = 'dog'  AND NOT EXISTS (     SELECT 1 FROM Has_Pet HP2 JOIN Pets P2 ON HP2.PetID = P2.PetID      WHERE HP2.StuID = HP.StuID AND P2.PetType = 'cat' );",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT PetType, weight  FROM Pets  WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);",
    "exec_result": 1
  },
  {
    "idx": 68,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT PetType, weight  FROM Pets  WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);",
    "exec_result": 1
  },
  {
    "idx": 69,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT P.PetID, P.weight  FROM Pets P  JOIN Has_Pet HP ON P.PetID = HP.PetID  WHERE P.pet_age > 1;",
    "exec_result": 1
  },
  {
    "idx": 70,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT P.PetID, P.weight FROM Pets P WHERE P.pet_age > 1;",
    "exec_result": 1
  },
  {
    "idx": 71,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaxAge FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 72,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(pet_age) AS AverageAge, MAX(pet_age) AS MaxAge FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 73,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(weight) AS AverageWeight FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 74,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT PetType, AVG(weight) AS AverageWeight FROM Pets GROUP BY PetType;",
    "exec_result": 1
  },
  {
    "idx": 75,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT S.Fname, S.Age  FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID;",
    "exec_result": 1
  },
  {
    "idx": 76,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT DISTINCT S.Fname, S.Age FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID;",
    "exec_result": 1
  },
  {
    "idx": 77,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT H.PetID FROM Has_Pet H JOIN Student S ON H.StuID = S.StuID WHERE S.LName = 'Smith'",
    "exec_result": 1
  },
  {
    "idx": 78,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT P.PetID FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.LName = 'Smith';",
    "exec_result": 1
  },
  {
    "idx": 79,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "pred": "SELECT Student.StuID, COUNT(Has_Pet.PetID) AS Num_of_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID;",
    "exec_result": 1
  },
  {
    "idx": 80,
    "db_id": "pets_1",
    "question": "",
    "gold": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "pred": "SELECT StuID, COUNT(*) AS NumberOfPets FROM Has_Pet GROUP BY StuID;",
    "exec_result": 1
  },
  {
    "idx": 81,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT S.Fname, S.Sex  FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID GROUP BY S.StuID HAVING COUNT(*) > 1;",
    "exec_result": 1
  },
  {
    "idx": 82,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT S.Fname, S.Sex FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID GROUP BY S.StuID HAVING COUNT(*) > 1;",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT T1.LName  FROM Student AS T1  JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID  JOIN Pets AS T3 ON T2.PetID = T3.PetID  WHERE T3.pet_age = 3 AND T3.PetType = 'cat'",
    "exec_result": 1
  },
  {
    "idx": 84,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'cat' AND T3.pet_age = 3;",
    "exec_result": 1
  },
  {
    "idx": 85,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(Student.Age)  FROM Student  WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
    "exec_result": 1
  },
  {
    "idx": 86,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(Student.Age)  FROM Student  WHERE Student.StuID NOT IN (SELECT StuID FROM Has_Pet)",
    "exec_result": 1
  },
  {
    "idx": 87,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(*) FROM continents;",
    "exec_result": 1
  },
  {
    "idx": 88,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(*) FROM continents;",
    "exec_result": 1
  },
  {
    "idx": 89,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT c.ContId, c.Continent, COUNT(co.CountryId) AS NumberOfCountries FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.ContId, c.Continent;",
    "exec_result": 1
  },
  {
    "idx": 90,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT c.ContId, c.Continent, COUNT(co.CountryId) AS NumberOfCountries FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.ContId, c.Continent;",
    "exec_result": 1
  },
  {
    "idx": 91,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT COUNT(*) FROM countries;",
    "exec_result": 1
  },
  {
    "idx": 92,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT COUNT(*) FROM countries;",
    "exec_result": 1
  },
  {
    "idx": 93,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT cm.FullName, cm.Id, COUNT(DISTINCT cn.Model) AS NumberOfModelsProduced FROM car_makers cm JOIN car_names cn ON cm.Id = cn.MakeId GROUP BY cm.Id, cm.FullName ORDER BY NumberOfModelsProduced DESC;",
    "exec_result": 0
  },
  {
    "idx": 94,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT Id, Maker, COUNT(Model) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY Id, Maker;",
    "exec_result": 0
  },
  {
    "idx": 95,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT Model FROM car_names WHERE MakeId = (SELECT Id FROM car_makers WHERE Maker IN (SELECT Maker FROM cars_data WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data)))",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT Model FROM car_names WHERE MakeId = (     SELECT Id FROM cars_data ORDER BY Horsepower ASC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 97,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT Model FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT Model FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data);",
    "exec_result": 0
  },
  {
    "idx": 99,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT DISTINCT T1.FullName FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year = 1970;",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT DISTINCT T1.FullName FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN cars_data AS T3 ON T2.MakeId = T3.Id WHERE T3.Year = 1970;",
    "exec_result": 0
  },
  {
    "idx": 101,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT T1.Make, MIN(T4.Year) AS EarliestYear FROM car_names AS T1 JOIN car_makers AS T2 ON T1.Model = T3.Model AND T1.Maker = T2.Id JOIN model_list AS T3 ON T1.Model = T3.ModelId JOIN cars_data AS T4 ON T1.MakeId = T4.Id GROUP BY T1.Make ORDER BY EarliestYear ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 102,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT T2.FullName, T3.Year FROM cars_data AS T3 JOIN car_names AS T2 ON T3.Id = T2.MakeId JOIN car_makers AS T1 ON T2.Country = T1.Country WHERE T3.Year = (SELECT MIN(Year) FROM cars_data) LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 103,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Year > 1980);",
    "exec_result": 1
  },
  {
    "idx": 104,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT Model FROM car_names WHERE MakeId IN (SELECT Id FROM cars_data WHERE Year > 1980);",
    "exec_result": 1
  },
  {
    "idx": 105,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT c.Continent, COUNT(cm.Id) AS NumberOfCarMakers FROM continents c JOIN countries co ON c.ContId = co.Continent JOIN car_makers cm ON co.CountryId = cm.Country GROUP BY c.Continent;",
    "exec_result": 1
  },
  {
    "idx": 106,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT c.Continent, COUNT(cm.Id) AS NumberOfMakers FROM continents c JOIN countries co ON c.ContId = co.Continent JOIN car_makers cm ON co.CountryId = cm.Country GROUP BY c.Continent;",
    "exec_result": 1
  },
  {
    "idx": 107,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryName ORDER BY COUNT(cm.Id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 108,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryId, c.CountryName ORDER BY COUNT(cm.Id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 109,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "pred": "SELECT COUNT(T2.Model), T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName;",
    "exec_result": 1
  },
  {
    "idx": 110,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "pred": "SELECT c.Id, c.FullName, COUNT(m.ModelId) AS NumberOfModels FROM car_makers c JOIN model_list m ON c.Id = m.Maker GROUP BY c.Id, c.FullName;",
    "exec_result": 1
  },
  {
    "idx": 111,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT `Accelerate` FROM `cars_data` WHERE `MakeId` = (     SELECT `MakeId` FROM `car_names` WHERE `Model` = 'hornet sportabout' AND `Make` = 'amc' )",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT Accelerate FROM cars_data WHERE MakeId = (SELECT Id FROM car_names WHERE Model = 'amc hornet sportabout (sw)');",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(*) FROM car_makers WHERE Country = 'france';",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(*)  FROM car_makers  WHERE Country = 'France';",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(*)  FROM car_makers  WHERE Country = 'usa';",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(*)  FROM car_makers  JOIN countries ON car_makers.Country = countries.CountryId  WHERE countries.Continent = 2; -- Europe's ContId is 2 based on the given schema",
    "exec_result": 0
  },
  {
    "idx": 117,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(T1.MPG)  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T2.Model = '4 cylinders'",
    "exec_result": 0
  },
  {
    "idx": 118,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(`MPG`)  FROM `cars_data`  WHERE `Cylinders` = 4;",
    "exec_result": 1
  },
  {
    "idx": 119,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT Weight FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON car_names.Maker = car_makers.Id WHERE Cylinders = 8 AND Year = 1974 ORDER BY Weight ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 120,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT MIN(`Weight`) FROM `cars_data` JOIN `car_names` ON `cars_data.Id` = `car_names.MakeId` JOIN `model_list` ON `car_names.Model` = `model_list.Model` JOIN `car_makers` ON `car_names.Make` = `car_makers.FullName` JOIN `countries` ON `car_makers.Country` = `countries.CountryName` JOIN `continents` ON `countries.Continent` = `continents.ContId` WHERE `model_list.Cylinders` = 8 AND `cars_data.Year` = 1974;",
    "exec_result": 0
  },
  {
    "idx": 121,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT Maker, Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;",
    "exec_result": 0
  },
  {
    "idx": 122,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;",
    "exec_result": 0
  },
  {
    "idx": 123,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT c.CountryName, c.CountryId  FROM countries c  JOIN car_makers cm ON c.CountryId = cm.Country;",
    "exec_result": 0
  },
  {
    "idx": 124,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT CountryName, CountryId FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)",
    "exec_result": 1
  },
  {
    "idx": 125,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;",
    "exec_result": 1
  },
  {
    "idx": 126,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*)  FROM cars_data  WHERE Horsepower > 150;",
    "exec_result": 1
  },
  {
    "idx": 127,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT Year, AVG(Weight) AS AverageWeight FROM cars_data;",
    "exec_result": 0
  },
  {
    "idx": 128,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT Year, AVG(Weight), AVG(`Year`) FROM cars_data GROUP BY Year;",
    "exec_result": 0
  },
  {
    "idx": 129,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe') GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;",
    "exec_result": 1
  },
  {
    "idx": 130,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3 WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'europe')",
    "exec_result": 0
  },
  {
    "idx": 131,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT T2.Horsepower, T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 3 ORDER BY T2.Horsepower DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 132,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT T2.Horsepower, T1.FullName FROM car_makers AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.ModelId IN (     SELECT ModelId     FROM cars_data     WHERE Cylinders = 3 ) ORDER BY T2.Horsepower DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 133,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "pred": "SELECT Model FROM cars_data WHERE MPG = (SELECT MAX(MPG) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 134,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "pred": "SELECT Model FROM car_names WHERE MakeId = (SELECT Id FROM cars_data ORDER BY MPG DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 135,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "pred": "SELECT AVG(T1.Horsepower)  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  JOIN model_list AS T3 ON T2.Model = T3.ModelId  WHERE T3.Year < 1980",
    "exec_result": 0
  },
  {
    "idx": 136,
    "db_id": "car_1",
    "question": "",
    "gold": "select avg(horsepower) from cars_data where year  <  1980;",
    "pred": "SELECT AVG(T1.Horsepower)  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T1.Year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 137,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(T2.Edispl)  FROM car_names AS T1  JOIN cars_data AS T2 ON T1.MakeId = T2.Id  JOIN model_list AS T3 ON T3.ModelId = T1.Model  JOIN car_makers AS T4 ON T4.Id = T3.Maker  WHERE T4.FullName = 'volvo'",
    "exec_result": 0
  },
  {
    "idx": 138,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(T1.Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model JOIN car_makers AS T4 ON T4.Id = T2.Maker WHERE T4.FullName = 'volvo'",
    "exec_result": 0
  },
  {
    "idx": 139,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT Cylinders, MAX(Accelerate)  FROM cars_data  GROUP BY Cylinders;",
    "exec_result": 1
  },
  {
    "idx": 140,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT MAX(T1.Accelerate), T1.Cylinders FROM cars_data AS T1 GROUP BY T1.Cylinders;",
    "exec_result": 1
  },
  {
    "idx": 141,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 142,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT ModelId, COUNT(*) AS version_count FROM cars_data GROUP BY ModelId ORDER BY version_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 143,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;",
    "exec_result": 1
  },
  {
    "idx": 144,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;",
    "exec_result": 1
  },
  {
    "idx": 145,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*)  FROM cars_data  WHERE Year = 1980;",
    "exec_result": 1
  },
  {
    "idx": 146,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*)  FROM cars_data  WHERE Year = 1980;",
    "exec_result": 1
  },
  {
    "idx": 147,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(*)  FROM car_makers cm  JOIN model_list ml ON cm.Id = ml.Maker  WHERE cm.FullName = 'American Motor Company';",
    "exec_result": 1
  },
  {
    "idx": 148,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(*) FROM car_makers cm JOIN car_names cn ON cm.Id = cn.MakeId WHERE cm.FullName = 'American Motor Company';",
    "exec_result": 1
  },
  {
    "idx": 149,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT cm.FullName, cm.Id FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.Id HAVING COUNT(ml.Model) > 3;",
    "exec_result": 1
  },
  {
    "idx": 150,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT MakeId, Model FROM car_names JOIN car_makers ON car_names.Make = car_makers.FullName GROUP BY MakeId HAVING COUNT(Model) > 3;",
    "exec_result": 0
  },
  {
    "idx": 151,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT T3.Model  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  JOIN car_makers AS T3 ON T2.Maker = T3.Id  WHERE T3.FullName = 'General Motors' OR T1.Weight > 3500",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.ModelId WHERE T3.FullName = 'General Motors' OR T1.Weight > 3500",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT Year  FROM cars_data  WHERE Weight BETWEEN 3000 AND 4000;",
    "exec_result": 1
  },
  {
    "idx": 154,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 UNION SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000;",
    "exec_result": 0
  },
  {
    "idx": 155,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY T1.Accelerate DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 156,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY T1.Accelerate DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT MIN(T1.Cylinders) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T4.FullName = 'Volvo'",
    "exec_result": 0
  },
  {
    "idx": 158,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT MIN(T3.Cylinders) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.ModelId WHERE T3.FullName = 'Volvo'",
    "exec_result": 0
  },
  {
    "idx": 159,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) FROM cars_data c WHERE c.Accelerate > (SELECT MAX(Horsepower) FROM cars_data cd)",
    "exec_result": 0
  },
  {
    "idx": 160,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)",
    "exec_result": 0
  },
  {
    "idx": 161,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(*) FROM (     SELECT CountryId FROM car_makers GROUP BY CountryId HAVING COUNT(Id) > 2 ) AS subquery;",
    "exec_result": 0
  },
  {
    "idx": 162,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(*) FROM (     SELECT CountryId FROM car_makers     GROUP BY CountryId     HAVING COUNT(Id) > 2 ) AS subquery;",
    "exec_result": 0
  },
  {
    "idx": 163,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;",
    "exec_result": 1
  },
  {
    "idx": 164,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;",
    "exec_result": 1
  },
  {
    "idx": 165,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT Model FROM car_names WHERE MakeId IN (     SELECT Id FROM cars_data WHERE Cylinders = 4     ORDER BY Horsepower DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 166,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT T1.Model FROM `car_names` AS T1 JOIN `cars_data` AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.Horsepower DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 167,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "pred": "SELECT T1.MakeId, T2.FullName FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model WHERE T3.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND T1.Cylinders <= 3;",
    "exec_result": 0
  },
  {
    "idx": 168,
    "db_id": "car_1",
    "question": "",
    "gold": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "pred": "SELECT T1.MakeId, T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower != 'min' AND T2.Cylinders < 4",
    "exec_result": 0
  },
  {
    "idx": 169,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT MAX(MPG)  FROM cars_data  WHERE Cylinders = 8 OR Year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 170,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT MAX(T1.MPG)  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  WHERE T2.Model LIKE '%8cyl%' OR T2.Year < 1980;",
    "exec_result": 0
  },
  {
    "idx": 171,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT T3.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.ModelId WHERE T1.Weight < 3500 AND T2.FullName != 'Ford Motor Company'",
    "exec_result": 0
  },
  {
    "idx": 172,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT T1.Model  FROM cars_data AS T1  JOIN car_names AS T2 ON T1.Id = T2.MakeId  JOIN model_list AS T3 ON T2.Model = T3.ModelId  JOIN car_makers AS T4 ON T4.Id = T3.Maker  WHERE T1.Weight < 3500 AND T4.FullName = 'Ford Motor Company' GROUP BY T1.Model;",
    "exec_result": 0
  },
  {
    "idx": 173,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT c.CountryName FROM countries c LEFT JOIN car_makers cm ON c.CountryId = cm.Country WHERE cm.Id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 174,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)",
    "exec_result": 1
  },
  {
    "idx": 175,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "pred": "SELECT Id, Maker FROM car_makers WHERE Id IN (     SELECT Model FROM model_list GROUP BY Model HAVING COUNT(*) >= 2 ) AND Id IN (     SELECT DISTINCT MakerId FROM car_names GROUP BY MakerId HAVING COUNT(*) > 3 )",
    "exec_result": 0
  },
  {
    "idx": 176,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT T1.Id, T1.Maker FROM car_makers AS T1  JOIN model_list AS T2 ON T1.Id = T2.Maker  GROUP BY T1.Id, T1.Maker  HAVING COUNT(T2.Model) >= 2  AND COUNT(T2.Model) <= 3;",
    "exec_result": 0
  },
  {
    "idx": 177,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "pred": "SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryId, c.CountryName HAVING COUNT(cm.Id) > 3 UNION SELECT cn.CountryId, cn.CountryName FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.ModelId = cn.MakeId WHERE cn.Model = 'fiat';",
    "exec_result": 0
  },
  {
    "idx": 178,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "pred": "SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryId, c.CountryName HAVING COUNT(cm.Id) > 3 UNION SELECT cd.MakeId, cn.Model || ' (' || cm.FullName || ')' FROM car_names cn JOIN car_makers cm ON cn.Make = cm.FullName JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cn.Model = 'fiat'",
    "exec_result": 0
  },
  {
    "idx": 179,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';",
    "exec_result": 1
  },
  {
    "idx": 180,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';",
    "exec_result": 1
  },
  {
    "idx": 182,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';",
    "exec_result": 0
  },
  {
    "idx": 183,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 184,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 185,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';",
    "exec_result": 1
  },
  {
    "idx": 186,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT AirportCode, AirportName  FROM airports  WHERE City = 'Anthony';",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT COUNT(*) FROM airlines;",
    "exec_result": 1
  },
  {
    "idx": 188,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT COUNT(*) FROM airlines;",
    "exec_result": 1
  },
  {
    "idx": 189,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(*) FROM airports;",
    "exec_result": 1
  },
  {
    "idx": 190,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(*) FROM airports;",
    "exec_result": 1
  },
  {
    "idx": 191,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) FROM flights;",
    "exec_result": 1
  },
  {
    "idx": 192,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) FROM flights;",
    "exec_result": 1
  },
  {
    "idx": 193,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';",
    "exec_result": 1
  },
  {
    "idx": 194,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';",
    "exec_result": 1
  },
  {
    "idx": 195,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 196,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) FROM airlines WHERE Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 197,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT City, Country FROM airports WHERE AirportCode = 'Alton';",
    "exec_result": 1
  },
  {
    "idx": 198,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT City, Country FROM airports WHERE AirportCode = 'Alton'",
    "exec_result": 1
  },
  {
    "idx": 199,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO';",
    "exec_result": 1
  },
  {
    "idx": 200,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode = 'AKO';",
    "exec_result": 1
  },
  {
    "idx": 201,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 202,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT AirportName FROM airports WHERE City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.City = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 204,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 205,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*)  FROM flights  WHERE DestAirport = 'ATO';",
    "exec_result": 1
  },
  {
    "idx": 206,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'ATO'",
    "exec_result": 1
  },
  {
    "idx": 207,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 208,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 209,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*)  FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE a.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 210,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 211,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*)  FROM flights f  JOIN airports s ON f.SourceAirport = s.AirportCode  JOIN airports d ON f.DestAirport = d.AirportCode  WHERE s.City = 'Aberdeen' AND d.City = 'Ashley';",
    "exec_result": 1
  },
  {
    "idx": 212,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports AS source ON flights.SourceAirport = source.AirportCode  JOIN airports AS dest ON flights.DestAirport = dest.AirportCode  WHERE source.City = 'Aberdeen' AND dest.City = 'Ashley'",
    "exec_result": 1
  },
  {
    "idx": 213,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*)  FROM flights  WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'JetBlue Airways')",
    "exec_result": 1
  },
  {
    "idx": 214,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) FROM flights WHERE Airline = 4;",
    "exec_result": 1
  },
  {
    "idx": 215,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airlines ON flights.Airline = airlines.uid  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airlines.Airline = 'UAL' AND airports.AirportCode = 'ASY'",
    "exec_result": 1
  },
  {
    "idx": 216,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'UAL' AND airports.AirportCode = 'ASY';",
    "exec_result": 1
  },
  {
    "idx": 217,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airlines ON airlines.uid = flights.Airline  JOIN airports ON airports.AirportCode = flights.SourceAirport  WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 218,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airlines ON airlines.uid = flights.Airline  JOIN airports ON airports.AirportCode = flights.SourceAirport  WHERE airlines.Airline = 'United Airlines' AND airports.City = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 219,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airlines ON flights.Airline = airlines.uid  JOIN airports ON flights.SourceAirport = airports.AirportCode  WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 220,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE flights.Airline = 1 AND airports.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 221,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T3.City FROM flights AS T1  JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode  JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode  GROUP BY T3.City  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 222,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.City FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode GROUP BY T1.DestAirport ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 223,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T3.City FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode GROUP BY T3.City ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 224,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT City FROM airports WHERE AirportCode IN (SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 225,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT AirportCode FROM airports WHERE AirportCode IN (     SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1 ) UNION SELECT AirportCode FROM airports WHERE AirportCode IN (     SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 226,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT AirportCode FROM airports WHERE AirportCode IN (     SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1 ) UNION SELECT AirportCode FROM airports WHERE AirportCode IN (     SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 227,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT AirportCode FROM airports WHERE AirportCode IN (     SELECT DestAirport     FROM flights     GROUP BY DestAirport     ORDER BY COUNT(*) ASC     LIMIT 1 ) UNION SELECT AirportCode FROM airports WHERE AirportCode IN (     SELECT SourceAirport     FROM flights     GROUP BY SourceAirport     ORDER BY COUNT(*) ASC     LIMIT 1 ) ORDER BY 1 LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 228,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT AirportCode  FROM airports  WHERE AirportCode IN (     SELECT DestAirport      FROM flights      GROUP BY DestAirport      ORDER BY COUNT(*) ASC      LIMIT 1 ) UNION SELECT AirportCode  FROM airports  WHERE AirportCode IN (     SELECT SourceAirport      FROM flights      GROUP BY SourceAirport      ORDER BY COUNT(*) ASC      LIMIT 1 ) ORDER BY 1 LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 229,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Airline, COUNT(*) AS NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 231,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.Abbreviation, T1.Country FROM airlines AS T1 JOIN (     SELECT Airline, COUNT(*) AS flight_count     FROM flights     GROUP BY Airline     ORDER BY flight_count ASC     LIMIT 1 ) AS T2 ON T1.uid = T2.Airline;",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "SELECT A.Abbreviation, C.Country FROM airlines A JOIN (     SELECT Airline, COUNT(*) AS flight_count     FROM flights     GROUP BY Airline     ORDER BY flight_count ASC     LIMIT 1 ) B ON A.uid = B.Airline JOIN airlines C ON A.uid = C.uid;",
    "exec_result": 0
  },
  {
    "idx": 233,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT T1.Airline  FROM airlines AS T1  JOIN flights AS T2 ON T1.uid = T2.Airline  JOIN airports AS T3 ON T3.AirportCode = T2.SourceAirport  WHERE T3.AirportCode = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 234,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = 'AHD'",
    "exec_result": 1
  },
  {
    "idx": 235,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 236,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'APG' INTERSECT SELECT DISTINCT Airline FROM flights WHERE DestAirport = 'CVO'",
    "exec_result": 1
  },
  {
    "idx": 238,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT DISTINCT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T3.AirportCode = T2.SourceAirport WHERE T3.City IN ('APG', 'CVO') GROUP BY T1.Airline HAVING COUNT(T3.City) = 2;",
    "exec_result": 1
  },
  {
    "idx": 239,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO' AND DestAirport NOT IN (SELECT AirportCode FROM airports WHERE City = 'APG')",
    "exec_result": 1
  },
  {
    "idx": 240,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT DISTINCT A.Airline  FROM airlines A  JOIN flights F ON A.uid = F.Airline  JOIN airports S ON F.SourceAirport = S.AirportCode  JOIN airports D ON F.DestAirport = D.AirportCode  WHERE S.City = 'CVO' AND D.City != 'APG'",
    "exec_result": 1
  },
  {
    "idx": 241,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(T2.Airline) >= 10",
    "exec_result": 1
  },
  {
    "idx": 242,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10;",
    "exec_result": 0
  },
  {
    "idx": 243,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT DISTINCT Airline FROM airlines WHERE Airline IN (     SELECT T1.Airline FROM airlines AS T1     JOIN flights AS T2 ON T1.uid = T2.Airline     GROUP BY T1.Airline     HAVING COUNT(T2.FlightNo) < 200 )",
    "exec_result": 1
  },
  {
    "idx": 244,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING COUNT(*) < 200",
    "exec_result": 1
  },
  {
    "idx": 245,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE a.Airline = 'United Airlines'",
    "exec_result": 1
  },
  {
    "idx": 246,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT T2.FlightNo FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline = 'United Airlines'",
    "exec_result": 1
  },
  {
    "idx": 247,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT T2.FlightNo FROM `flights` AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.AirportName = 'APG'",
    "exec_result": 0
  },
  {
    "idx": 248,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.City = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 249,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT T2.FlightNo FROM `flights` AS T2 JOIN airports AS T1 ON T2.DestAirport = T1.AirportCode WHERE T1.AirportName = \"APG\"",
    "exec_result": 1
  },
  {
    "idx": 250,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT T2.FlightNo FROM `flights` AS T2 JOIN airports AS T1 ON T2.DestAirport = T1.AirportCode WHERE T1.AirportCode = 'APG'",
    "exec_result": 1
  },
  {
    "idx": 251,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT T2.FlightNo FROM `airports` AS T1 JOIN `flights` AS T2 ON T1.AirportCode = T2.SourceAirport WHERE T1.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 252,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT T2.FlightNo FROM `flights` AS T1 JOIN `airports` AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen'",
    "exec_result": 0
  },
  {
    "idx": 253,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT T3.FlightNo FROM airports AS T1 JOIN flights AS T3 ON T1.AirportCode = T3.DestAirport WHERE T1.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 254,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT T2.FlightNo FROM `airports` AS T1 JOIN `flights` AS T2 ON T1.AirportCode = T2.DestAirport WHERE T1.City = 'Aberdeen'",
    "exec_result": 1
  },
  {
    "idx": 255,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City IN ('Aberdeen', 'Abilene')",
    "exec_result": 1
  },
  {
    "idx": 256,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*)  FROM flights  JOIN airports ON flights.DestAirport = airports.AirportCode  WHERE airports.City IN ('Aberdeen', 'Abilene')",
    "exec_result": 1
  },
  {
    "idx": 257,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights);",
    "exec_result": 1
  },
  {
    "idx": 258,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights);",
    "exec_result": 0
  },
  {
    "idx": 259,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) FROM employee;",
    "exec_result": 1
  },
  {
    "idx": 260,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) FROM employee;",
    "exec_result": 1
  },
  {
    "idx": 261,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT Name  FROM employee  ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 262,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT Name FROM employee ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 263,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT City, COUNT(*) AS Number_of_Employees FROM employee GROUP BY City;",
    "exec_result": 1
  },
  {
    "idx": 264,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT City, COUNT(*) AS NumberOfEmployees FROM employee GROUP BY City;",
    "exec_result": 1
  },
  {
    "idx": 265,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT City  FROM employee  WHERE Age < 30  GROUP BY City  HAVING COUNT(Employee_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT City  FROM employee  WHERE Age < 30  GROUP BY City  HAVING COUNT(Employee_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 267,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;",
    "exec_result": 1
  },
  {
    "idx": 268,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;",
    "exec_result": 1
  },
  {
    "idx": 269,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT T2.Manager_name, T2.District  FROM shop AS T2  JOIN  (SELECT Shop_ID, MAX(Number_products) AS MaxProducts   FROM shop   GROUP BY Shop_ID) AS T1  ON T2.Shop_ID = T1.Shop_ID  ORDER BY T1.MaxProducts DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 270,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT s.Manager_name, s.District  FROM shop s  WHERE s.Number_products = (SELECT MAX(Number_products) FROM shop);",
    "exec_result": 1
  },
  {
    "idx": 271,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(Number_products) AS Min_Products, MAX(Number_products) AS Max_Products FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 272,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(Number_products), MAX(Number_products) FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 273,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT Name, Location, District  FROM shop  ORDER BY Number_products DESC;",
    "exec_result": 1
  },
  {
    "idx": 274,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;",
    "exec_result": 1
  },
  {
    "idx": 275,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT s.Name  FROM shop s  WHERE s.Number_products > (SELECT AVG(Number_products) FROM shop)",
    "exec_result": 1
  },
  {
    "idx": 276,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)",
    "exec_result": 1
  },
  {
    "idx": 277,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Name  FROM employee  WHERE Employee_ID IN (     SELECT Employee_ID      FROM evaluation      GROUP BY Employee_ID      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 278,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name  FROM employee AS T1  JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID  GROUP BY T1.Employee_ID, T1.Name  ORDER BY COUNT(T2.Year_awarded) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 279,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT Name  FROM employee  WHERE Employee_ID = (SELECT Employee_ID FROM evaluation ORDER BY Bonus DESC LIMIT 1);",
    "exec_result": 1
  },
  {
    "idx": 280,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation ORDER BY Bonus DESC LIMIT 1);",
    "exec_result": 1
  },
  {
    "idx": 281,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT Name  FROM employee  WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation);",
    "exec_result": 1
  },
  {
    "idx": 283,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 284,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(T1.Employee_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 285,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT s.Name FROM shop s WHERE s.Shop_ID NOT IN (SELECT h.Shop_ID FROM hiring h);",
    "exec_result": 1
  },
  {
    "idx": 286,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT s.Name FROM shop s WHERE s.Shop_ID NOT IN (SELECT h.Shop_ID FROM hiring h);",
    "exec_result": 1
  },
  {
    "idx": 287,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT s.Name, COUNT(h.Shop_ID) AS Number_of_employees_hired FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name;",
    "exec_result": 1
  },
  {
    "idx": 288,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT COUNT(h.Shop_ID) AS NumberOfEmployees, s.Name AS ShopName FROM hiring h JOIN shop s ON h.Shop_ID = s.Shop_ID GROUP BY h.Shop_ID, s.Name;",
    "exec_result": 1
  },
  {
    "idx": 289,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(`Bonus`) FROM `evaluation`;",
    "exec_result": 1
  },
  {
    "idx": 290,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(Bonus) FROM evaluation;",
    "exec_result": 1
  },
  {
    "idx": 291,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT * FROM hiring;",
    "exec_result": 1
  },
  {
    "idx": 292,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT * FROM hiring;",
    "exec_result": 1
  },
  {
    "idx": 293,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT District  FROM shop  WHERE Number_products < 3000  UNION  SELECT District  FROM shop  WHERE Number_products > 10000;",
    "exec_result": 0
  },
  {
    "idx": 294,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT DISTINCT District  FROM shop  WHERE Number_products < 3000  UNION  SELECT DISTINCT District  FROM shop  WHERE Number_products > 10000;",
    "exec_result": 0
  },
  {
    "idx": 295,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT Location) FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 296,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT Location) FROM shop;",
    "exec_result": 1
  },
  {
    "idx": 297,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(*) FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 298,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(*) FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 299,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT Document_ID, Document_Name, Document_Description FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 300,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT Document_ID, Document_Name, Document_Description FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 301,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT d.Document_Name, t.Template_ID FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Description LIKE '%w%';",
    "exec_result": 1
  },
  {
    "idx": 302,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT Document_Name, Document_ID  FROM Documents  WHERE Document_Description LIKE '%w%';",
    "exec_result": 0
  },
  {
    "idx": 303,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT Documents.Document_ID, Templates.Template_ID, Templates.Template_Type_Code, Templates.Template_Details  FROM Documents  JOIN Templates ON Documents.Template_ID = Templates.Template_ID  WHERE Templates.Template_Type_Code = 'CV' AND Documents.Document_Name = 'Robbin CV';",
    "exec_result": 0
  },
  {
    "idx": 304,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT D.Document_ID, T.Template_ID, D.Document_Description  FROM Documents D  JOIN Templates T ON D.Template_ID = T.Template_ID  WHERE D.Document_Name = 'Robbin CV';",
    "exec_result": 1
  },
  {
    "idx": 305,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT Template_ID)  FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 306,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT Template_ID)  FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 307,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(*)  FROM Templates  JOIN Documents ON Templates.Template_ID = Documents.Template_ID  WHERE Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(*)  FROM Templates  JOIN Documents ON Templates.Template_ID = Documents.Template_ID  WHERE Templates.Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 309,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT      T.Template_ID,     COUNT(D.DOCUMENT_ID) AS Number_of_Documents FROM      Templates T LEFT JOIN      Documents D ON T.Template_ID = D.Template_ID GROUP BY      T.Template_ID;",
    "exec_result": 0
  },
  {
    "idx": 310,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT Template_ID, COUNT(*) AS Usage_Counter FROM Documents GROUP BY Template_ID ORDER BY Usage_Counter DESC;",
    "exec_result": 1
  },
  {
    "idx": 311,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Template_ID, T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_Type_Code, T2.Template_ID ORDER BY COUNT(T2.Document_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 312,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Template_ID, T2.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T1.Template_ID = T3.Template_ID GROUP BY T1.Template_ID, T2.Template_Type_Code ORDER BY COUNT(T3.Document_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 313,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT Template_ID  FROM Templates  JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Template_ID  HAVING COUNT(DISTINCT Document_ID) > 1;",
    "exec_result": 0
  },
  {
    "idx": 314,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT T.Template_ID FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID HAVING COUNT(D.Document_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 315,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT Template_ID  FROM Templates  WHERE Template_ID NOT IN (     SELECT Template_ID      FROM Documents )",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT Template_ID  FROM Templates  WHERE Template_ID NOT IN (     SELECT Template_ID      FROM Documents )",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(*) FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 318,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(*) FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 319,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 320,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT Template_ID, Version_Number, Template_Type_Code FROM Templates;",
    "exec_result": 1
  },
  {
    "idx": 321,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;",
    "exec_result": 0
  },
  {
    "idx": 322,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types;",
    "exec_result": 0
  },
  {
    "idx": 323,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 324,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT Template_ID  FROM Templates  WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 325,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(*)  FROM Templates  WHERE Template_Type_Code = 'CV';",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(*)  FROM Templates  WHERE Template_Type_Code = 'CV';",
    "exec_result": 1
  },
  {
    "idx": 327,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT T2.Version_Number, T1.Template_Type_Code FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Version_Number > 5;",
    "exec_result": 1
  },
  {
    "idx": 328,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT Version_Number, Template_Type_Code FROM Templates WHERE Version_Number > 5;",
    "exec_result": 1
  },
  {
    "idx": 329,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(Template_ID) AS Number_of_Templates FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 330,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(Template_ID) AS Number_of_Templates FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 331,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code  FROM Templates  GROUP BY Template_Type_Code  ORDER BY COUNT(Template_ID) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 332,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code  FROM Templates  GROUP BY Template_Type_Code  ORDER BY COUNT(Template_ID) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 333,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Code NOT IN (     SELECT Template_Type_Code      FROM Templates      GROUP BY Template_Type_Code      HAVING COUNT(Template_ID) >= 3 )",
    "exec_result": 1
  },
  {
    "idx": 334,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Code IN (     SELECT Template_Type_Code      FROM Templates      GROUP BY Template_Type_Code      HAVING COUNT(Template_ID) < 3 )",
    "exec_result": 1
  },
  {
    "idx": 335,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT MIN(Templates.Version_Number), Ref_Template_Types.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 336,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT MIN(T.version_number), RT.Template_Type_Code FROM Templates T JOIN Ref_Template_Types RT ON T.Template_Type_Code = RT.Template_Type_Code GROUP BY RT.Template_Type_Code ORDER BY T.version_number ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 337,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT t.Template_Type_Code  FROM Templates t  JOIN Documents d ON t.Template_ID = d.Template_ID  WHERE d.Document_Name = 'Data base';",
    "exec_result": 1
  },
  {
    "idx": 338,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT t.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Document_Name = 'Data base';",
    "exec_result": 1
  },
  {
    "idx": 339,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT Documents.Document_Name  FROM Documents  JOIN Templates ON Documents.Template_ID = Templates.Template_ID  JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code  WHERE Ref_Template_Types.Template_Type_Code = 'BK';",
    "exec_result": 1
  },
  {
    "idx": 340,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT d.Document_Name  FROM Documents d  JOIN Templates t ON d.Template_ID = t.Template_ID  JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code  WHERE rtt.Template_Type_Code = 'BK'",
    "exec_result": 1
  },
  {
    "idx": 341,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT Template_Type_Code, COUNT(*) AS NumberOfDocuments FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 342,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT      Ref_Template_Types.Template_Type_Code,     COUNT(DISTINCT Templates.Template_ID) AS Number_of_Documents FROM      Ref_Template_Types JOIN      Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN      Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY      Ref_Template_Types.Template_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 343,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Template_Type_Code  FROM Templates  JOIN Documents ON Templates.Template_ID = Documents.Template_ID  GROUP BY Template_Type_Code  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 344,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 345,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Code NOT IN (SELECT DISTINCT Template_Type_Code FROM Templates)",
    "exec_result": 0
  },
  {
    "idx": 346,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT Template_Type_Code  FROM Ref_Template_Types  WHERE Template_Type_Code NOT IN (     SELECT DISTINCT Template_Type_Code      FROM Templates )",
    "exec_result": 0
  },
  {
    "idx": 347,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;",
    "exec_result": 1
  },
  {
    "idx": 349,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT Template_Type_Description  FROM Ref_Template_Types  WHERE Template_Type_Code = 'AD'",
    "exec_result": 1
  },
  {
    "idx": 350,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';",
    "exec_result": 1
  },
  {
    "idx": 351,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';",
    "exec_result": 1
  },
  {
    "idx": 353,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT Template_Type_Description  FROM Ref_Template_Types  JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 354,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT t.Template_Type_Description  FROM Templates t  JOIN Documents d ON t.Template_ID = d.Template_ID;",
    "exec_result": 0
  },
  {
    "idx": 355,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 356,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 357,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) FROM Paragraphs;",
    "exec_result": 1
  },
  {
    "idx": 358,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(*) FROM Paragraphs;",
    "exec_result": 1
  },
  {
    "idx": 359,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(*)  FROM Paragraphs  JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID  WHERE Documents.Document_Name = 'Summer Show'",
    "exec_result": 1
  },
  {
    "idx": 360,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(*)  FROM Paragraphs  JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID  WHERE Documents.Document_Name = 'Summer Show'",
    "exec_result": 1
  },
  {
    "idx": 361,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT Paragraph_ID, Paragraph_Text, Other_Details  FROM Paragraphs  WHERE Paragraph_Text LIKE '%Korea %';",
    "exec_result": 0
  },
  {
    "idx": 362,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT p.Paragraph_Text  FROM Paragraphs p  JOIN Documents d ON p.Document_ID = d.Document_ID  WHERE p.Paragraph_Text LIKE '%Korea %';",
    "exec_result": 0
  },
  {
    "idx": 363,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT Paragraph_ID, Paragraph_Text  FROM Paragraphs  JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID  WHERE Documents.Document_Name = 'Welcome to NY';",
    "exec_result": 1
  },
  {
    "idx": 364,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT Paragraph_ID, Paragraph_Text  FROM Paragraphs  JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID  WHERE Documents.Document_Name = 'Welcome to NY';",
    "exec_result": 1
  },
  {
    "idx": 365,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT Paragraph_Text  FROM Paragraphs  JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID  WHERE Document_Name = 'Customer reviews';",
    "exec_result": 1
  },
  {
    "idx": 366,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT Paragraphs.Paragraph_Text  FROM Documents  JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID  WHERE Documents.Document_Name = 'Customer reviews';",
    "exec_result": 1
  },
  {
    "idx": 367,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT Document_ID, COUNT(Paragraph_ID) AS NumberOfParagraphs FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 368,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT Document_ID, COUNT(Paragraph_ID) AS NumParagraphs FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 369,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT      d.Document_ID,      d.Document_Name,      COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM      Documents d JOIN      Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY      d.Document_ID,      d.Document_Name;",
    "exec_result": 1
  },
  {
    "idx": 370,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT      D.Document_ID,      D.Document_Name,      COUNT(P.Paragraph_ID) AS NumberOfParagraphs FROM      Documents D JOIN      Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY      D.Document_ID, D.Document_Name;",
    "exec_result": 1
  },
  {
    "idx": 371,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT Document_ID  FROM Paragraphs  GROUP BY Document_ID  HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 372,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT Document_ID  FROM Paragraphs  GROUP BY Document_ID  HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 373,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Document_ID, Document_Name  FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Document_ID, Document_Name ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 374,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT d.Document_ID, d.Document_Name  FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID, d.Document_Name ORDER BY COUNT(p.Paragraph_ID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 375,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY COUNT(*) ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 376,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Document_ID FROM Documents JOIN (     SELECT Document_ID, COUNT(*) AS paragraph_count     FROM Paragraphs     GROUP BY Document_ID ) AS subquery ON Documents.Document_ID = subquery.Document_ID WHERE subquery.paragraph_count = (     SELECT MIN(paragraph_count)     FROM (         SELECT COUNT(*) AS paragraph_count         FROM Paragraphs         GROUP BY Document_ID     ) AS subquery2 );",
    "exec_result": 0
  },
  {
    "idx": 377,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT D.Document_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID GROUP BY D.Document_ID HAVING COUNT(P.Paragraph_ID) BETWEEN 1 AND 2",
    "exec_result": 1
  },
  {
    "idx": 378,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT Document_ID  FROM Paragraphs  GROUP BY Document_ID  HAVING COUNT(*) BETWEEN 1 AND 2",
    "exec_result": 1
  },
  {
    "idx": 379,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT D.Document_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text = 'Brazil' UNION SELECT D.Document_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_Text = 'Ireland';",
    "exec_result": 1
  },
  {
    "idx": 380,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT DISTINCT d.Document_ID  FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID WHERE p.Paragraph_Text LIKE '%Brazil%' AND p.Paragraph_Text LIKE '%Ireland%'",
    "exec_result": 0
  },
  {
    "idx": 381,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(DISTINCT Teacher_ID) FROM teacher;",
    "exec_result": 1
  },
  {
    "idx": 382,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(Teacher_ID) FROM teacher;",
    "exec_result": 1
  },
  {
    "idx": 383,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT Name FROM teacher ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 384,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT Name FROM teacher ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 385,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT Name, Age, Hometown FROM teacher;",
    "exec_result": 0
  },
  {
    "idx": 386,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT Name, Age, Hometown FROM teacher;",
    "exec_result": 0
  },
  {
    "idx": 387,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT teacher.Name  FROM teacher  WHERE teacher.Hometown != 'Little Lever Urban District';",
    "exec_result": 0
  },
  {
    "idx": 388,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT teacher.Name  FROM teacher  WHERE teacher.Hometown != 'Little Lever Urban District';",
    "exec_result": 0
  },
  {
    "idx": 389,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT Name FROM teacher WHERE Age IN ('32', '33');",
    "exec_result": 1
  },
  {
    "idx": 390,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT teacher.Name  FROM teacher  WHERE teacher.Age IN ('32', '33');",
    "exec_result": 1
  },
  {
    "idx": 391,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT T2.Hometown  FROM teacher AS T2  JOIN course_arrange AS T3 ON T2.Teacher_ID = T3.Teacher_ID  ORDER BY T2.Age  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 392,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT T2.Hometown  FROM teacher AS T2 JOIN course_arrange AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T2.Age = (SELECT MIN(Age) FROM teacher);",
    "exec_result": 1
  },
  {
    "idx": 393,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT Hometown, COUNT(*) AS NumberOfTeachers FROM teacher GROUP BY Hometown;",
    "exec_result": 1
  },
  {
    "idx": 394,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT T2.Hometown, COUNT(*) AS NumberOfTeachers FROM teacher AS T2 JOIN course_arrange AS T1 ON T2.Teacher_ID = T1.Teacher_ID GROUP BY T2.Hometown;",
    "exec_result": 0
  },
  {
    "idx": 395,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.Hometown, COUNT(*) AS Frequency  FROM course_arrange AS T1  JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T2.Hometown  ORDER BY Frequency DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 396,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.Hometown  FROM course_arrange AS T1  JOIN teacher AS T2  ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T2.Hometown  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 397,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT T2.Hometown  FROM teacher AS T1  JOIN teacher AS T2  ON T1.Hometown = T2.Hometown  AND T1.Teacher_ID < T2.Teacher_ID  GROUP BY T1.Hometown  HAVING COUNT(T1.Teacher_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 398,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT T.Hometown  FROM teacher T  WHERE (T.Teacher_ID, T.Hometown) IN (     SELECT Teacher_ID, Hometown      FROM (         SELECT Teacher_ID, Hometown, COUNT(*) AS Count_Hometown          FROM teacher          GROUP BY Teacher_ID, Hometown          HAVING COUNT(Hometown) >= 2     ) subquery ) GROUP BY T.Hometown;",
    "exec_result": 1
  },
  {
    "idx": 399,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT teacher.Name, course.Course  FROM teacher  JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID  JOIN course ON course_arrange.Course_ID = course.Course_ID;",
    "exec_result": 1
  },
  {
    "idx": 400,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT T2.Name, T1.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID;",
    "exec_result": 0
  },
  {
    "idx": 401,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT T.Name, C.Course  FROM teacher T  JOIN course_arrange CA ON T.Teacher_ID = CA.Teacher_ID  JOIN course C ON CA.Course_ID = C.Course_ID  ORDER BY T.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 402,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT teacher.Name, course.Course FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID ORDER BY teacher.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 403,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT t.Name  FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.Course = 'Math';",
    "exec_result": 1
  },
  {
    "idx": 404,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT T2.Name FROM course AS T1 JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID JOIN teacher AS T2 ON T3.Teacher_ID = T2.Teacher_ID WHERE T1.Course = 'Math';",
    "exec_result": 1
  },
  {
    "idx": 405,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT teacher.Name, COUNT(course.Course_ID) AS NumberOfCourses FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID, teacher.Name;",
    "exec_result": 0
  },
  {
    "idx": 406,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT teacher.Name, COUNT(course.Course_ID) AS NumberOfCourses FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID GROUP BY teacher.Teacher_ID;",
    "exec_result": 0
  },
  {
    "idx": 407,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.Name  FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Teacher_ID, t.Name HAVING COUNT(DISTINCT ca.Course_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 408,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT T2.Name  FROM course_arrange AS T1  JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID  GROUP BY T1.Teacher_ID  HAVING COUNT(T1.Course_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 409,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT t.Name  FROM teacher t  LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID  WHERE ca.Course_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 410,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT t.Name  FROM teacher t LEFT JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID WHERE ca.Course_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 411,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE age  <  30",
    "pred": "SELECT COUNT(*) FROM visitor WHERE Age < 30;",
    "exec_result": 1
  },
  {
    "idx": 412,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "pred": "SELECT v.Name  FROM visitor v  WHERE v.Level_of_membership > 4  ORDER BY v.Level_of_membership DESC;",
    "exec_result": 1
  },
  {
    "idx": 413,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "pred": "SELECT AVG(T2.Age)  FROM visit AS T1  JOIN visitor AS T2 ON T1.visitor_ID = T2.ID  WHERE T2.Level_of_membership <= 4;",
    "exec_result": 0
  },
  {
    "idx": 414,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "pred": "SELECT v.Name, v.Level_of_membership  FROM visitor v  WHERE v.Level_of_membership > 4  ORDER BY v.Age DESC;",
    "exec_result": 1
  },
  {
    "idx": 415,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "pred": "SELECT Museum_ID, Name  FROM museum  WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);",
    "exec_result": 1
  },
  {
    "idx": 416,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "pred": "SELECT AVG(Num_of_Staff)  FROM museum  WHERE Open_Year < '2009';",
    "exec_result": 1
  },
  {
    "idx": 417,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "pred": "SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';",
    "exec_result": 1
  },
  {
    "idx": 418,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "pred": "SELECT M.Name  FROM museum M  WHERE M.Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > '2010') AND M.Open_Year > '2010'",
    "exec_result": 0
  },
  {
    "idx": 419,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "pred": "SELECT v.ID, v.Name, v.Age FROM visitor v JOIN (     SELECT Museum_ID, visitor_ID     FROM visit     GROUP BY Museum_ID, visitor_ID     HAVING COUNT(*) > 1 ) subquery ON v.ID = subquery.visitor_ID;",
    "exec_result": 0
  },
  {
    "idx": 420,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "pred": "SELECT v.ID, v.Name, v.Level_of_membership FROM visitor v JOIN (     SELECT Museum_ID, SUM(Total_spent) as TotalSpent     FROM visit     GROUP BY Museum_ID     ORDER BY TotalSpent DESC     LIMIT 1 ) AS max_spending_museums ON v.ID IN (     SELECT visitor_ID     FROM visit     WHERE Museum_ID = max_spending_museums.Museum_ID ) ORDER BY v.Level_of_membership ASC;",
    "exec_result": 0
  },
  {
    "idx": 421,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT M.Museum_ID, M.Name  FROM museum M  JOIN (     SELECT Museum_ID, COUNT(*) AS Visit_Count      FROM visit      GROUP BY Museum_ID      ORDER BY Visit_Count DESC      LIMIT 1 ) V ON M.Museum_ID = V.Museum_ID;",
    "exec_result": 1
  },
  {
    "idx": 422,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "pred": "SELECT M.Name  FROM museum M  LEFT JOIN visit V ON M.Museum_ID = V.Museum_ID  WHERE V.visitor_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 423,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "pred": "SELECT v.Name, v.Age  FROM visitor v JOIN visit vt ON v.ID = vt.visitor_ID WHERE vt.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit)",
    "exec_result": 1
  },
  {
    "idx": 424,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "pred": "SELECT AVG(Num_of_Ticket) AS Average_Tickets, MAX(Num_of_Ticket) AS Maximum_Tickets FROM visit;",
    "exec_result": 1
  },
  {
    "idx": 425,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "pred": "SELECT SUM(T2.Total_spent)  FROM visitor AS T1  JOIN visit AS T2 ON T1.ID = T2.visitor_ID  WHERE T1.Level_of_membership = 1;",
    "exec_result": 1
  },
  {
    "idx": 426,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "pred": "SELECT v.Name  FROM visitor v  JOIN visit v1 ON v.ID = v1.visitor_ID  JOIN museum m1 ON v1.Museum_ID = m1.Museum_ID AND m1.Open_Year < '2009'  JOIN visit v2 ON v.ID = v2.visitor_ID  JOIN museum m2 ON v2.Museum_ID = m2.Museum_ID AND m2.Open_Year > '2011';",
    "exec_result": 1
  },
  {
    "idx": 427,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "pred": "SELECT COUNT(DISTINCT v.ID)  FROM visitor v LEFT JOIN visit vist ON v.ID = vist.visitor_ID JOIN museum m ON vist.Museum_ID = m.Museum_ID WHERE m.Open_Year < '2010' AND vist.Museum_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 428,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "pred": "SELECT COUNT(*) FROM museum WHERE Open_Year NOT BETWEEN '2008' AND '2013';",
    "exec_result": 1
  },
  {
    "idx": 429,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(*) FROM players;",
    "exec_result": 1
  },
  {
    "idx": 430,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(*) FROM players;",
    "exec_result": 1
  },
  {
    "idx": 431,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(*) FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 432,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(*) FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 433,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT `first_name`, `birth_date`  FROM players  WHERE `country_code` = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 434,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT first_name, birth_date  FROM players  WHERE country_code = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 435,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(T1.loser_age), AVG(T1.winner_age)  FROM (   SELECT m.loser_age, m.winner_age    FROM matches m ) T1",
    "exec_result": 1
  },
  {
    "idx": 436,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(CASE WHEN loser_id IS NOT NULL THEN loser_age ELSE winner_age END) AS average_age_loser,        AVG(CASE WHEN winner_id IS NOT NULL THEN winner_age END) AS average_age_winner FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 437,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(winner_rank) AS average_winner_rank FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 438,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(winner_rank) AS avg_winner_rank FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 439,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(loser_rank) AS Highest_Loser_Rank FROM matches;",
    "exec_result": 0
  },
  {
    "idx": 440,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(winner_rank) AS Best_Loser_Rank FROM matches;",
    "exec_result": 0
  },
  {
    "idx": 441,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT country_code) FROM players;",
    "exec_result": 1
  },
  {
    "idx": 442,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT country_code) FROM players;",
    "exec_result": 1
  },
  {
    "idx": 443,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 444,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 445,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT t.tourney_name  FROM matches t  GROUP BY t.tourney_id  HAVING COUNT(*) > 10",
    "exec_result": 0
  },
  {
    "idx": 446,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT DISTINCT tourney_name  FROM matches  WHERE match_num >= 10;",
    "exec_result": 0
  },
  {
    "idx": 447,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT DISTINCT winner_name  FROM matches  WHERE year IN (2013, 2016);",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT DISTINCT winner_name  FROM matches  WHERE year = 2013  INTERSECT  SELECT DISTINCT winner_name  FROM matches  WHERE year = 2016;",
    "exec_result": 1
  },
  {
    "idx": 449,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*)  FROM matches  WHERE year IN (2013, 2016)",
    "exec_result": 1
  },
  {
    "idx": 450,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*)  FROM matches  WHERE year = 2013 OR year = 2016;",
    "exec_result": 1
  },
  {
    "idx": 451,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT p.country_code, p.first_name  FROM players p  JOIN (     SELECT winner_id      FROM matches      WHERE tournament_name = 'WTA Championships'     INTERSECT     SELECT winner_id      FROM matches      WHERE tournament_name = 'Australian Open' ) winners ON p.player_id = winners.winner_id;",
    "exec_result": 0
  },
  {
    "idx": 452,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT p.first_name, p.country_code FROM players p JOIN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'WTA Championships'     INTERSECT     SELECT winner_id     FROM matches     WHERE tourney_name = 'Australian Open' ) w ON p.player_id = w.winner_id;",
    "exec_result": 1
  },
  {
    "idx": 453,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)",
    "exec_result": 1
  },
  {
    "idx": 454,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT first_name, country_code  FROM players  WHERE birth_date = (SELECT MIN(birth_date) FROM players);",
    "exec_result": 1
  },
  {
    "idx": 455,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT first_name, last_name  FROM players  ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 456,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT first_name, last_name FROM players ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 457,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT first_name, last_name  FROM players  WHERE hand = 'L'  ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 458,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT first_name, last_name  FROM players  WHERE hand = 'L'  ORDER BY birth_date;",
    "exec_result": 1
  },
  {
    "idx": 459,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.country_code FROM players AS T1 JOIN (     SELECT player_id, COUNT(*) AS tour_count     FROM rankings     GROUP BY player_id     ORDER BY tour_count DESC     LIMIT 1 ) AS T2 ON T1.player_id = T2.player_id;",
    "exec_result": 0
  },
  {
    "idx": 460,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.country_code  FROM players AS T1  JOIN (     SELECT player_id, COUNT(*) AS tours      FROM rankings      GROUP BY player_id      ORDER BY tours DESC      LIMIT 1 ) AS T2  ON T1.player_id = T2.player_id;",
    "exec_result": 0
  },
  {
    "idx": 461,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 462,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `year`  FROM matches  GROUP BY `year`  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 463,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT w.player_name, MAX(w.winner_rank_points) FROM (     SELECT m.winner_id, SUM(1) as win_count, w.winner_rank_points     FROM matches m     JOIN players w ON m.winner_id = w.player_id     GROUP BY m.winner_id, w.winner_rank_points ) w ORDER BY w.win_count DESC, w.winner_rank_points DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT p1.winner_name, MAX(r.ranking_points) FROM (     SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1 ) AS m JOIN players AS p1 ON m.winner_id = p1.player_id JOIN rankings AS r ON p1.player_id = r.player_id",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT w.winner_name  FROM matches m  JOIN players p ON m.winner_id = p.player_id  JOIN rankings r ON r.player_id = p.player_id  WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings)",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p1.winner_name  FROM matches  JOIN players AS p1 ON matches.winner_id = p1.player_id  JOIN tournaments AS t ON matches.tourney_id = t.tourney_id  WHERE t.tourney_name = 'Australian Open'  ORDER BY p1.winner_rank_points DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 467,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT p1.name AS loser_name, p2.name AS winner_name FROM matches m JOIN players p1 ON m.loser_id = p1.player_id JOIN players p2 ON m.winner_id = p2.player_id WHERE m.minutes = (SELECT MAX(minutes) FROM matches);",
    "exec_result": 0
  },
  {
    "idx": 468,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT      m.winner_name,      m.loser_name  FROM      matches m  WHERE      m.minutes = (SELECT MAX(minutes) FROM matches);",
    "exec_result": 1
  },
  {
    "idx": 469,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name;",
    "exec_result": 0
  },
  {
    "idx": 470,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name;",
    "exec_result": 1
  },
  {
    "idx": 471,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name;",
    "exec_result": 0
  },
  {
    "idx": 472,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT T1.first_name, SUM(T2.ranking_points) AS total_ranking_points FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id, T1.first_name;",
    "exec_result": 0
  },
  {
    "idx": 473,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT country_code, COUNT(DISTINCT player_id) AS num_players FROM players GROUP BY country_code;",
    "exec_result": 1
  },
  {
    "idx": 474,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT country_code, COUNT(*) AS num_players FROM players GROUP BY country_code;",
    "exec_result": 1
  },
  {
    "idx": 475,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code  FROM players  GROUP BY country_code  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 476,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT country_code  FROM players  GROUP BY country_code  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 477,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50;",
    "exec_result": 1
  },
  {
    "idx": 478,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(*) > 50;",
    "exec_result": 1
  },
  {
    "idx": 479,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT ranking_date, COUNT(*) AS total_tours FROM rankings GROUP BY ranking_date;",
    "exec_result": 0
  },
  {
    "idx": 480,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT ranking_date, COUNT(DISTINCT tours) AS total_tours FROM rankings GROUP BY ranking_date;",
    "exec_result": 0
  },
  {
    "idx": 481,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT `year`, COUNT(*) AS matches_per_year FROM matches GROUP BY `year`;",
    "exec_result": 1
  },
  {
    "idx": 482,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year;",
    "exec_result": 1
  },
  {
    "idx": 483,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, ROW_NUMBER() OVER (ORDER BY winner_age ASC) as rank_order     FROM matches     JOIN players ON matches.winner_id = players.player_id ) ranked_winners WHERE rank_order <= 3",
    "exec_result": 1
  },
  {
    "idx": 484,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT winner_name, winner_rank  FROM matches  WHERE year IS NOT NULL  ORDER BY winner_age ASC  LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 485,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L';",
    "exec_result": 1
  },
  {
    "idx": 486,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_name = 'WTA Championships'",
    "exec_result": 1
  },
  {
    "idx": 487,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN (     SELECT winner_id, MAX(winner_rank_points) as max_rank_points     FROM matches     GROUP BY winner_id ) m ON p.player_id = m.winner_id WHERE p.player_id IN (     SELECT winner_id     FROM matches     WHERE winner_rank_points = m.max_rank_points ) ORDER BY m.max_rank_points DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 488,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "SELECT T1.first_name, T1.country_code, T1.birth_date FROM players AS T1 JOIN (     SELECT winner_id, SUM(winner_rank_points) AS total_points     FROM matches     GROUP BY winner_id     ORDER BY total_points DESC     LIMIT 1 ) AS T2 ON T1.player_id = T2.winner_id;",
    "exec_result": 1
  },
  {
    "idx": 489,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT hand, COUNT(*) AS num_players FROM players GROUP BY hand;",
    "exec_result": 1
  },
  {
    "idx": 490,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT `hand`, COUNT(*) AS player_count FROM players GROUP BY `hand`;",
    "exec_result": 1
  },
  {
    "idx": 491,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "pred": "SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';",
    "exec_result": 1
  },
  {
    "idx": 492,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "pred": "SELECT name, tonnage FROM ship ORDER BY name DESC;",
    "exec_result": 1
  },
  {
    "idx": 493,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  date FROM battle",
    "pred": "SELECT name, date, result FROM battle;",
    "exec_result": 0
  },
  {
    "idx": 494,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT max(killed) ,  min(killed) FROM death",
    "pred": "SELECT MIN(injured + killed) AS min_death_toll, MAX(injured + killed) AS max_death_toll FROM death;",
    "exec_result": 1
  },
  {
    "idx": 495,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT avg(injured) FROM death",
    "pred": "SELECT AVG(injured) AS average_injuries FROM death;",
    "exec_result": 1
  },
  {
    "idx": 496,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "pred": "SELECT d.note, d.killed, d.injured FROM death AS d JOIN ship AS s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't';",
    "exec_result": 0
  },
  {
    "idx": 497,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "pred": "SELECT name, result FROM battle WHERE bulgarian_commander != 'Boril';",
    "exec_result": 1
  },
  {
    "idx": 498,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "pred": "SELECT DISTINCT T1.id, T1.name  FROM battle AS T1  JOIN ship AS T2 ON T1.id = T2.lost_in_battle  WHERE T2.ship_type = 'Brig';",
    "exec_result": 1
  },
  {
    "idx": 499,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "pred": "SELECT T1.id, T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10",
    "exec_result": 0
  },
  {
    "idx": 500,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.id, s.name  FROM ship s  JOIN death d ON s.id = d.caused_by_ship_id  GROUP BY s.id, s.name  ORDER BY SUM(d.injured) DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "pred": "SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I';",
    "exec_result": 1
  },
  {
    "idx": 502,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(DISTINCT RESULT) FROM battle",
    "pred": "SELECT COUNT(DISTINCT result) FROM battle;",
    "exec_result": 1
  },
  {
    "idx": 503,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "pred": "SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = '225');",
    "exec_result": 1
  },
  {
    "idx": 504,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "pred": "SELECT b.name, b.date FROM battle AS b JOIN ship AS s1 ON b.id = s1.lost_in_battle JOIN ship AS s2 ON b.id = s2.lost_in_battle AND s2.name IN ('Lettice', 'HMS Atalanta') WHERE s2.name IN ('Lettice', 'HMS Atalanta') GROUP BY b.name, b.date HAVING COUNT(DISTINCT s2.name) = 2;",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "pred": "SELECT b.name, b.result, b.bulgarian_commander FROM battle b WHERE NOT EXISTS (     SELECT 1     FROM ship s     WHERE s.lost_in_battle = b.id AND location = 'English Channel' )",
    "exec_result": 1
  },
  {
    "idx": 506,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT note FROM death WHERE note LIKE '%East%'",
    "pred": "SELECT d.note  FROM death d  WHERE d.note LIKE '%East%';",
    "exec_result": 1
  },
  {
    "idx": 507,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT `line_1`, `line_2` FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 508,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT `line_1`, `line_2` FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 509,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(*) FROM Courses;",
    "exec_result": 1
  },
  {
    "idx": 510,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(*) FROM Courses;",
    "exec_result": 1
  },
  {
    "idx": 511,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT course_description  FROM Courses  WHERE course_name = 'Math';",
    "exec_result": 0
  },
  {
    "idx": 512,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT course_description  FROM Courses  WHERE course_name LIKE '%Math%'",
    "exec_result": 1
  },
  {
    "idx": 513,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';",
    "exec_result": 1
  },
  {
    "idx": 514,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';",
    "exec_result": 1
  },
  {
    "idx": 515,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT d.department_name, d.department_id FROM Departments d JOIN Degree_Programs dp ON d.department_id = dp.department_id WHERE dp.degree_program_id IN (     SELECT degree_program_id     FROM Student_Enrolment     GROUP BY degree_program_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 516,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "pred": "SELECT department_name, department_id  FROM Departments  WHERE department_id = (     SELECT department_id      FROM Degree_Programs      GROUP BY department_id      ORDER BY COUNT(degree_program_id) DESC      LIMIT 1 );",
    "exec_result": 1
  },
  {
    "idx": 517,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT department_id)  FROM Degree_Programs;",
    "exec_result": 1
  },
  {
    "idx": 518,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT department_id)  FROM Degree_Programs;",
    "exec_result": 1
  },
  {
    "idx": 519,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT degree_summary_name) AS number_of_degrees FROM Degree_Programs;",
    "exec_result": 1
  },
  {
    "idx": 520,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT degree_summary_name) AS number_of_degrees FROM Degree_Programs;",
    "exec_result": 1
  },
  {
    "idx": 521,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(*)  FROM Degree_Programs  WHERE department_id IN      (SELECT department_id       FROM Departments       WHERE department_name = 'Engineering');",
    "exec_result": 1
  },
  {
    "idx": 522,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(*)  FROM Degree_Programs  JOIN Departments ON Degree_Programs.department_id = Departments.department_id  WHERE Departments.department_name = 'Engineering';",
    "exec_result": 1
  },
  {
    "idx": 523,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT section_name, section_description FROM Sections;",
    "exec_result": 1
  },
  {
    "idx": 524,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT section_name, section_description FROM Sections;",
    "exec_result": 1
  },
  {
    "idx": 525,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT course_name, course_id  FROM Courses  WHERE course_id IN (     SELECT course_id      FROM Sections      GROUP BY course_id      HAVING COUNT(*) <= 2 )",
    "exec_result": 1
  },
  {
    "idx": 526,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT c.course_name, c.course_id FROM Courses c WHERE c.course_id NOT IN (     SELECT sc.student_course_id     FROM Sections s     JOIN Student_Enrolment_Courses sc ON s.section_id = sc.student_course_id     GROUP BY s.section_id     HAVING COUNT(s.section_id) >= 2 );",
    "exec_result": 0
  },
  {
    "idx": 527,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM Sections ORDER BY section_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 528,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT section_name FROM Sections ORDER BY section_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 529,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT semester_name, semester_id  FROM Semesters  WHERE semester_id IN (     SELECT semester_id      FROM Student_Enrolment      GROUP BY semester_id      ORDER BY COUNT(student_id) DESC      LIMIT 1 );",
    "exec_result": 1
  },
  {
    "idx": 530,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.semester_name, s.semester_id  FROM Semesters s  JOIN Student_Enrolment se ON s.semester_id = se.semester_id  WHERE (s.semester_id, COUNT(se.student_id)) IN  (SELECT semester_id, COUNT(student_id)   FROM Student_Enrolment se   GROUP BY semester_id   ORDER BY COUNT(student_id) DESC   LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 531,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT department_description  FROM Departments  WHERE department_name LIKE '%the computer%';",
    "exec_result": 0
  },
  {
    "idx": 532,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT department_description  FROM Departments  WHERE department_name LIKE '%computer%';",
    "exec_result": 1
  },
  {
    "idx": 533,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name, se.student_id FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id GROUP BY se.student_id, s.first_name, s.middle_name, s.last_name HAVING COUNT(dp.degree_program_id) > 1 AND MAX(se.semester_id) = MIN(se.semester_id)",
    "exec_result": 0
  },
  {
    "idx": 534,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name HAVING COUNT(dp.degree_program_id) = 2;",
    "exec_result": 1
  },
  {
    "idx": 535,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT S.first_name, S.middle_name, S.last_name FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id JOIN Degree_Programs DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelor';",
    "exec_result": 1
  },
  {
    "idx": 536,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT S.first_name, S.middle_name, S.last_name FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id JOIN Degree_Programs DP ON SE.degree_program_id = DP.degree_program_id WHERE DP.degree_summary_name = 'Bachelors';",
    "exec_result": 0
  },
  {
    "idx": 537,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT      Degree_Programs.degree_summary_name  FROM      Student_Enrolment  JOIN      Degree_Programs  ON      Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id  GROUP BY      Degree_Programs.degree_summary_name  ORDER BY      COUNT(Student_Enrolment.student_id) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 538,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_summary_name  FROM Degree_Programs dp  JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id  GROUP BY dp.degree_summary_name  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 539,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_program_id, dp.degree_summary_name  FROM Degree_Programs dp  JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id  GROUP BY dp.degree_program_id, dp.degree_summary_name  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 540,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_program_id, dp.degree_summary_name  FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id GROUP BY dp.degree_program_id, dp.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 541,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT S.student_id, S.first_name, S.middle_name, S.last_name, COUNT(SE.student_enrolment_id) AS number_of_enrollments FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id GROUP BY S.student_id, S.first_name, S.middle_name, S.last_name ORDER BY number_of_enrollments DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.student_id, COUNT(se.student_id) AS num_enrollments,         s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id GROUP BY s.student_id ORDER BY num_enrollments DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 543,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 544,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT semester_name  FROM Semesters  WHERE semester_id NOT IN (     SELECT DISTINCT semester_id      FROM Student_Enrolment );",
    "exec_result": 1
  },
  {
    "idx": 545,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT DISTINCT c.course_name  FROM Courses c  JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id;",
    "exec_result": 1
  },
  {
    "idx": 546,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id;",
    "exec_result": 1
  },
  {
    "idx": 547,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.course_name  FROM Courses c  JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id  GROUP BY c.course_id  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 548,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.course_name FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id GROUP BY c.course_id ORDER BY COUNT(sec.student_course_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 549,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT student_id     FROM Student_Enrolment se )",
    "exec_result": 0
  },
  {
    "idx": 550,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM Student_Enrolment se )",
    "exec_result": 0
  },
  {
    "idx": 551,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT T.transcript_date, T.transcript_id  FROM Transcripts T JOIN Transcript_Contents TC ON T.transcript_id = TC.transcript_id GROUP BY T.transcript_id HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 552,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT T.transcript_id, T.transcript_date FROM Transcripts T JOIN Transcript_Contents TC ON T.transcript_id = TC.transcript_id GROUP BY T.transcript_id, T.transcript_date HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 553,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "pred": "SELECT cell_mobile_number  FROM Students  WHERE first_name = 'Timmothy' AND last_name = 'Ward';",
    "exec_result": 1
  },
  {
    "idx": 554,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "pred": "SELECT cell_mobile_number  FROM Students  WHERE first_name = 'Timmothy' AND last_name = 'Ward';",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name  FROM Students  WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name  FROM Students  WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name  FROM Students  WHERE date_left IS NOT NULL  ORDER BY date_left ASC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 558,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT first_name, middle_name, last_name  FROM Students  WHERE date_first_registered <= (SELECT MIN(date_first_registered) FROM Students WHERE date_left IS NOT NULL) LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 559,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT s.first_name FROM Students s WHERE s.current_address_id != s.permanent_address_id;",
    "exec_result": 1
  },
  {
    "idx": 560,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT S.first_name FROM Students S WHERE S.current_address_id != S.permanent_address_id;",
    "exec_result": 1
  },
  {
    "idx": 561,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.address_id, A.line_1, A.line_2, A.line_3 FROM Addresses A JOIN Student_Enrolment SE ON A.address_id = SE.current_address_id GROUP BY A.address_id, A.line_1, A.line_2, A.line_3 ORDER BY COUNT(SE.student_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 562,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.address_id, A.line_1, A.line_2 FROM Addresses A JOIN (     SELECT current_address_id, COUNT(*) AS student_count     FROM Students     GROUP BY current_address_id ) S ON A.address_id = S.current_address_id WHERE S.student_count = (     SELECT MAX(student_count)     FROM (         SELECT COUNT(*) AS student_count         FROM Students         GROUP BY current_address_id     ) ) ORDER BY S.student_count DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 563,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(transcript_date) FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 564,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(transcript_date) AS average_transcript_date FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 565,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT transcript_date FROM Transcripts ORDER BY transcript_id LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 566,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT MIN(transcript_date) AS earliest_transcript_date,         other_details  FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 567,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(*) FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 568,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(transcript_id) AS total_transcripts FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 569,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT `transcript_date`  FROM `Transcripts` ORDER BY `transcript_date` DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 570,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(transcript_date) AS last_transcript_released FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 571,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(DISTINCT student_course_id) AS max_times_in_transcripts, student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY max_times_in_transcripts DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 572,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT MAX(TC.student_course_id) AS max_course_enrollment_id, C.course_id FROM Student_Enrolment_Courses AS SC JOIN Courses AS C ON SC.course_id = C.course_id JOIN Transcript_Contents AS TC ON SC.student_course_id = TC.student_course_id GROUP BY C.course_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 573,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT t.transcript_id, t.transcript_date FROM Transcripts t JOIN (     SELECT student_course_id, COUNT(*) AS count_results     FROM Transcript_Contents     GROUP BY student_course_id ) tc ON t.transcript_id = tc.student_course_id WHERE tc.count_results = (     SELECT MIN(count_results)     FROM (         SELECT COUNT(*) AS count_results         FROM Transcript_Contents         GROUP BY transcript_id     ) );",
    "exec_result": 0
  },
  {
    "idx": 574,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT t.transcript_id, t.transcript_date FROM Transcripts t JOIN (     SELECT student_course_id, COUNT(*) AS result_count     FROM Transcript_Contents     GROUP BY student_course_id ) tc ON t.transcript_id = tc.student_course_id WHERE tc.result_count = (     SELECT MIN(result_count)     FROM (         SELECT COUNT(*) AS result_count         FROM Transcript_Contents         GROUP BY student_course_id     ) ) ORDER BY t.transcript_date ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 575,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT DISTINCT s.semester_id  FROM Student_Enrolment se1  JOIN Students s1 ON se1.student_id = s1.student_id  JOIN Degree_Programs dp1 ON se1.degree_program_id = dp1.degree_program_id  WHERE dp1.degree_summary_name = 'Master' UNION SELECT DISTINCT s.semester_id  FROM Student_Enrolment se2 JOIN Students s2 ON se2.student_id = s2.student_id  JOIN Degree_Programs dp2 ON se2.degree_program_id = dp2.degree_program_id  WHERE dp2.degree_summary_name = 'Bachelor';",
    "exec_result": 0
  },
  {
    "idx": 576,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT s.semester_id  FROM Semesters s JOIN Student_Enrolment se ON s.semester_id = se.semester_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT se.student_id) > 1;",
    "exec_result": 0
  },
  {
    "idx": 577,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT COUNT(DISTINCT current_address_id) AS number_of_addresses FROM Students;",
    "exec_result": 1
  },
  {
    "idx": 578,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT DISTINCT T1.line_1, T1.line_2, T1.line_3, T1.city, T1.zip_postcode, T1.state_province_county, T1.country FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id OR T1.address_id = T2.permanent_address_id;",
    "exec_result": 0
  },
  {
    "idx": 579,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT * FROM Students ORDER BY last_name DESC, first_name DESC;",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT `other_student_details` FROM `Students` ORDER BY `last_name` DESC, `first_name` DESC;",
    "exec_result": 0
  },
  {
    "idx": 581,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT *  FROM Sections  WHERE section_name = 'h';",
    "exec_result": 0
  },
  {
    "idx": 582,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT section_description  FROM Sections  WHERE section_name = 'h';",
    "exec_result": 1
  },
  {
    "idx": 583,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT s.first_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id OR s.permanent_address_id = a.address_id WHERE a.country = 'Haiti' OR s.cell_mobile_number = '09700166582';",
    "exec_result": 0
  },
  {
    "idx": 584,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT s.first_name  FROM Students s  JOIN Addresses a ON s.current_address_id = a.address_id  JOIN Addresses pa ON s.permanent_address_id = pa.address_id  WHERE a.country = 'Haiti' OR s.cell_mobile_number = '09700166582';",
    "exec_result": 1
  },
  {
    "idx": 585,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT Title FROM Cartoon ORDER BY Title ASC;",
    "exec_result": 1
  },
  {
    "idx": 586,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT Title FROM Cartoon ORDER BY Title ASC;",
    "exec_result": 1
  },
  {
    "idx": 587,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';",
    "exec_result": 1
  },
  {
    "idx": 588,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones'",
    "exec_result": 1
  },
  {
    "idx": 589,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(*)  FROM Cartoon  WHERE Written_by = 'Joseph Kuhr';",
    "exec_result": 1
  },
  {
    "idx": 590,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(*)  FROM Cartoon  WHERE Written_by = 'Joseph Kuhr';",
    "exec_result": 1
  },
  {
    "idx": 591,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;",
    "exec_result": 1
  },
  {
    "idx": 592,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;",
    "exec_result": 1
  },
  {
    "idx": 593,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';",
    "exec_result": 1
  },
  {
    "idx": 594,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT Title  FROM Cartoon  WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';",
    "exec_result": 1
  },
  {
    "idx": 595,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Country, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 596,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Country, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 597,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT series_name), COUNT(DISTINCT Content) FROM TV_Channel;",
    "exec_result": 1
  },
  {
    "idx": 598,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT id) AS series_count, COUNT(DISTINCT Content) AS content_count FROM TV_Channel;",
    "exec_result": 1
  },
  {
    "idx": 599,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Content FROM TV_Channel WHERE id = '700';",
    "exec_result": 1
  },
  {
    "idx": 601,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 602,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT TV_Channel.Package_Option  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  WHERE TV_series.Series_name = 'Sky Radio'",
    "exec_result": 0
  },
  {
    "idx": 603,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(*)  FROM TV_Channel  WHERE Language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 604,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 605,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Language, COUNT(*) AS NumberOfChannels FROM TV_Channel GROUP BY Language ORDER BY NumberOfChannels ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 606,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Language, COUNT(*) AS ChannelCount FROM TV_Channel GROUP BY Language ORDER BY ChannelCount ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 607,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language, COUNT(*) AS NumChannels FROM TV_Channel GROUP BY Language;",
    "exec_result": 1
  },
  {
    "idx": 608,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT Language, COUNT(*) AS NumChannels FROM TV_Channel GROUP BY Language;",
    "exec_result": 1
  },
  {
    "idx": 609,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT `TV_Channel`.`series_name` FROM `TV_Channel` JOIN `Cartoon` ON `TV_Channel`.`id` = `Cartoon`.`Channel` WHERE `Cartoon`.`Title` = 'The Rise of the Blue Beetle!';",
    "exec_result": 1
  },
  {
    "idx": 610,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT TV_Channel.series_name FROM TV_Channel  JOIN Cartoon ON TV_Channel.id = Cartoon.Channel  WHERE Cartoon.Title = 'The Rise of the Blue Beetle';",
    "exec_result": 0
  },
  {
    "idx": 611,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Cartoon.Title  FROM Cartoon  JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id  WHERE TV_Channel.series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 612,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT c.Title  FROM Cartoon c  JOIN TV_Channel tc ON c.Channel = tc.id  WHERE tc.series_name = 'Sky Radio'",
    "exec_result": 1
  },
  {
    "idx": 613,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT Episode FROM TV_series ORDER BY Rating;",
    "exec_result": 1
  },
  {
    "idx": 614,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT Episode FROM TV_series ORDER BY Rating ASC;",
    "exec_result": 1
  },
  {
    "idx": 615,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT Episode, Rating  FROM TV_series  ORDER BY Rating DESC  LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 616,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT Episode, Rating  FROM TV_series  ORDER BY Rating DESC  LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 617,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MIN(Share), MAX(Share) FROM TV_series;",
    "exec_result": 1
  },
  {
    "idx": 618,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MAX(Share), MIN(Share) FROM TV_series;",
    "exec_result": 1
  },
  {
    "idx": 619,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT `Original_air_date` FROM `Cartoon` WHERE `Title` = 'A Love of a Lifetime';",
    "exec_result": 0
  },
  {
    "idx": 620,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT `Original_air_date` FROM `Cartoon` WHERE `Title` = 'A Love of a Lifetime';",
    "exec_result": 0
  },
  {
    "idx": 621,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 622,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT Weekly_Rank FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 623,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT t2.series_name FROM TV_series AS t1 JOIN TV_Channel AS t2 ON t1.Channel = t2.id WHERE t1.Episode = 'A Love of a Lifetime'",
    "exec_result": 1
  },
  {
    "idx": 624,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT `series_name` FROM `TV_Channel` JOIN `TV_series` ON `TV_Channel.id` = `TV_series.Channel` WHERE `Episode` = 'A Love of a Lifetime';",
    "exec_result": 0
  },
  {
    "idx": 625,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT T2.Episode  FROM TV_Channel AS T1  JOIN TV_series AS T2 ON T1.id = T2.Channel  WHERE T1.series_name = 'Sky Radio'",
    "exec_result": 1
  },
  {
    "idx": 626,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT Episode FROM TV_series WHERE Channel = 'Sky Radio';",
    "exec_result": 0
  },
  {
    "idx": 627,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT Directed_by, COUNT(*) AS Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;",
    "exec_result": 1
  },
  {
    "idx": 628,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT Directed_by, COUNT(*) AS Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;",
    "exec_result": 1
  },
  {
    "idx": 629,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT `Production code`, `Channel` FROM `Cartoon` WHERE `Original_air_date` = (SELECT MAX(`Original_air_date`) FROM `Cartoon`);",
    "exec_result": 0
  },
  {
    "idx": 630,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT `Production code`, `Channel` FROM Cartoon ORDER BY `Original_air_date` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 631,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT TV_Channel.Package_Option, TV_series.series_name  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  WHERE TV_Channel.Hight_definition_TV = 'yes';",
    "exec_result": 0
  },
  {
    "idx": 632,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT TV_Channel.Package_Option, TV_series.series_name  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  WHERE TV_Channel.Hight_definition_TV = 'yes';",
    "exec_result": 0
  },
  {
    "idx": 633,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT T1.Country  FROM TV_Channel AS T1  JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Written_by = 'Todd Casey'",
    "exec_result": 1
  },
  {
    "idx": 634,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT T1.Country  FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Written_by = 'Todd Casey'",
    "exec_result": 1
  },
  {
    "idx": 635,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT T1.Country  FROM TV_Channel AS T1  JOIN Cartoon AS T2 ON T1.id = T2.Channel  WHERE T2.Written_by = 'Todd Casey' AND T2.Channel NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey') GROUP BY T1.Country",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT Country  FROM TV_Channel  WHERE id IN (     SELECT Channel      FROM Cartoon      WHERE Written_by != 'Todd Casey' ) AND Country NOT IN (     SELECT Country      FROM TV_Channel      WHERE id IN (         SELECT Channel          FROM Cartoon          WHERE Written_by = 'Todd Casey'     ) )",
    "exec_result": 0
  },
  {
    "idx": 637,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT TV_Channel.series_name, TV_Channel.Country  FROM TV_Channel  JOIN TV_series ON TV_Channel.id = TV_series.Channel  JOIN Cartoon ON TV_series.Channel = Cartoon.Channel  WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang')",
    "exec_result": 0
  },
  {
    "idx": 638,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT c.series_name, c.Country FROM TV_Channel c JOIN TV_series ts ON c.id = ts.Channel JOIN Cartoon ca ON c.id = ca.Channel WHERE ca.Directed_by IN ('Ben Jones', 'Michael Chang')",
    "exec_result": 0
  },
  {
    "idx": 639,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT Pixel_aspect_ratio_PAR, Country  FROM TV_Channel  WHERE Language != 'English'",
    "exec_result": 1
  },
  {
    "idx": 640,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English'",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT T.id  FROM TV_Channel T  JOIN (     SELECT Country, COUNT(*) AS ChannelCount      FROM TV_Channel      GROUP BY Country      HAVING ChannelCount > 2 ) C ON T.Country = C.Country;",
    "exec_result": 0
  },
  {
    "idx": 642,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT id FROM TV_Channel GROUP BY id HAVING COUNT(*) > 2;",
    "exec_result": 0
  },
  {
    "idx": 643,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')",
    "exec_result": 1
  },
  {
    "idx": 644,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');",
    "exec_result": 1
  },
  {
    "idx": 645,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT TV_Channel.Package_Option  FROM TV_Channel  WHERE TV_Channel.id NOT IN (     SELECT Channel      FROM Cartoon      WHERE Directed_by = 'Ben Jones' )",
    "exec_result": 1
  },
  {
    "idx": 646,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT T2.Package_Option  FROM Cartoon AS T1  JOIN TV_Channel AS T2 ON T1.Channel = T2.id  WHERE T1.Directed_by != 'Ben Jones' AND T1.Channel NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')",
    "exec_result": 0
  },
  {
    "idx": 647,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 648,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 649,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT Earnings  FROM poker_player  ORDER BY Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 650,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT T1.Earnings  FROM poker_player AS T1  ORDER BY T1.Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT Poker_Player_ID, Final_Table_Made, Best_Finish FROM poker_player;",
    "exec_result": 0
  },
  {
    "idx": 652,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT Poker_Player_ID, Final_Table_Made, Best_Finish FROM poker_player;",
    "exec_result": 0
  },
  {
    "idx": 653,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(Earnings) FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 654,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(Earnings) FROM poker_player;",
    "exec_result": 1
  },
  {
    "idx": 655,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);",
    "exec_result": 1
  },
  {
    "idx": 656,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Money_Rank FROM poker_player WHERE Earnings = (SELECT MAX(Earnings) FROM poker_player);",
    "exec_result": 1
  },
  {
    "idx": 657,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(`Final_Table_Made`)  FROM poker_player  WHERE `Earnings` < 200000;",
    "exec_result": 1
  },
  {
    "idx": 658,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(`Final_Table_Made`)  FROM poker_player  WHERE `Earnings` < 200000;",
    "exec_result": 1
  },
  {
    "idx": 659,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.Poker_Player_ID;",
    "exec_result": 0
  },
  {
    "idx": 660,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT Name FROM poker_player;",
    "exec_result": 0
  },
  {
    "idx": 661,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000;",
    "exec_result": 1
  },
  {
    "idx": 662,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.Poker_Player_ID WHERE T2.Earnings > 300000;",
    "exec_result": 0
  },
  {
    "idx": 663,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT T1.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Final_Table_Made ASC;",
    "exec_result": 0
  },
  {
    "idx": 664,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT T1.Name  FROM poker_player AS T1  JOIN people AS T2 ON T1.People_ID = T2.People_ID  ORDER BY T1.Final_Table_Made ASC;",
    "exec_result": 0
  },
  {
    "idx": 665,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT T2.Birth_Date FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 666,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT `Birth_Date` FROM `people` JOIN `poker_player` ON `poker_player`.`People_ID` = `people`.`People_ID` WHERE `Earnings` = (SELECT MIN(`Earnings`) FROM `poker_player`);",
    "exec_result": 1
  },
  {
    "idx": 667,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.Poker_Player_ID ORDER BY T1.Height DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 668,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT Money_Rank  FROM poker_player  WHERE Poker_Player_ID IN (     SELECT Poker_Player_ID      FROM people      ORDER BY Height DESC      LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 669,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(T1.Earnings)  FROM poker_player AS T1  JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height > 200;",
    "exec_result": 1
  },
  {
    "idx": 670,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(T1.Earnings)  FROM poker_player AS T1  JOIN people AS T2 ON T1.People_ID = T2.People_ID  WHERE T2.Height > 200;",
    "exec_result": 1
  },
  {
    "idx": 671,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.Poker_Player_ID ORDER BY T2.Earnings DESC;",
    "exec_result": 0
  },
  {
    "idx": 672,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT T1.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC;",
    "exec_result": 0
  },
  {
    "idx": 673,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;",
    "exec_result": 1
  },
  {
    "idx": 674,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;",
    "exec_result": 1
  },
  {
    "idx": 675,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) AS Count FROM people GROUP BY Nationality ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 676,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality  FROM people  GROUP BY Nationality  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 677,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT Nationality  FROM people  GROUP BY Nationality  HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 678,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT Nationality  FROM people  GROUP BY Nationality  HAVING COUNT(*) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 679,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 680,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT Name, Birth_Date FROM people ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 681,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT Name FROM people WHERE Nationality <> 'Russia';",
    "exec_result": 1
  },
  {
    "idx": 682,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT Name FROM people WHERE Nationality <> 'Russia';",
    "exec_result": 1
  },
  {
    "idx": 683,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player);",
    "exec_result": 1
  },
  {
    "idx": 684,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "exec_result": 1
  },
  {
    "idx": 685,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM people;",
    "exec_result": 1
  },
  {
    "idx": 686,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM people;",
    "exec_result": 1
  },
  {
    "idx": 687,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM area_code_state",
    "pred": "SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;",
    "exec_result": 1
  },
  {
    "idx": 688,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "pred": "SELECT c.contestant_number, c.contestant_name  FROM CONTESTANTS c  ORDER BY c.contestant_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 689,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "pred": "SELECT vote_id, phone_number, state FROM VOTES;",
    "exec_result": 1
  },
  {
    "idx": 690,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "pred": "SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE;",
    "exec_result": 1
  },
  {
    "idx": 691,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "pred": "SELECT MAX(created) FROM VOTES WHERE state = 'CA';",
    "exec_result": 1
  },
  {
    "idx": 692,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "pred": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != 'Jessie Alloway';",
    "exec_result": 1
  },
  {
    "idx": 693,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT DISTINCT state ,  created FROM votes",
    "pred": "SELECT DISTINCT state, created FROM VOTES;",
    "exec_result": 1
  },
  {
    "idx": 694,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "pred": "SELECT c.contestant_number, c.contestant_name  FROM CONTESTANTS c  JOIN (     SELECT contestant_number      FROM VOTES      GROUP BY contestant_number      HAVING COUNT(*) >= 2 ) v ON c.contestant_number = v.contestant_number;",
    "exec_result": 1
  },
  {
    "idx": 695,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T2.contestant_number, T2.contestant_name  FROM VOTES AS T1  JOIN CONTESTANTS AS T2  ON T1.contestant_number = T2.contestant_number  WHERE T1.vote_id = (SELECT MIN(vote_id) FROM VOTES)",
    "exec_result": 1
  },
  {
    "idx": 696,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "pred": "SELECT COUNT(*)  FROM VOTES  JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state  WHERE AREA_CODE_STATE.state IN ('NY', 'CA')",
    "exec_result": 0
  },
  {
    "idx": 697,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "pred": "SELECT COUNT(*)  FROM CONTESTANTS  WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES);",
    "exec_result": 1
  },
  {
    "idx": 698,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT area_code  FROM AREA_CODE_STATE  WHERE state = (     SELECT state      FROM VOTES      GROUP BY state      ORDER BY COUNT(*) DESC      LIMIT 1 );",
    "exec_result": 0
  },
  {
    "idx": 699,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "pred": "SELECT V.created, A.state, V.phone_number FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number JOIN AREA_CODE_STATE A ON V.state = A.state WHERE C.contestant_name = 'Tabatha Gehling';",
    "exec_result": 0
  },
  {
    "idx": 700,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "pred": "SELECT DISTINCT a.area_code FROM AREA_CODE_STATE a JOIN VOTES v ON a.state = v.state JOIN CONTESTANTS c1 ON v.contestant_number = c1.contestant_number JOIN CONTESTANTS c2 ON v.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling') AND c1.contestant_number != c2.contestant_number WHERE c1.contestant_name = 'Kelly Clauss' ORDER BY a.area_code;",
    "exec_result": 0
  },
  {
    "idx": 701,
    "db_id": "voter_1",
    "question": "",
    "gold": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "pred": "SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%';",
    "exec_result": 1
  },
  {
    "idx": 702,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT Name  FROM country  WHERE IndepYear > 1950;",
    "exec_result": 1
  },
  {
    "idx": 703,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT Name  FROM country  WHERE IndepYear > 1950;",
    "exec_result": 1
  },
  {
    "idx": 704,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(DISTINCT Code)  FROM country  WHERE GovernmentForm = 'Republic';",
    "exec_result": 1
  },
  {
    "idx": 705,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(DISTINCT Code) FROM country WHERE GovernmentForm = 'Republic';",
    "exec_result": 1
  },
  {
    "idx": 706,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(`SurfaceArea`)  FROM `country`  WHERE `Region` = 'Caribbean';",
    "exec_result": 1
  },
  {
    "idx": 707,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(`SurfaceArea`)  FROM country  WHERE `Region` = 'Caribbean';",
    "exec_result": 1
  },
  {
    "idx": 708,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT Continent FROM country WHERE Code = 'AIA';",
    "exec_result": 1
  },
  {
    "idx": 709,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT Continent FROM country WHERE Name = 'Anguilla'",
    "exec_result": 1
  },
  {
    "idx": 710,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT `Region` FROM `country` WHERE `Code` = (SELECT `CountryCode` FROM `city` WHERE `Name` = 'Kabul');",
    "exec_result": 1
  },
  {
    "idx": 711,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT Region  FROM country  WHERE Code = (SELECT CountryCode FROM city WHERE Name = 'Kabul');",
    "exec_result": 1
  },
  {
    "idx": 712,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT Language  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.Name = 'Aruba'  ORDER BY Percentage DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 713,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT T2.Language  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  JOIN city AS T3 ON T1.Code = T3.CountryCode  WHERE T1.Name = 'Aruba' AND T2.IsOfficial = 'T' AND T2.Percentage = (SELECT MAX(T2.Percentage) FROM countrylanguage AS T2 WHERE T2.CountryCode = T1.Code)",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT `Population`, `LifeExpectancy` FROM `country` WHERE `Name` = 'Brazil';",
    "exec_result": 1
  },
  {
    "idx": 715,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT `Population`, `LifeExpectancy` FROM `country` WHERE `Name` = 'Brazil';",
    "exec_result": 1
  },
  {
    "idx": 716,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT Region, Population FROM country WHERE Name = 'Angola';",
    "exec_result": 1
  },
  {
    "idx": 717,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT Region, Population  FROM country  WHERE Code = 'AGO';",
    "exec_result": 1
  },
  {
    "idx": 718,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(T2.LifeExpectancy)  FROM country AS T1  JOIN city AS T2 ON T1.Code = T2.CountryCode  JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode  WHERE T1.Region = 'Central Africa';",
    "exec_result": 0
  },
  {
    "idx": 719,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(`LifeExpectancy`)  FROM `country`  WHERE `Region` = 'Central Africa';",
    "exec_result": 1
  },
  {
    "idx": 720,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT T1.Name  FROM country AS T1  JOIN city AS T2 ON T1.Code = T2.CountryCode  WHERE T1.Continent = 'Asia'  ORDER BY T1.LifeExpectancy ASC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 721,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT Name  FROM country  WHERE Continent = 'Asia'  ORDER BY LifeExpectancy ASC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 722,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT SUM(city.Population) AS TotalPopulation, MAX(country.GNP) AS MaxGNP FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 723,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT COUNT(*) AS PopulationInAsia, MAX(Country.GNP) AS LargestGNPAmongAsia FROM country WHERE Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 724,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(T2.LifeExpectancy)  FROM countrylanguage AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  JOIN city AS T3 ON T3.CountryCode = T2.Code  WHERE T1.IsOfficial = 'T'  AND T2.Continent = 'Africa'  AND T2.GovernmentForm = 'Republic';",
    "exec_result": 0
  },
  {
    "idx": 725,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(`LifeExpectancy`)  FROM `country`  WHERE `Continent` = 'Africa' AND `GovernmentForm` = 'Republic';",
    "exec_result": 1
  },
  {
    "idx": 726,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(`SurfaceArea`)  FROM `country`  WHERE `Continent` IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 727,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(`SurfaceArea`)  FROM `country`  WHERE `Continent` IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 728,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT COUNT(*)  FROM city  JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode  JOIN country ON country.Code = city.CountryCode  WHERE city.District = 'Gelderland' AND countrylanguage.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 729,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT SUM(city.Population)  FROM city  JOIN country ON city.CountryCode = country.Code  WHERE country.Region = 'Netherlands' AND city.District = 'Gelderland';",
    "exec_result": 0
  },
  {
    "idx": 730,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(Country.GNP), SUM(Country.Population) FROM country WHERE Country.GovernmentForm = 'US territory';",
    "exec_result": 0
  },
  {
    "idx": 731,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(CASE WHEN T2.Continent = 'North America' AND T2.Region = 'United States' THEN T2.Population END) AS MeanGNP,        SUM(CASE WHEN T2.Continent = 'North America' AND T2.Region = 'United States' THEN T2.Population END) AS TotalPopulation FROM country AS T2 JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T3.Language = 'English' AND T3.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 732,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT Language)  FROM countrylanguage;",
    "exec_result": 1
  },
  {
    "idx": 733,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage;",
    "exec_result": 1
  },
  {
    "idx": 734,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';",
    "exec_result": 1
  },
  {
    "idx": 735,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';",
    "exec_result": 1
  },
  {
    "idx": 736,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT SUM(T3.Percentage) FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode WHERE T1.Name = 'Aruba'",
    "exec_result": 0
  },
  {
    "idx": 737,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT COUNT(*)  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE country.Name = 'Aruba'  AND countrylanguage.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 738,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*)  FROM countrylanguage  WHERE CountryCode = 'AFG' AND IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 739,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*)  FROM countrylanguage  WHERE CountryCode = 'AFG' AND IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 740,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name  FROM country c JOIN (     SELECT cl.CountryCode, COUNT(DISTINCT cl.Language) AS LanguageCount     FROM countrylanguage cl     GROUP BY cl.CountryCode     ORDER BY LanguageCount DESC     LIMIT 1 ) AS lang_count ON c.Code = lang_count.CountryCode",
    "exec_result": 0
  },
  {
    "idx": 741,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name  FROM country c  JOIN (     SELECT CountryCode, COUNT(*) AS LanguageCount      FROM countrylanguage      GROUP BY CountryCode      ORDER BY LanguageCount DESC      LIMIT 1 ) AS lang_count ON c.Code = lang_count.CountryCode;",
    "exec_result": 0
  },
  {
    "idx": 742,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Continent  FROM country  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  GROUP BY Continent  ORDER BY COUNT(DISTINCT Language) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 743,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Continent FROM country WHERE Code IN (     SELECT CountryCode     FROM countrylanguage     GROUP BY CountryCode     HAVING COUNT(DISTINCT Language) >= ALL (         SELECT COUNT(DISTINCT Language)         FROM countrylanguage         GROUP BY CountryCode     ) ) ORDER BY Continent ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 744,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T' AND EXISTS (     SELECT 1     FROM countrylanguage AS dutch_lang     WHERE dutch_lang.CountryCode = country.Code     AND dutch_lang.Language = 'Dutch'     AND dutch_lang.IsOfficial = 'T' );",
    "exec_result": 0
  },
  {
    "idx": 745,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND (countrylanguage.IsOfficial = 'T');",
    "exec_result": 0
  },
  {
    "idx": 746,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT c.Name  FROM country c  JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'  JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T' WHERE cl1.CountryCode = cl2.CountryCode",
    "exec_result": 0
  },
  {
    "idx": 747,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT DISTINCT c.Name  FROM country c  JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'  JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 748,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name  FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T' JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T' WHERE cl1.CountryCode = cl2.CountryCode;",
    "exec_result": 1
  },
  {
    "idx": 749,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name  FROM country c  JOIN countrylanguage cl ON c.Code = cl.CountryCode  WHERE cl.Language IN ('English', 'French') AND cl.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 750,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(DISTINCT c.Continent) FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Chinese' AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 751,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(DISTINCT c.Continent) FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode JOIN city AS ct ON c.Code = ct.CountryCode WHERE cl.Language = 'Chinese' AND c.GovernmentForm LIKE '%Chinese%';",
    "exec_result": 0
  },
  {
    "idx": 752,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT DISTINCT c.Region  FROM country AS c  JOIN countrylanguage AS cl ON c.Code = cl.CountryCode  WHERE cl.Language IN ('English', 'Dutch') AND cl.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 753,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT DISTINCT c.Region FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('Dutch', 'English') AND cl.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 754,
    "db_id": "world_1",
    "question": "",
    "gold": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "pred": "SELECT DISTINCT T1.Name  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 755,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT DISTINCT T1.Name  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language IN ('English', 'Dutch') AND T2.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 756,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT Language  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE Continent = 'Asia'  GROUP BY Language  ORDER BY Percentage DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 757,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT Language  FROM countrylanguage  JOIN country ON countrylanguage.CountryCode = country.Code  WHERE Continent = 'Asia'  GROUP BY Language  ORDER BY SUM(CASE WHEN IsOfficial = 'T' THEN Percentage ELSE 0 END) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 758,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT cl.Language  FROM countrylanguage cl  JOIN country c ON cl.CountryCode = c.Code  WHERE c.GovernmentForm = 'Republic' AND cl.IsOfficial = 'T'  GROUP BY cl.Language  HAVING COUNT(DISTINCT cl.CountryCode) = 1;",
    "exec_result": 0
  },
  {
    "idx": 759,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode IN (     SELECT Code     FROM country     WHERE GovernmentForm = 'Republic'     GROUP BY Code     HAVING COUNT(*) = 1 )",
    "exec_result": 0
  },
  {
    "idx": 760,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT c.Name  FROM city c  JOIN countrylang cl ON c.CountryCode = cl.CountryCode  WHERE cl.Language = 'English' AND c.Population = (SELECT MAX(Population) FROM city)",
    "exec_result": 0
  },
  {
    "idx": 761,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT c.Name AS MostPopulousCity, COUNT(*) AS EnglishSpeakersCount FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' GROUP BY c.ID ORDER BY EnglishSpeakersCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 762,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, COALESCE(cl.LifeExpectancy, 0) AS LifeExpectancy  FROM country c  JOIN city ci ON c.Code = ci.CountryCode  JOIN countrylanguage cl ON c.Code = cl.CountryCode  WHERE c.Continent = 'Asia'  ORDER BY c.SurfaceArea DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 763,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, c.LifeExpectancy  FROM country c  WHERE c.Continent = 'Asia'  ORDER BY c.Population DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 764,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(c.LifeExpectancy) FROM country AS c JOIN countrylanguage AS cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial <> 'T'",
    "exec_result": 0
  },
  {
    "idx": 765,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(T2.LifeExpectancy) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN city AS T3 ON T3.CountryCode = T2.Code WHERE T1.Language = 'English' AND T1.IsOfficial = 'F'",
    "exec_result": 0
  },
  {
    "idx": 766,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT SUM(city.Population)  FROM city  JOIN country ON city.CountryCode = country.Code  JOIN countrylanguage ON country.Code = countrylanguage.CountryCode  WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F'",
    "exec_result": 0
  },
  {
    "idx": 767,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT COUNT(*)  FROM country c  WHERE c.Code NOT IN (     SELECT cl.CountryCode      FROM countrylanguage cl      WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' )",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT T2.Language  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T1.HeadOfState = 'Beatrix' AND T2.IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 769,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT T3.Language FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode JOIN countrylanguage AS T3 ON T1.Code = T3.CountryCode WHERE T1.HeadOfState = 'Beatrix' AND T3.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 770,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 771,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 772,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT c.Name  FROM country c  WHERE c.Continent <> 'Europe' AND c.SurfaceArea > (     SELECT MAX(c2.SurfaceArea)      FROM country c2      WHERE c2.Continent = 'Europe' )",
    "exec_result": 0
  },
  {
    "idx": 773,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT Name FROM country WHERE Continent != 'Europe' AND SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe');",
    "exec_result": 0
  },
  {
    "idx": 774,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT c.Name  FROM country c  JOIN city ci ON c.Code = ci.CountryCode  WHERE c.Continent = 'Africa' AND ci.Population < (SELECT MAX(Population) FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia'))",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT c.Name  FROM country c  JOIN city ci ON c.Code = ci.CountryCode  WHERE c.Continent = 'Africa' AND ci.Population <      (SELECT MIN(Population) FROM city WHERE CountryCode IN          (SELECT Code FROM country WHERE Continent = 'Asia'))",
    "exec_result": 0
  },
  {
    "idx": 776,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT Country.Name  FROM country  WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa')",
    "exec_result": 1
  },
  {
    "idx": 777,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT c.Name FROM country c JOIN city ci ON c.Code = ci.CountryCode WHERE c.Continent = 'Asia' AND ci.Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa') ORDER BY c.Population DESC;",
    "exec_result": 0
  },
  {
    "idx": 778,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT T1.Code  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language = 'English' AND T2.IsOfficial = 'F'  LIMIT 1; -- Adjust LIMIT based on expected number of results",
    "exec_result": 0
  },
  {
    "idx": 779,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT T2.Code  FROM countrylanguage AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'English' AND T1.IsOfficial = 'T'  EXCEPT  SELECT T2.Code  FROM countrylanguage AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language = 'English' AND T1.IsOfficial = 'F';",
    "exec_result": 0
  },
  {
    "idx": 780,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT T2.Code  FROM countrylanguage AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  WHERE T1.Language != 'English' AND T1.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 781,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT T1.Code  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language <> 'English' AND T2.IsOfficial = 'T'",
    "exec_result": 0
  },
  {
    "idx": 782,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT T1.Code  FROM country AS T1  JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode  WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' AND T1.GovernmentForm != 'Republic'",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT DISTINCT c.Code  FROM country AS c WHERE NOT EXISTS (     SELECT 1      FROM countrylanguage AS cl      WHERE cl.CountryCode = c.Code AND cl.Language = 'English' AND cl.IsOfficial = 'T' ) AND c.GovernmentForm != 'Republic'",
    "exec_result": 0
  },
  {
    "idx": 784,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT c.Name  FROM city c  JOIN country co ON c.CountryCode = co.Code  JOIN countrylanguage cl ON co.Code = cl.CountryCode  WHERE co.Continent = 'Europe' AND cl.Language = 'English' AND cl.IsOfficial = 'F'",
    "exec_result": 0
  },
  {
    "idx": 785,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT c.Name  FROM city c  JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode  JOIN country co ON c.CountryCode = co.Code  WHERE co.Continent = 'Europe' AND cl.Language = 'English' AND cl.IsOfficial = 'F'",
    "exec_result": 0
  },
  {
    "idx": 786,
    "db_id": "world_1",
    "question": "",
    "gold": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "pred": "SELECT DISTINCT c.Name  FROM city c  JOIN country co ON c.CountryCode = co.Code  JOIN countrylanguage cl ON co.Code = cl.CountryCode  WHERE co.Region = 'Asia' AND cl.Language = 'Chinese' AND cl.IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 787,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "pred": "SELECT DISTINCT T1.Name  FROM city AS T1  JOIN country AS T2 ON T1.CountryCode = T2.Code  JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode  WHERE T2.Continent = 'Asia' AND T3.Language = 'Chinese' AND T3.IsOfficial = 'T'",
    "exec_result": 1
  },
  {
    "idx": 788,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT Name, IndepYear, SurfaceArea  FROM country  WHERE Population = (SELECT MIN(Population) FROM country);",
    "exec_result": 0
  },
  {
    "idx": 789,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);",
    "exec_result": 0
  },
  {
    "idx": 790,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Population, c.Name, cs.HeadOfState FROM country c JOIN city ci ON c.Code = ci.CountryCode JOIN countrylanguage cl ON c.Code = cl.CountryCode JOIN (SELECT Code FROM country ORDER BY SurfaceArea DESC LIMIT 1) AS max_area_country ON c.Code = max_area_country.Code WHERE c.Code = max_area_country.Code;",
    "exec_result": 0
  },
  {
    "idx": 791,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, COALESCE(h.HeadOfState, 'Unknown')  FROM country c  JOIN (     SELECT Code, MAX(SurfaceArea) AS max_area      FROM country  ) m ON c.SurfaceArea = m.max_area AND c.Code = m.Code  LEFT JOIN country AS h ON c.Code = h.Code  WHERE m.max_area IS NOT NULL;",
    "exec_result": 1
  },
  {
    "idx": 792,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT c.Name, COUNT(DISTINCT cl.Language) AS NumberOfLanguages FROM country c JOIN city ci ON c.Code = ci.CountryCode JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code HAVING COUNT(DISTINCT cl.Language) >= 3;",
    "exec_result": 0
  },
  {
    "idx": 793,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT c.Name, COUNT(DISTINCT cl.Language) AS NumberOfLanguages FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code, c.Name HAVING COUNT(DISTINCT cl.Language) > 2;",
    "exec_result": 1
  },
  {
    "idx": 794,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT District, COUNT(*) AS NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;",
    "exec_result": 1
  },
  {
    "idx": 795,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT District, COUNT(*) AS NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;",
    "exec_result": 1
  },
  {
    "idx": 796,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT GovernmentForm, AVG(LifeExpectancy) AS AverageLifeExpectancy, SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm;",
    "exec_result": 0
  },
  {
    "idx": 797,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT      GovernmentForm,      SUM(Population) AS TotalPopulation FROM      country WHERE      LifeExpectancy > 72 GROUP BY      GovernmentForm;",
    "exec_result": 0
  },
  {
    "idx": 798,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT Continent, AVG(LifeExpectancy), SUM(Population) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent;",
    "exec_result": 0
  },
  {
    "idx": 799,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT Continent, SUM(Population) AS TotalPopulation, AVG(CASE WHEN LifeExpectancy IS NOT NULL THEN LifeExpectancy ELSE 0 END) AS AverageLifeExpectancy FROM country WHERE Continent IN (SELECT Continent FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72) GROUP BY Continent;",
    "exec_result": 0
  },
  {
    "idx": 800,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT Name, SurfaceArea  FROM country  ORDER BY SurfaceArea DESC  LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 801,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 802,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 803,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 804,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT Name  FROM country  WHERE Population IN (SELECT MIN(Population), Code FROM country ORDER BY Population ASC LIMIT 3)",
    "exec_result": 0
  },
  {
    "idx": 805,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT Name  FROM country  ORDER BY Population ASC  LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 806,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(*) FROM country WHERE Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 807,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(DISTINCT Code) FROM country WHERE Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 808,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT c.Name  FROM country c  JOIN city ci ON c.Code = ci.CountryCode  WHERE c.Continent = 'Europe' AND ci.Population >= 80000;",
    "exec_result": 0
  },
  {
    "idx": 809,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT c.Name  FROM country c  JOIN city ci ON c.Code = ci.CountryCode  WHERE c.Continent = 'Europe' AND ci.Population = 80000;",
    "exec_result": 1
  },
  {
    "idx": 810,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT SUM(country.Population) AS TotalPopulation, AVG(country.SurfaceArea) AS AverageArea FROM country JOIN city ON country.Code = city.CountryCode WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;",
    "exec_result": 0
  },
  {
    "idx": 811,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT SUM(country.Population) AS TotalPopulation, AVG(country.SurfaceArea) AS AverageSurfaceArea FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;",
    "exec_result": 0
  },
  {
    "idx": 812,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "pred": "SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;",
    "exec_result": 1
  },
  {
    "idx": 813,
    "db_id": "world_1",
    "question": "",
    "gold": "select name from city where population between 160000 and 900000",
    "pred": "SELECT Name  FROM city  WHERE Population BETWEEN 160000 AND 900000;",
    "exec_result": 1
  },
  {
    "idx": 814,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Language  FROM countrylanguage  GROUP BY Language  ORDER BY COUNT(DISTINCT CountryCode) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 815,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Language  FROM countrylanguage  GROUP BY Language  ORDER BY COUNT(DISTINCT CountryCode) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 816,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT      c.Name AS Country,     cl.Language,     cl.Percentage * 100 AS PercentageInCountry FROM      country c JOIN      (SELECT          cl.CountryCode,         cl.Language,         MAX(cl.Percentage) AS MaxPercentage      FROM           countrylanguage cl      GROUP BY           cl.CountryCode) subq ON      c.Code = subq.CountryCode JOIN      countrylanguage cl ON      subq.CountryCode = cl.CountryCode AND      subq.MaxPercentage = cl.Percentage ORDER BY      c.Name,      cl.Percentage DESC;",
    "exec_result": 0
  },
  {
    "idx": 817,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT      cl.CountryCode,     l.Language,     MAX(cl.Percentage) AS MaxPercentage FROM      countrylanguage cl GROUP BY      cl.CountryCode HAVING      cl.Percentage = (         SELECT              MAX(p.Percentage)         FROM              (SELECT                   cl.Percentage              FROM                   countrylanguage cl              WHERE                   cl.CountryCode = clg.CountryCode              ORDER BY                   cl.Percentage DESC              LIMIT 1) p     );",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(*)  FROM countrylanguage  WHERE Language = 'Spanish' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 820,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND T2.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE Language = 'Spanish')",
    "exec_result": 0
  },
  {
    "idx": 821,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT cl.CountryCode  FROM countrylanguage cl  JOIN country c ON cl.CountryCode = c.Code  WHERE cl.Language = 'Spanish' AND cl.Percentage >= 50;",
    "exec_result": 0
  },
  {
    "idx": 822,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(*) FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 823,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(*) FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 824,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT Name FROM conductor ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 825,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT Name FROM conductor ORDER BY Age;",
    "exec_result": 1
  },
  {
    "idx": 826,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT Name FROM conductor WHERE Nationality != 'USA';",
    "exec_result": 1
  },
  {
    "idx": 827,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT Name FROM conductor WHERE Nationality != 'USA';",
    "exec_result": 1
  },
  {
    "idx": 828,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;",
    "exec_result": 1
  },
  {
    "idx": 829,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT Record_Company  FROM orchestra  ORDER BY Year_of_Founded DESC;",
    "exec_result": 1
  },
  {
    "idx": 830,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(Attendance) FROM show;",
    "exec_result": 1
  },
  {
    "idx": 831,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(Attendance) FROM show;",
    "exec_result": 1
  },
  {
    "idx": 832,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';",
    "exec_result": 1
  },
  {
    "idx": 833,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MAX(\"Share\") AS max_share, MIN(\"Share\") AS min_share FROM \"performance\" WHERE \"Type\" <> 'Live final';",
    "exec_result": 1
  },
  {
    "idx": 834,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 835,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT Nationality) FROM conductor;",
    "exec_result": 1
  },
  {
    "idx": 836,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC;",
    "exec_result": 1
  },
  {
    "idx": 837,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT Name  FROM conductor  ORDER BY Year_of_Work DESC;",
    "exec_result": 1
  },
  {
    "idx": 838,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 839,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT Name  FROM conductor  WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
    "exec_result": 1
  },
  {
    "idx": 840,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT c.Name, o.Orchestra  FROM conductor c  JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID;",
    "exec_result": 1
  },
  {
    "idx": 841,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT c.Name, o.Orchestra  FROM conductor c  JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID;",
    "exec_result": 1
  },
  {
    "idx": 842,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT T1.Name  FROM conductor AS T1  JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  HAVING COUNT(T2.Orchestra_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 843,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT T1.Name  FROM conductor AS T1  JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID  GROUP BY T1.Conductor_ID  HAVING COUNT(T2.Orchestra_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 844,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Name  FROM conductor  WHERE Conductor_ID IN (     SELECT Conductor_ID      FROM orchestra      GROUP BY Conductor_ID      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 845,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name  FROM conductor c  JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID  GROUP BY c.Conductor_ID, c.Name  ORDER BY COUNT(o.Orchestra_ID) DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT c.Name  FROM conductor c  JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID  WHERE o.Year_of_Founded > 2008;",
    "exec_result": 1
  },
  {
    "idx": 847,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT c.Name  FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Year_of_Founded > 2008;",
    "exec_result": 1
  },
  {
    "idx": 848,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT Record_Company, COUNT(*) AS Num_of_Orchestras FROM orchestra GROUP BY Record_Company;",
    "exec_result": 1
  },
  {
    "idx": 849,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company;",
    "exec_result": 1
  },
  {
    "idx": 850,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT Major_Record_Format, COUNT(*) AS Count FROM orchestra GROUP BY Major_Record_Format ORDER BY Count ASC;",
    "exec_result": 0
  },
  {
    "idx": 851,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT Major_Record_Format, COUNT(*) AS Frequency FROM orchestra GROUP BY Major_Record_Format ORDER BY Frequency DESC;",
    "exec_result": 0
  },
  {
    "idx": 852,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Record_Company  FROM orchestra  GROUP BY Record_Company  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 853,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Record_Company  FROM orchestra  GROUP BY Record_Company  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 854,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "exec_result": 1
  },
  {
    "idx": 855,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "exec_result": 1
  },
  {
    "idx": 856,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT Record_Company  FROM orchestra WHERE Year_of_Founded < 2003 UNION SELECT Record_Company  FROM orchestra WHERE Year_of_Founded > 2003;",
    "exec_result": 0
  },
  {
    "idx": 857,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT DISTINCT Record_Company  FROM orchestra  WHERE Year_of_Founded < 2003  INTERSECT  SELECT Record_Company  FROM orchestra  WHERE Year_of_Founded > 2003;",
    "exec_result": 1
  },
  {
    "idx": 858,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(*)  FROM orchestra  WHERE Major_Record_Format IN ('CD', 'DVD')",
    "exec_result": 1
  },
  {
    "idx": 859,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(*)  FROM orchestra  WHERE Major_Record_Format IN ('CD', 'DVD');",
    "exec_result": 1
  },
  {
    "idx": 860,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT Year_of_Founded  FROM orchestra  WHERE Orchestra_ID IN (     SELECT Orchestra_ID      FROM performance      GROUP BY Orchestra_ID      HAVING COUNT(Performance_ID) > 1 )",
    "exec_result": 1
  },
  {
    "idx": 861,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT T2.Year_of_Founded  FROM performance AS T1  JOIN orchestra AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID  GROUP BY T1.Orchestra_ID  HAVING COUNT(T1.Performance_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 862,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(*) FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(*) FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 864,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 865,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 866,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT grade FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 867,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT name, grade FROM Highschooler;",
    "exec_result": 0
  },
  {
    "idx": 868,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 869,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT grade FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 870,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name FROM Highschooler WHERE grade = 10;",
    "exec_result": 1
  },
  {
    "idx": 871,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT name FROM Highschooler WHERE grade = 10;",
    "exec_result": 1
  },
  {
    "idx": 872,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 873,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT ID FROM Highschooler WHERE name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 874,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);",
    "exec_result": 1
  },
  {
    "idx": 875,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);",
    "exec_result": 1
  },
  {
    "idx": 876,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade, COUNT(*) AS num_highschoolers FROM Highschooler GROUP BY grade;",
    "exec_result": 1
  },
  {
    "idx": 877,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT grade, COUNT(*) AS num_highschoolers FROM Highschooler GROUP BY grade;",
    "exec_result": 1
  },
  {
    "idx": 878,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade, COUNT(*) AS num_highschoolers FROM Highschooler GROUP BY grade ORDER BY num_highschoolers DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 879,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 880,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade  FROM Highschooler  GROUP BY grade  HAVING COUNT(*) >= 4",
    "exec_result": 1
  },
  {
    "idx": 881,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT grade  FROM Highschooler  GROUP BY grade  HAVING COUNT(*) >= 4",
    "exec_result": 1
  },
  {
    "idx": 882,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(*) AS num_friends FROM Friend GROUP BY student_id;",
    "exec_result": 1
  },
  {
    "idx": 883,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT ID, COUNT(friend_id) AS num_friends FROM Friend GROUP BY ID;",
    "exec_result": 0
  },
  {
    "idx": 884,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT Highschooler.name, COUNT(Friend.friend_id) AS num_friends FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID;",
    "exec_result": 1
  },
  {
    "idx": 885,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT H.name, COUNT(F.friend_id) AS num_friends FROM Highschooler H JOIN Friend F ON H.ID = F.student_id GROUP BY H.ID, H.name;",
    "exec_result": 1
  },
  {
    "idx": 886,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (     SELECT friend_id FROM Friend GROUP BY friend_id ORDER BY COUNT(*) DESC LIMIT 1 ) UNION SELECT name FROM Highschooler WHERE ID IN (     SELECT student_id FROM Friend GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 887,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name  FROM Highschooler  WHERE ID IN (     SELECT student_id      FROM Friend      GROUP BY student_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 888,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT name  FROM Highschooler  WHERE ID IN (     SELECT student_id      FROM Friend      GROUP BY student_id      HAVING COUNT(*) >= 3 ) UNION SELECT name  FROM Highschooler  WHERE ID IN (     SELECT friend_id      FROM Friend      GROUP BY friend_id      HAVING COUNT(*) >= 3 )",
    "exec_result": 1
  },
  {
    "idx": 889,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT name  FROM Highschooler  WHERE ID IN (     SELECT student_id      FROM Friend      GROUP BY student_id      HAVING COUNT(*) >= 3 ) UNION SELECT name  FROM Highschooler  WHERE ID IN (     SELECT friend_id      FROM Friend      GROUP BY friend_id      HAVING COUNT(*) >= 3 )",
    "exec_result": 1
  },
  {
    "idx": 890,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT DISTINCT Highschooler.name  FROM Highschooler  JOIN Friend ON Highschooler.ID = Friend.student_id  WHERE Friend.friend_id IN (     SELECT ID      FROM Highschooler      WHERE name = 'Kyle' )",
    "exec_result": 0
  },
  {
    "idx": 891,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT name FROM Highschooler WHERE ID IN (     SELECT friend_id FROM Friend WHERE student_id = (         SELECT ID FROM Highschooler WHERE name = 'Kyle'     ) )",
    "exec_result": 1
  },
  {
    "idx": 892,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*)  FROM Friend  WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')",
    "exec_result": 1
  },
  {
    "idx": 893,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*)  FROM Friend  WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')",
    "exec_result": 1
  },
  {
    "idx": 894,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) UNION SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT liked_id FROM Likes)",
    "exec_result": 0
  },
  {
    "idx": 895,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) UNION SELECT DISTINCT ID FROM Highschooler WHERE ID NOT IN (SELECT liked_id FROM Likes)",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend) UNION SELECT name FROM Highschooler WHERE ID NOT IN (SELECT liked_id FROM Likes);",
    "exec_result": 0
  },
  {
    "idx": 897,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 898,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT DISTINCT H.ID FROM Highschooler H JOIN Friend F ON H.ID = F.student_id OR H.ID = F.friend_id JOIN Likes L ON H.ID = L.student_id OR H.ID = L.liked_id;",
    "exec_result": 0
  },
  {
    "idx": 899,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT DISTINCT H.ID FROM Highschooler H JOIN Friend F ON H.ID = F.student_id OR H.ID = F.friend_id JOIN Likes L ON H.ID = L.student_id OR H.ID = L.liked_id;",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT DISTINCT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id OR h.ID = f.friend_id JOIN Likes l ON h.ID = l.student_id OR h.ID = l.liked_id",
    "exec_result": 0
  },
  {
    "idx": 901,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT DISTINCT H.name  FROM Highschooler H  JOIN Friend F ON H.ID = F.student_id  JOIN Likes L ON H.ID = L.liked_id;",
    "exec_result": 0
  },
  {
    "idx": 902,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(liked_id) AS number_of_likes FROM Likes GROUP BY student_id;",
    "exec_result": 1
  },
  {
    "idx": 903,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT student_id, COUNT(*) AS num_likes FROM Likes GROUP BY student_id;",
    "exec_result": 1
  },
  {
    "idx": 904,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT H.name, COUNT(L.liked_id) AS num_likes FROM Highschooler H JOIN Likes L ON H.ID = L.liked_id GROUP BY H.ID, H.name;",
    "exec_result": 0
  },
  {
    "idx": 905,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT T1.name, COUNT(*) AS num_likes FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID, T1.name;",
    "exec_result": 1
  },
  {
    "idx": 906,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name  FROM Highschooler  WHERE ID = (     SELECT student_id      FROM Likes      GROUP BY student_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 907,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT name  FROM Highschooler  WHERE ID = (     SELECT liked_id      FROM Likes      GROUP BY liked_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 908,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT name FROM Highschooler WHERE ID IN (     SELECT liked_id FROM Likes GROUP BY liked_id HAVING COUNT(*) >= 2 )",
    "exec_result": 0
  },
  {
    "idx": 909,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(T2.liked_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 910,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (     SELECT student_id     FROM Friend     GROUP BY student_id     HAVING COUNT(*) >= 2 )",
    "exec_result": 1
  },
  {
    "idx": 911,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT name  FROM Highschooler  WHERE grade > 5  AND ID IN (     SELECT student_id      FROM Friend      GROUP BY student_id      HAVING COUNT(*) >= 2 )",
    "exec_result": 1
  },
  {
    "idx": 912,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*)  FROM Likes  WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')",
    "exec_result": 1
  },
  {
    "idx": 913,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*)  FROM Likes  WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');",
    "exec_result": 1
  },
  {
    "idx": 914,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(grade) FROM Highschooler WHERE ID IN (     SELECT student_id FROM Friend ) UNION ALL SELECT AVG(grade) FROM Highschooler WHERE ID IN (     SELECT friend_id FROM Friend )",
    "exec_result": 0
  },
  {
    "idx": 915,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(grade) AS average_grade FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id OR Highschooler.ID = Friend.friend_id;",
    "exec_result": 0
  },
  {
    "idx": 916,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 917,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)",
    "exec_result": 1
  },
  {
    "idx": 918,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT DISTINCT `state` FROM Owners UNION SELECT DISTINCT `state` FROM Professionals",
    "exec_result": 0
  },
  {
    "idx": 919,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT DISTINCT O.state, P.state  FROM Owners O  JOIN Professionals P ON O.first_name = P.first_name AND O.last_name = P.last_name;",
    "exec_result": 0
  },
  {
    "idx": 920,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(DATEDIFF(CURRENT_DATE, Dogs.date_of_birth)) AS average_age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;",
    "exec_result": 0
  },
  {
    "idx": 921,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(DATE_PART('year', AGE(date_departed, date_arrived))) AS avg_age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id",
    "exec_result": 0
  },
  {
    "idx": 922,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT p.professional_id, p.last_name, p.cell_number  FROM Professionals p  JOIN Treatments t ON p.professional_id = t.professional_id  WHERE p.state = 'Indiana' OR (SELECT COUNT(*) FROM Treatments WHERE professional_id = p.professional_id) > 2;",
    "exec_result": 0
  },
  {
    "idx": 923,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.last_name, p.cell_number HAVING COUNT(t.treatment_id) > 2 OR p.state = 'Indiana'",
    "exec_result": 0
  },
  {
    "idx": 924,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT D.name FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id WHERE T.cost_of_treatment < 1000;",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT D.name FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id WHERE T.cost_of_treatment <= 1000",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT `first_name` FROM `Professionals` UNION SELECT `first_name` FROM `Owners` EXCEPT SELECT `name` FROM `Dogs`",
    "exec_result": 1
  },
  {
    "idx": 927,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT DISTINCT first_name  FROM Professionals  UNION  SELECT DISTINCT first_name  FROM Owners  EXCEPT  SELECT DISTINCT name  FROM Dogs;",
    "exec_result": 1
  },
  {
    "idx": 928,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (     SELECT professional_id     FROM Treatments )",
    "exec_result": 1
  },
  {
    "idx": 929,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT professional_id, role_code, email_address  FROM Professionals  WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);",
    "exec_result": 1
  },
  {
    "idx": 930,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `owner_id`, `first_name`, `last_name` FROM `Owners` JOIN `Dogs` ON `Owners.owner_id` = `Dogs.owner_id` GROUP BY `owner_id`, `first_name`, `last_name` ORDER BY COUNT(`Dogs.dog_id`) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 931,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.owner_id, T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id, T1.first_name, T1.last_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 932,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(t.treatment_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 933,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(t.treatment_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 934,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.breed_name  FROM Breeds AS T1  JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code  GROUP BY T1.breed_name  ORDER BY COUNT(T2.dog_id) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 935,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(T2.dog_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 936,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.owner_id, T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T1.dog_id = T3.dog_id GROUP BY T1.owner_id, T2.last_name ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 937,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T.Owner_id, T.Last_name FROM Owners O JOIN (     SELECT Dog_id, SUM(Cost_of_treatment) AS Total_spent     FROM Treatments     GROUP BY Dog_id ) TT ON O.Owner_id = TT.Dog_id JOIN Dogs D ON D.Owner_id = O.Owner_id WHERE TT.Total_spent = (     SELECT MAX(Total_spent)     FROM (         SELECT SUM(Cost_of_treatment) AS Total_spent         FROM Treatments T2         JOIN Dogs D2 ON D2.Owner_id = T2.Dog_id         GROUP BY D2.Owner_id     ) )",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT t.treatment_type_description  FROM Treatment_Types t  JOIN Treatments tr ON t.treatment_type_code = tr.treatment_type_code  GROUP BY t.treatment_type_code  ORDER BY SUM(tr.cost_of_treatment) ASC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 939,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT t.treatment_type_description  FROM Treatment_Types t  JOIN Treatments tr ON t.treatment_type_code = tr.treatment_type_code  GROUP BY t.treatment_type_code, t.treatment_type_description  ORDER BY SUM(tr.cost_of_treatment) ASC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 940,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT `Owners`.`owner_id`, `Owners`.`zip_code` FROM `Owners` JOIN `Dogs` ON `Owners`.`owner_id` = `Dogs`.`owner_id` JOIN `Treatments` ON `Dogs`.`dog_id` = `Treatments`.`dog_id` GROUP BY `Owners`.`owner_id`, `Owners`.`zip_code` ORDER BY SUM(`Treatments`.`cost_of_treatment`) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 941,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "SELECT O.owner_id, O.zip_code FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.zip_code ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 942,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT T.Professional_id, T.Cell_number FROM Treatments AS T JOIN Treatment_Types AS TT ON T.Treatment_type_code = TT.Treatment_type_code GROUP BY T.Professional_id HAVING COUNT(TT.Treatment_type_code) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 943,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.cell_number FROM Professionals p JOIN (     SELECT treatment_type_code, COUNT(*) AS treatment_count     FROM Treatments     GROUP BY treatment_type_code     HAVING COUNT(*) >= 2 ) t ON p.professional_id = t.treatment_type_code GROUP BY p.professional_id, p.cell_number HAVING COUNT(DISTINCT t.treatment_type_code) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 944,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
    "exec_result": 0
  },
  {
    "idx": 945,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT p.first_name, p.last_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
    "exec_result": 0
  },
  {
    "idx": 946,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT T.date_of_treatment, P.first_name FROM Treatments AS T JOIN Professionals AS P ON T.professional_id = P.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 947,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT t.date_of_treatment, p.first_name FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 948,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT t.cost_of_treatment, tt.treatment_type_description  FROM Treatments t  JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code;",
    "exec_result": 1
  },
  {
    "idx": 949,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT T.cost_of_treatment, TT.treatment_type_description FROM Treatments T JOIN Treatment_Types TT ON T.treatment_type_code = TT.treatment_type_code;",
    "exec_result": 1
  },
  {
    "idx": 950,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT O.first_name, O.last_name, S.size_description FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Sizes S ON D.size_code = S.size_code;",
    "exec_result": 0
  },
  {
    "idx": 951,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT O.first_name, O.last_name, D.size_code FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id",
    "exec_result": 1
  },
  {
    "idx": 952,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 953,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 954,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT D.name, T.date_of_treatment FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id JOIN Breeds B ON D.breed_code = B.breed_code WHERE B.breed_name IN (     SELECT breed_name     FROM Breeds     GROUP BY breed_name     ORDER BY COUNT(*) DESC     LIMIT 1 ) ORDER BY T.date_of_treatment;",
    "exec_result": 0
  },
  {
    "idx": 955,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT D.name, T.date_of_treatment FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id JOIN Breeds B ON D.breed_code = B.breed_code WHERE B.breed_name IN (     SELECT breed_name     FROM Breeds     GROUP BY breed_name     HAVING COUNT(*) < 2 ) ORDER BY T.date_of_treatment ASC;",
    "exec_result": 0
  },
  {
    "idx": 956,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';",
    "exec_result": 1
  },
  {
    "idx": 957,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT O.first_name, D.name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id WHERE O.state = 'Virginia'",
    "exec_result": 1
  },
  {
    "idx": 958,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT D.date_arrived, D.date_departed FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id;",
    "exec_result": 1
  },
  {
    "idx": 959,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT T.Dogs.date_arrived, T.Dogs.date_departed FROM Treatments T JOIN Dogs D ON T.Dog_id = D.dog_id;",
    "exec_result": 0
  },
  {
    "idx": 960,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.age = (SELECT MIN(age) FROM Dogs)",
    "exec_result": 0
  },
  {
    "idx": 961,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT `last_name` FROM `Owners` JOIN `Dogs` ON `Owners.owner_id` = `Dogs.owner_id` WHERE `age` = (SELECT MIN(`age`) FROM `Dogs`);",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT email_address  FROM Professionals  WHERE state = 'Hawaii' OR state = 'Wisconsin';",
    "exec_result": 1
  },
  {
    "idx": 963,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin';",
    "exec_result": 1
  },
  {
    "idx": 964,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT date_arrived, date_departed FROM Dogs;",
    "exec_result": 1
  },
  {
    "idx": 965,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT date_arrived, date_departed FROM Dogs;",
    "exec_result": 1
  },
  {
    "idx": 966,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(*) FROM Treatments;",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(*) FROM Treatments;",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT professional_id) AS number_of_professionals FROM Treatments;",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT professional_id)  FROM Treatments;",
    "exec_result": 1
  },
  {
    "idx": 970,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT role_code, street, city, state FROM Professionals WHERE city LIKE '%West%';",
    "exec_result": 1
  },
  {
    "idx": 971,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT      Professionals.role_code,     Professionals.street,     Professionals.city,     Professionals.state FROM      Professionals WHERE      Professionals.city LIKE '%West%';",
    "exec_result": 1
  },
  {
    "idx": 972,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT O.first_name, O.last_name, O.email_address FROM Owners O WHERE O.state LIKE '%North%'",
    "exec_result": 1
  },
  {
    "idx": 973,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'",
    "exec_result": 1
  },
  {
    "idx": 974,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);",
    "exec_result": 1
  },
  {
    "idx": 975,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT COUNT(*)  FROM Dogs  WHERE age < (SELECT AVG(age) FROM Dogs)",
    "exec_result": 1
  },
  {
    "idx": 976,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT MAX(cost_of_treatment) AS max_treatment_cost FROM Treatments;",
    "exec_result": 0
  },
  {
    "idx": 977,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT MAX(cost_of_treatment) AS max_cost FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 978,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT COUNT(*)  FROM Dogs  WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)",
    "exec_result": 1
  },
  {
    "idx": 979,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "pred": "SELECT COUNT(*)  FROM Dogs  WHERE dog_id NOT IN (SELECT dog_id FROM Treatments);",
    "exec_result": 1
  },
  {
    "idx": 980,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(*)  FROM Owners  WHERE owner_id NOT IN (SELECT DISTINCT owner_id FROM Dogs WHERE abandoned_yn = 'N') AND owner_id NOT IN (SELECT DISTINCT owner_id FROM Dogs WHERE abandoned_yn = 'Y')",
    "exec_result": 0
  },
  {
    "idx": 981,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(*)  FROM Owners  WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)",
    "exec_result": 1
  },
  {
    "idx": 982,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(*)  FROM Professionals  WHERE professional_id NOT IN (     SELECT professional_id      FROM Treatments )",
    "exec_result": 1
  },
  {
    "idx": 983,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(*)  FROM Professionals  WHERE professional_id NOT IN (     SELECT professional_id      FROM Treatments )",
    "exec_result": 1
  },
  {
    "idx": 984,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';",
    "exec_result": 1
  },
  {
    "idx": 985,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT name, age, weight FROM Dogs WHERE abandoned_yn = '1';",
    "exec_result": 1
  },
  {
    "idx": 986,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(DATEDIFF(CURRENT_DATE, date_of_birth) / 365) AS average_age FROM Dogs;",
    "exec_result": 0
  },
  {
    "idx": 987,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(DATEDIFF(CURRENT_DATE, date_of_birth) / 365) AS average_age FROM Dogs;",
    "exec_result": 0
  },
  {
    "idx": 988,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(age) AS oldest_age FROM Dogs;",
    "exec_result": 1
  },
  {
    "idx": 989,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(age) AS oldest_age FROM Dogs;",
    "exec_result": 1
  },
  {
    "idx": 990,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT `charge_type`, `charge_amount` FROM `Charges`;",
    "exec_result": 1
  },
  {
    "idx": 991,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT charge_type, charge_amount FROM Charges;",
    "exec_result": 1
  },
  {
    "idx": 992,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT MAX(`charge_amount`) AS max_charge FROM `Charges` WHERE `charge_amount` IS NOT NULL;",
    "exec_result": 1
  },
  {
    "idx": 993,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT MAX(`charge_amount`) AS `most_expensive_charge` FROM `Charges` WHERE `charge_amount` = (SELECT MAX(`charge_amount`) FROM `Charges`);",
    "exec_result": 1
  },
  {
    "idx": 994,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT email_address, cell_number, home_phone FROM Professionals;",
    "exec_result": 1
  },
  {
    "idx": 995,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT email_address, home_phone, cell_number FROM Professionals;",
    "exec_result": 1
  },
  {
    "idx": 996,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT DISTINCT      B.breed_name,     S.size_description FROM      Breeds B JOIN      Sizes S ON B.breed_code = S.size_code;",
    "exec_result": 0
  },
  {
    "idx": 997,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT DISTINCT D.breed_code, S.size_code  FROM Dogs D  JOIN Breeds B ON D.breed_code = B.breed_code  JOIN Sizes S ON D.size_code = S.size_code;",
    "exec_result": 1
  },
  {
    "idx": 998,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT P.first_name, T.treatment_type_description FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id;",
    "exec_result": 0
  },
  {
    "idx": 999,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT P.first_name, TT.treatment_type_description FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id JOIN Treatment_Types TT ON T.treatment_type_code = TT.treatment_type_code;",
    "exec_result": 1
  },
  {
    "idx": 1000,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1001,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1002,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;",
    "exec_result": 1
  },
  {
    "idx": 1003,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;",
    "exec_result": 1
  },
  {
    "idx": 1004,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year, Citizenship FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1005,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT Birth_Year, Citizenship FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1006,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT Name FROM singer WHERE Citizenship <> 'France';",
    "exec_result": 1
  },
  {
    "idx": 1007,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT Name  FROM singer  WHERE Citizenship <> 'France'",
    "exec_result": 1
  },
  {
    "idx": 1008,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);",
    "exec_result": 1
  },
  {
    "idx": 1009,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);",
    "exec_result": 1
  },
  {
    "idx": 1010,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1011,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)",
    "exec_result": 1
  },
  {
    "idx": 1012,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1013,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1014,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Citizenship, COUNT(*) AS Count  FROM singer  GROUP BY Citizenship  ORDER BY Count DESC  LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1015,
    "db_id": "singer",
    "question": "",
    "gold": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "pred": "SELECT Citizenship  FROM singer  GROUP BY Citizenship  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1016,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1017,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT Citizenship, MAX(Net_Worth_Millions)  FROM singer  GROUP BY Citizenship;",
    "exec_result": 1
  },
  {
    "idx": 1018,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT song.Title, singer.Name  FROM song  JOIN singer ON song.Singer_ID = singer.Singer_ID;",
    "exec_result": 1
  },
  {
    "idx": 1019,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT s.Title, sn.Name  FROM song s JOIN singer sn ON s.Singer_ID = sn.Singer_ID;",
    "exec_result": 1
  },
  {
    "idx": 1020,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT T1.Name  FROM singer AS T1  JOIN song AS T2  ON T1.Singer_ID = T2.Singer_ID  WHERE T2.Sales > 300000;",
    "exec_result": 1
  },
  {
    "idx": 1021,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT Name  FROM singer  JOIN song ON singer.Singer_ID = song.Singer_ID  WHERE song.Sales > 300000;",
    "exec_result": 1
  },
  {
    "idx": 1022,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT s.Name  FROM singer s JOIN song sg ON s.Singer_ID = sg.Singer_ID GROUP BY s.Singer_ID HAVING COUNT(*) > 1;",
    "exec_result": 1
  },
  {
    "idx": 1023,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT s.Name  FROM singer s JOIN song sg ON s.Singer_ID = sg.Singer_ID GROUP BY s.Singer_ID HAVING COUNT(sg.Song_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 1024,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT s.Name, SUM(so.Sales) AS Total_Sales FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name;",
    "exec_result": 1
  },
  {
    "idx": 1025,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT s.Name, SUM(so.Sales) AS Total_Sales FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name;",
    "exec_result": 1
  },
  {
    "idx": 1026,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);",
    "exec_result": 1
  },
  {
    "idx": 1027,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);",
    "exec_result": 1
  },
  {
    "idx": 1028,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT Citizenship  FROM singer  WHERE Birth_Year < 1945 AND Birth_Year > 1955;",
    "exec_result": 0
  },
  {
    "idx": 1029,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT Citizenship  FROM singer  WHERE Birth_Year < 1945 AND Birth_Year > 1955;",
    "exec_result": 0
  },
  {
    "idx": 1030,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT count(*) FROM Other_Available_Features",
    "pred": "SELECT COUNT(*) FROM Other_Available_Features;",
    "exec_result": 1
  },
  {
    "idx": 1031,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "pred": "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = 'Amenity';",
    "exec_result": 1
  },
  {
    "idx": 1032,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "pred": "SELECT `property_type_description` FROM `Ref_Property_Types` WHERE `property_type_code` IN (SELECT `property_type_code`                                FROM `Properties`);",
    "exec_result": 1
  },
  {
    "idx": 1033,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "pred": "SELECT p.property_name  FROM Properties p JOIN Ref_Property_Types rtp ON p.property_type_code = rtp.property_type_code WHERE rtp.property_type_description IN ('House', 'Apartment') AND p.room_count > 1;",
    "exec_result": 0
  }
]