[
  {
    "idx": 0,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(DISTINCT s.Singer_ID) FROM singer s;",
    "exec_result": 1
  },
  {
    "idx": 1,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(DISTINCT s.Singer_ID) FROM singer s;",
    "exec_result": 1
  },
  {
    "idx": 2,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT s.name, s.country, s.age FROM singer s ORDER BY s.age DESC;",
    "exec_result": 1
  },
  {
    "idx": 3,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
    "pred": "SELECT s.Name, s.Country, s.Age FROM singer s ORDER BY s.Age DESC;",
    "exec_result": 1
  },
  {
    "idx": 4,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(s.Age), MIN(s.Age), MAX(s.Age) FROM singer s WHERE s.Country = 'France';",
    "exec_result": 1
  },
  {
    "idx": 5,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
    "pred": "SELECT AVG(s.Age), MIN(s.Age), MAX(s.Age) FROM singer s WHERE s.Country = 'France';",
    "exec_result": 1
  },
  {
    "idx": 6,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "SELECT s.Name, s.\"Song_Name\", s.\"Song_release_year\" FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID WHERE s.Age = (SELECT MIN(s2.Age) FROM singer s2);",
    "exec_result": 0
  },
  {
    "idx": 7,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
    "pred": "WITH SingerAge AS (SELECT s.Singer_ID, s.Name, s.Age FROM singer s WHERE s.Age = (SELECT MIN(s2.Age) FROM singer s2)) SELECT si.Singer_ID, si.Name, s.Song_Name, s.Song_release_year FROM SingerAge sa JOIN singer_in_concert sic ON sa.Singer_ID = sic.Singer_ID JOIN singer s ON sa.Singer_ID = s.Singer_ID;",
    "exec_result": 0
  },
  {
    "idx": 8,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT s.Country FROM singer s WHERE s.Age > 20 GROUP BY s.Country ORDER BY s.Country NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 9,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT DISTINCT country FROM singer WHERE age  >  20",
    "pred": "SELECT DISTINCT s.Country FROM singer s WHERE s.Age > 20 ORDER BY s.Country NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 10,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT s.Country, COUNT(s.Singer_ID) AS number_of_singers FROM singer s GROUP BY s.Country ORDER BY number_of_singers DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 11,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM singer GROUP BY country",
    "pred": "SELECT s.Country, COUNT(*) AS number_of_singers FROM singer s GROUP BY s.Country ORDER BY number_of_singers DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 12,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT s.\"Name\", s.\"Song_Name\" FROM \"singer\" s WHERE s.\"Age\" > (SELECT AVG(\"Age\") FROM \"singer\");",
    "exec_result": 0
  },
  {
    "idx": 13,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
    "pred": "SELECT s.Song_Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID JOIN stadium st ON c.Stadium_ID = st.Stadium_ID WHERE s.Age > (SELECT AVG(st.Average) FROM stadium st) ORDER BY s.Song_Name;",
    "exec_result": 0
  },
  {
    "idx": 14,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT s.\"Location\", s.\"Name\" FROM \"stadium\" s WHERE s.\"Capacity\" BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 15,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "pred": "SELECT s.Location, s.Name FROM stadium s WHERE s.Capacity BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 16,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select max(capacity), average from stadium",
    "pred": "SELECT s.\"Capacity\", AVG(s.\"Capacity\") AS average_capacity FROM \"stadium\" s;",
    "exec_result": 0
  },
  {
    "idx": 17,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select avg(capacity) ,  max(capacity) from stadium",
    "pred": "SELECT AVG(s.\"Capacity\"), MAX(s.\"Capacity\") FROM \"stadium\" s;",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT s.Name, s.Capacity FROM stadium s ORDER BY s.Average DESC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 19,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
    "pred": "SELECT s.Name, s.Capacity FROM Stadium s ORDER BY s.Average DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 20,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*) FROM concert WHERE YEAR = '2014' OR YEAR = '2015';",
    "exec_result": 1
  },
  {
    "idx": 21,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015",
    "pred": "SELECT COUNT(*) AS number_of_concerts FROM concert c WHERE c.\"Year\" IN ('2014', '2015');",
    "exec_result": 1
  },
  {
    "idx": 22,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT s.Name, COUNT(c.concert_ID) AS num_of_concerts FROM concert c JOIN stadium s ON c.Stadium_ID = s.Stadium_ID GROUP BY s.Name ORDER BY num_of_concerts DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 23,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id",
    "pred": "SELECT s.Name, COUNT(c.concert_ID) AS number_of_concerts FROM concert c JOIN stadium s ON c.Stadium_ID::int = s.Stadium_ID GROUP BY s.Name ORDER BY number_of_concerts DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.Name, s.Capacity FROM Stadium s JOIN Concert c ON s.Stadium_ID::text = c.Stadium_ID WHERE c.Year::int >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 25,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",
    "pred": "SELECT s.Name, s.Capacity FROM Stadium s JOIN Concert c ON s.Stadium_ID::text = c.Stadium_ID WHERE c.Year::int > 2013 GROUP BY s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 26,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.Year, COUNT(c.concert_ID) AS number_of_concerts FROM concert c GROUP BY c.Year ORDER BY number_of_concerts DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 27,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT EXTRACT(YEAR FROM TO_DATE(c.Year, 'YYYY')) AS Year, COUNT(DISTINCT ci.concert_ID) AS num_concerts FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY Year ORDER BY num_concerts DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 28,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT s.Name FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Stadium_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 29,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "pred": "SELECT s.Name FROM \"stadium\" s WHERE s.Stadium_ID NOT IN (SELECT c.Stadium_ID FROM \"concert\" c);",
    "exec_result": 1
  },
  {
    "idx": 30,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30",
    "pred": "SELECT s.Country FROM singer s WHERE s.Age > 40 AND s.Age < 30;",
    "exec_result": 0
  },
  {
    "idx": 31,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT s.name FROM stadium s WHERE s.stadium_id NOT IN (SELECT c.stadium_id FROM concert c WHERE c.year = '2014');",
    "exec_result": 1
  },
  {
    "idx": 32,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014",
    "pred": "SELECT s.\"Name\" FROM \"stadium\" s WHERE s.\"Stadium_ID\" NOT IN (SELECT c.\"Stadium_ID\" FROM \"concert\" c WHERE c.\"Year\" = '2014');",
    "exec_result": 1
  },
  {
    "idx": 33,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id",
    "pred": "SELECT c.concert_Name, c.Theme, COUNT(s.Singer_ID) AS singer_count FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID JOIN singer s ON sic.Singer_ID = s.Singer_ID GROUP BY c.concert_Name, c.Theme;",
    "exec_result": 1
  },
  {
    "idx": 34,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",
    "pred": "SELECT c.concert_Name, c.Theme, COUNT(DISTINCT si.Singer_ID) AS num_singers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID JOIN singer si ON sic.Singer_ID = si.Singer_ID GROUP BY c.concert_Name, c.Theme ORDER BY num_singers DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 35,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT s.Name, COUNT(sc.concert_ID) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID GROUP BY s.Name ORDER BY number_of_concerts DESC;",
    "exec_result": 1
  },
  {
    "idx": 36,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",
    "pred": "SELECT s.Name, COUNT(singer_in_concert.concert_ID) AS num_concerts FROM singer s JOIN singer_in_concert ON s.Singer_ID = singer_in_concert.Singer_ID GROUP BY s.Name ORDER BY num_concerts DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 37,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = '2014';",
    "exec_result": 1
  },
  {
    "idx": 38,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014",
    "pred": "SELECT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = '2014';",
    "exec_result": 1
  },
  {
    "idx": 39,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT s.Name, s.Country FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.concert_Name ilike '%Hey%' ORDER BY s.Name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 40,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",
    "pred": "SELECT s.Name, s.Country FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.concert_Name ilike '%Hey%' ORDER BY s.Name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 41,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT s.Name, s.Location FROM Stadium s JOIN Concert c ON s.Stadium_ID = CAST(c.Stadium_ID AS INT) WHERE c.Year IN ('2014', '2015') GROUP BY s.Name, s.Location HAVING COUNT(DISTINCT c.Year) = 2;",
    "exec_result": 1
  },
  {
    "idx": 42,
    "db_id": "concert_singer",
    "question": "",
    "gold": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",
    "pred": "SELECT s.Name, s.Location FROM Stadium s JOIN Concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN ('2014', '2015') GROUP BY s.Name, s.Location HAVING COUNT(DISTINCT c.Year) = 2;",
    "exec_result": 1
  },
  {
    "idx": 43,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(c.concert_ID) AS number_of_concerts FROM concert c JOIN stadium s ON c.Stadium_ID = s.Stadium_ID WHERE s.Capacity = (SELECT MAX(s2.Capacity) FROM stadium s2);",
    "exec_result": 1
  },
  {
    "idx": 44,
    "db_id": "concert_singer",
    "question": "",
    "gold": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)",
    "pred": "SELECT COUNT(c.concert_ID) AS number_of_concerts FROM concert c JOIN stadium s ON c.Stadium_ID = s.Stadium_ID WHERE s.capacity = (SELECT MAX(s2.capacity) FROM stadium s2);",
    "exec_result": 1
  },
  {
    "idx": 45,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*) AS number_of_heavy_pets FROM Pets p WHERE p.weight > 10;",
    "exec_result": 1
  },
  {
    "idx": 46,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM pets WHERE weight  >  10",
    "pred": "SELECT COUNT(*) FROM Pets p WHERE p.weight > 10;",
    "exec_result": 1
  },
  {
    "idx": 47,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT p.weight FROM Pets p WHERE p.pet_age = (SELECT MIN(pet_age) FROM Pets p WHERE p.pet_type = 'dog');",
    "exec_result": 0
  },
  {
    "idx": 48,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT p.weight FROM Pets p WHERE p.pet_age = (SELECT MIN(p2.pet_age) FROM Pets p2 WHERE p2.petType = 'dog');",
    "exec_result": 1
  },
  {
    "idx": 49,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT MAX(p.weight), p.pet_type FROM Pets p GROUP BY p.pet_type ORDER BY p.pet_type NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 50,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
    "pred": "SELECT p.pet_type, MAX(p.weight) AS max_weight FROM Pets p GROUP BY p.pet_type;",
    "exec_result": 0
  },
  {
    "idx": 51,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*) FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID WHERE s.Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 52,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
    "pred": "SELECT COUNT(*) AS pet_count FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID WHERE s.Age > 20;",
    "exec_result": 1
  },
  {
    "idx": 53,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(*) FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.Sex = 'F' AND p.pet_age < 3 AND p.pet_age > 0 AND p.pet_age <= 3;",
    "exec_result": 1
  },
  {
    "idx": 54,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
    "pred": "SELECT COUNT(*) FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.Sex = 'F' AND p.PetType = 'dog';",
    "exec_result": 1
  },
  {
    "idx": 55,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT p.pettype) FROM Pets p;",
    "exec_result": 1
  },
  {
    "idx": 56,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(DISTINCT pettype) FROM pets",
    "pred": "SELECT COUNT(DISTINCT PetType) FROM Pets;",
    "exec_result": 1
  },
  {
    "idx": 57,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT s.Fname FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.pet_age > 5 AND (p.petType ilike '%cat%' OR p.petType ilike '%dog%') ORDER BY s.Fname NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 58,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
    "pred": "SELECT s.Fname FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType IN ('cat', 'dog');",
    "exec_result": 1
  },
  {
    "idx": 59,
    "db_id": "pets_1",
    "question": "",
    "gold": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
    "pred": "SELECT s.Fname FROM Student s JOIN Has_Pet h ON s.StuID = h.StuID JOIN Pets p1 ON h.PetID = p1.PetID JOIN Pets p2 ON h.PetID = p2.PetID WHERE p1.PetType = 'cat' AND p2.PetType = 'dog' ORDER BY s.Fname NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 60,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
    "pred": "SELECT s.Fname FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.pet_age > 1 AND (p.pet_age < 5 OR (p.pet_age >= 5 AND p.pet_age <= 10)) AND (p.weight > 5 OR (p.weight >= 5 AND p.weight <= 10)) AND (p.pet_age > 1 AND p.pet_age <= 10) AND (p.weight > 5 AND p.weight <= 10);",
    "exec_result": 1
  },
  {
    "idx": 61,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT s.major, s.age FROM Student s LEFT JOIN Has_Pet hp ON s.stuid = hp.stuid LEFT JOIN Pets p ON hp.petid = p.petid WHERE p.pettype not ilike '%cat%' ORDER BY s.age NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 62,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT s.major, s.age FROM Student s LEFT JOIN Has_Pet hp ON s.stuid = hp.stuid LEFT JOIN Pets p ON hp.petid = p.petid WHERE p.pettype not ilike '%cat%' ORDER BY s.age ASC;",
    "exec_result": 0
  },
  {
    "idx": 63,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT s.StuID FROM Student s LEFT JOIN Has_Pet hp ON s.StuID = hp.StuID LEFT JOIN Pets p ON hp.PetID = p.PetID WHERE p.pet_age IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 64,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
    "pred": "SELECT s.StuID FROM Student s LEFT JOIN Has_Pet h ON s.StuID = h.StuID LEFT JOIN Pets p ON h.PetID = p.PetID WHERE p.PetType NOT ILIKE '%cat%' AND h.PetID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 65,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT s.Fname, s.Age FROM Student s JOIN Has_Pet h ON s.StuID = h.StuID JOIN Pets p ON h.PetID = p.PetID WHERE p.PetType = 'dog' AND p.pet_age < 5 ORDER BY s.Age ASC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 66,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
    "pred": "SELECT s.Fname FROM Student s JOIN Has_Pet h ON s.StuID = h.StuID JOIN Pets p ON h.PetID = p.PetID WHERE p.PetType = 'dog' AND p.PetType not ilike '%cat%' ORDER BY s.Fname NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT p.pettype, MIN(p.pet_age) AS min_age FROM Pets p GROUP BY p.pettype ORDER BY min_age ASC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 68,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",
    "pred": "SELECT p.pet_type, p.weight FROM Pets p WHERE p.pet_age = (SELECT MIN(p2.pet_age) FROM Pets p2);",
    "exec_result": 0
  },
  {
    "idx": 69,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT p.pet_id, p.weight FROM Pets p WHERE p.pet_age > 1;",
    "exec_result": 0
  },
  {
    "idx": 70,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1",
    "pred": "SELECT p.pet_id, p.weight FROM Pets p WHERE p.pet_age > 1;",
    "exec_result": 0
  },
  {
    "idx": 71,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT p.pet_type, AVG(p.pet_age) AS avg_age, MAX(p.pet_age) AS max_age FROM Pets p GROUP BY p.pet_type ORDER BY p.pet_type NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 72,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT pt.PetType, AVG(p.pet_age) AS average_age, MAX(p.pet_age) AS max_age FROM Pets p JOIN Has_Pet hp ON p.PetID = hp.PetID GROUP BY pt.PetType;",
    "exec_result": 0
  },
  {
    "idx": 73,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT p.pet_type, AVG(p.weight) AS average_weight FROM Pets p GROUP BY p.pet_type ORDER BY p.pet_type NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 74,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",
    "pred": "SELECT p.pet_type, AVG(p.weight) AS average_weight FROM Pets p GROUP BY p.pet_type ORDER BY p.pet_type NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 75,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT s.Fname, s.Age FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID;",
    "exec_result": 1
  },
  {
    "idx": 76,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",
    "pred": "SELECT DISTINCT s.Fname, s.Age FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID ORDER BY s.Fname ASC;",
    "exec_result": 1
  },
  {
    "idx": 77,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT h.StuID, p.PetID FROM Student s JOIN Has_Pet h ON s.StuID = h.StuID JOIN Pets p ON h.PetID = p.PetID WHERE s.LName = 'Smith';",
    "exec_result": 0
  },
  {
    "idx": 78,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'",
    "pred": "SELECT h.petid FROM student s JOIN has_pet h ON s.stuid = h.stuid WHERE LOWER(s.lname) ='smith';",
    "exec_result": 1
  },
  {
    "idx": 79,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",
    "pred": "SELECT s.stuid, COUNT(h.petid) AS num_of_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid HAVING COUNT(h.petid) > 0;",
    "exec_result": 1
  },
  {
    "idx": 80,
    "db_id": "pets_1",
    "question": "",
    "gold": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid",
    "pred": "SELECT s.StuID, COUNT(hp.PetID) AS num_pets FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID GROUP BY s.StuID ORDER BY num_pets DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 81,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT s.Fname, s.Sex FROM Student s JOIN Has_Pet h ON s.StuID = h.StuID GROUP BY s.Fname, s.Sex HAVING COUNT(h.PetID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 82,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",
    "pred": "SELECT s.Fname, s.Sex FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID GROUP BY s.Fname, s.Sex HAVING COUNT(hp.PetID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT s.LName FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.pet_age = 3 AND p.petType = 'cat' ORDER BY s.LName NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 84,
    "db_id": "pets_1",
    "question": "",
    "gold": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'",
    "pred": "SELECT s.LName FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.pet_age = 3 AND p.petType = 'cat';",
    "exec_result": 1
  },
  {
    "idx": 85,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(s.Age) FROM Student s LEFT JOIN Has_Pet hp ON s.StuID = hp.StuID WHERE hp.StuID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 86,
    "db_id": "pets_1",
    "question": "",
    "gold": "select avg(age) from student where stuid not in (select stuid from has_pet)",
    "pred": "SELECT AVG(s.Age) AS average_age FROM Student s LEFT JOIN Has_Pet hp ON s.StuID = hp.StuID WHERE hp.StuID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 87,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(DISTINCT c.Continent) FROM continents c;",
    "exec_result": 1
  },
  {
    "idx": 88,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CONTINENTS;",
    "pred": "SELECT COUNT(*) FROM continents;",
    "exec_result": 1
  },
  {
    "idx": 89,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT c.Continent, COUNT(*) AS country_count FROM countries c GROUP BY c.Continent ORDER BY country_count DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 90,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
    "pred": "SELECT c.ContId, c.Continent, COUNT(c.CountryId) AS country_count FROM countries c GROUP BY c.ContId, c.Continent ORDER BY country_count DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 91,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT COUNT(DISTINCT c.CountryId) FROM countries c;",
    "exec_result": 1
  },
  {
    "idx": 92,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM COUNTRIES;",
    "pred": "SELECT COUNT(DISTINCT c.CountryId) FROM countries c;",
    "exec_result": 1
  },
  {
    "idx": 93,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT m.Maker, m.Id, COUNT(c.Model) AS number_of_models FROM car_names c JOIN model_list ml ON c.Model = ml.Model JOIN car_makers m ON ml.Maker = m.Id GROUP BY m.Maker, m.Id ORDER BY m.Maker NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 94,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
    "pred": "SELECT c.Maker, c.FullName, COUNT(m.Model) AS NumberOfModels FROM car_makers c JOIN model_list m ON c.Id = m.Maker GROUP BY c.Maker, c.FullName ORDER BY NumberOfModels DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 95,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT c.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Horsepower = (SELECT MIN(cd2.Horsepower) FROM cars_data cd2);",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
    "pred": "SELECT c.Model FROM car_names c JOIN cars_data d ON c.MakeId = d.Id ORDER BY d.Horsepower ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 97,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT c.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight < (SELECT AVG(cd1.Weight) FROM cars_data cd1);",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
    "pred": "SELECT c.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Weight < (SELECT AVG(c2.Weight) FROM cars_data c2);",
    "exec_result": 0
  },
  {
    "idx": 99,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT DISTINCT m.Maker FROM car_names cn JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970 JOIN car_makers m ON cn.Make = m.Maker;",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
    "pred": "SELECT DISTINCT cm.Maker FROM car_makers cm JOIN car_names cn ON cm.Id = cn.MakeId JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970;",
    "exec_result": 0
  },
  {
    "idx": 101,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT c.Make, MIN(c.Year) AS production_year FROM cars_data c GROUP BY c.Make ORDER BY production_year ASC;",
    "exec_result": 0
  },
  {
    "idx": 102,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
    "pred": "SELECT c.Maker, MIN(c.Year) FROM cars_data c GROUP BY c.Maker ORDER BY MIN(c.Year) ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 103,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT DISTINCT m.Model FROM model_list m JOIN cars_data c ON m.Model = c.Id WHERE c.Year > 1980;",
    "exec_result": 0
  },
  {
    "idx": 104,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
    "pred": "SELECT c.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Year > 1980;",
    "exec_result": 0
  },
  {
    "idx": 105,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT c.Continent, COUNT(*) AS maker_count FROM car_makers cm JOIN countries c ON cm.Country = c.CountryId GROUP BY c.Continent ORDER BY c.Continent NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 106,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
    "pred": "SELECT c.Continent, COUNT(*) AS car_makers_count FROM car_makers cm JOIN countries c ON cm.Country = CAST(c.Continent AS TEXT) GROUP BY c.Continent ORDER BY car_makers_count DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 107,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT c.CountryName FROM car_makers cm JOIN countries c ON cm.Country = c.CountryId GROUP BY c.CountryName ORDER BY COUNT(cm.Id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 108,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;",
    "pred": "SELECT c.CountryName, COUNT(cm.Id) AS car_makers_count FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryName ORDER BY car_makers_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 109,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;",
    "pred": "SELECT COUNT(ml.ModelId) AS model_count, cm.FullName FROM model_list ml JOIN car_makers cm ON ml.Maker = cm.Id GROUP BY cm.FullName ORDER BY model_count DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 110,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;",
    "pred": "SELECT m.Maker, COUNT(c.Model) AS number_of_models FROM car_names c JOIN model_list ml ON c.Model = ml.Model JOIN car_makers m ON ml.Maker = m.Id GROUP BY m.Maker ORDER BY number_of_models DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 111,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT cd.Accelerate FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cn.Make = 'AMC Hornet Sportabout';",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';",
    "pred": "SELECT c.accelerate FROM cars_data c JOIN car_names cn ON c.id = cn.makeid WHERE cn.model = 'amc hornet sportabout' AND cn.make ='sw';",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(*) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France');",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';",
    "pred": "SELECT COUNT(DISTINCT c.Maker) FROM car_makers c WHERE c.Country = 'France';",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(DISTINCT m.Model) FROM car_names cn JOIN model_list ml ON cn.Make = ml.Model JOIN car_makers cm ON ml.Maker = cm.Id WHERE LOWER(cm.Country) = 'usa';",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';",
    "pred": "SELECT COUNT(*) AS total_cars FROM car_names cn JOIN car_makers cm ON cn.Make = cm.Maker WHERE LOWER(cm.Country) = 'united states';",
    "exec_result": 0
  },
  {
    "idx": 117,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(cast(c.MPG AS FLOAT)) AS average_mpg FROM cars_data c WHERE c.Cylinders = 4;",
    "exec_result": 1
  },
  {
    "idx": 118,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;",
    "pred": "SELECT AVG(c.MPG) FROM cars_data c WHERE c.Cylinders = 4;",
    "exec_result": 1
  },
  {
    "idx": 119,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT MIN(c.Weight) AS lightest_car FROM cars_data c WHERE c.Cylinders = 8 AND c.Year = 1974;",
    "exec_result": 1
  },
  {
    "idx": 120,
    "db_id": "car_1",
    "question": "",
    "gold": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974",
    "pred": "SELECT MIN(c.weight) FROM cars_data c WHERE c.cylinders = 8 AND c.year = 1974;",
    "exec_result": 1
  },
  {
    "idx": 121,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT m.Maker, c.Model FROM car_names c JOIN model_list m ON c.Model = m.Model;",
    "exec_result": 0
  },
  {
    "idx": 122,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Maker ,  Model FROM MODEL_LIST;",
    "pred": "SELECT c.Maker, c.Model FROM car_names AS c;",
    "exec_result": 0
  },
  {
    "idx": 123,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT c.CountryName, cm.Id FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country;",
    "exec_result": 0
  },
  {
    "idx": 124,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",
    "pred": "SELECT c.CountryName, c.CountryId FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE cm.Country IS NOT NULL ORDER BY c.CountryName;",
    "exec_result": 0
  },
  {
    "idx": 125,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) FROM cars_data cd WHERE cd.horsepower > '150';",
    "exec_result": 1
  },
  {
    "idx": 126,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE horsepower > '150';",
    "exec_result": 1
  },
  {
    "idx": 127,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT c.Year, AVG(c.Weight) AS average_weight FROM cars_data c GROUP BY c.Year ORDER BY c.Year;",
    "exec_result": 1
  },
  {
    "idx": 128,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",
    "pred": "SELECT c.Year, AVG(c.Weight) AS average_weight FROM Cars_Data c GROUP BY c.Year ORDER BY c.Year NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 129,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT DISTINCT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe') GROUP BY c.CountryName HAVING COUNT(DISTINCT cm.Id) >= 3;",
    "exec_result": 0
  },
  {
    "idx": 130,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;",
    "pred": "SELECT DISTINCT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE c.Continent = 1 GROUP BY c.CountryName HAVING COUNT(DISTINCT cm.Id) >= 3;",
    "exec_result": 0
  },
  {
    "idx": 131,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3 GROUP BY car_names.make ORDER BY max_horsepower DESC;",
    "exec_result": 0
  },
  {
    "idx": 132,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT c.Maker, MAX(c.Horsepower) AS max_horsepower FROM cars_data c WHERE c.Cylinders = 3 GROUP BY c.Maker ORDER BY max_horsepower DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 133,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;",
    "pred": "SELECT c.Model, MAX(c.MPG) AS MaxMPG FROM cars_data c GROUP BY c.Model ORDER BY c.Model;",
    "exec_result": 0
  },
  {
    "idx": 134,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;",
    "pred": "SELECT m.Model, c.MPG FROM car_names c JOIN model_list m ON c.MakeId = m.ModelId WHERE c.MPG IS NOT NULL ORDER BY c.MPG DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 135,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;",
    "pred": "SELECT AVG(c.Horsepower::FLOAT) FROM cars_data c WHERE c.Year < 1980;",
    "exec_result": 0
  },
  {
    "idx": 136,
    "db_id": "car_1",
    "question": "",
    "gold": "select avg(horsepower) from cars_data where year  <  1980;",
    "pred": "SELECT AVG(cast(cars_data.horsepower AS INTEGER)) AS average_horsepower FROM cars_data WHERE cars_data.year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 137,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(c.Edispl) AS average_Edispl FROM cars_data c JOIN car_names cn ON c.Id = cn.MakeId WHERE LOWER(cn.Make) = 'volvo';",
    "exec_result": 0
  },
  {
    "idx": 138,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';",
    "pred": "SELECT AVG(c.Edispl) FROM cars_data c JOIN car_names cn ON c.Id = cn.MakeId JOIN model_list ml ON cn.Make = CAST(ml.Maker AS TEXT) WHERE LOWER(ml.Model) = 'volvo';",
    "exec_result": 0
  },
  {
    "idx": 139,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT c.Cylinders, MAX(c.Accelerate) AS max_accelerate FROM cars_data c GROUP BY c.Cylinders ORDER BY max_accelerate DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 140,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",
    "pred": "SELECT MAX(c.Accelerate) AS Max_Accelerate FROM cars_data c GROUP BY c.Cylinders ORDER BY Max_Accelerate DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 141,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "WITH Model_Versions AS (SELECT n.Model, COUNT(*) AS VersionCount FROM car_names n GROUP BY n.Model) SELECT mv.Model FROM Model_Versions mv ORDER BY mv.VersionCount DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 142,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT c.Model, COUNT(c.MakeId) AS model_count FROM cars_data cd JOIN car_names c ON cd.Id = c.MakeId GROUP BY c.Model ORDER BY model_count DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 143,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) FROM cars_data cd WHERE cd.Cylinders > 4;",
    "exec_result": 1
  },
  {
    "idx": 144,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "exec_result": 1
  },
  {
    "idx": 145,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*) AS number_of_cars FROM cars_data WHERE YEAR = 1980;",
    "exec_result": 1
  },
  {
    "idx": 146,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;",
    "pred": "SELECT COUNT(*) FROM cars_data cd WHERE cd.year = 1980;",
    "exec_result": 1
  },
  {
    "idx": 147,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(DISTINCT cm.Model) AS number_of_models FROM car_names cn JOIN model_list ml ON cn.Model = ml.Model JOIN car_makers cm ON ml.Maker = cm.Id WHERE LOWER(cm.FullName) = 'american motor company';",
    "exec_result": 0
  },
  {
    "idx": 148,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';",
    "pred": "SELECT COUNT(*) AS number_of_models FROM car_names cn JOIN model_list ml ON cn.Make = ml.Model WHERE LOWER(ml.Make) = 'american motor company';",
    "exec_result": 0
  },
  {
    "idx": 149,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT cm.FullName, COUNT(*) AS model_count FROM car_names cn JOIN car_makers cm ON cn.Make = cm.Maker GROUP BY cm.FullName HAVING COUNT(*) > 3 ORDER BY model_count DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 150,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT cm.Id, cm.Maker, COUNT(ml.Model) AS model_count FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.Id, cm.Maker HAVING COUNT(ml.Model) > 3 ORDER BY cm.Maker NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 151,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT c.Model FROM car_names c JOIN cars_data cd ON c.MakeId = cd.Id WHERE c.Make = 'General Motors' AND cd.Weight > 3500 ORDER BY c.Model ASC;",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;",
    "pred": "SELECT DISTINCT c.Model FROM car_names c JOIN cars_data cd ON c.MakeId = cd.Id WHERE c.Make = 'General Motors' OR cd.Weight > 3500;",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT c.Year FROM cars_data c WHERE c.Weight BETWEEN 3000 AND 4000 ORDER BY c.Year NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 154,
    "db_id": "car_1",
    "question": "",
    "gold": "select distinct year from cars_data where weight between 3000 and 4000;",
    "pred": "SELECT DISTINCT c.Year FROM cars_data c WHERE c.Weight < 4000 AND c.Weight > 3000 ORDER BY c.Year NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 155,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT c.Horsepower FROM cars_data c WHERE c.Accelerate = (SELECT MAX(c2.Accelerate) FROM cars_data c2);",
    "exec_result": 1
  },
  {
    "idx": 156,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;",
    "pred": "SELECT c.Horsepower FROM cars_data c WHERE c.Accelerate = (SELECT MAX(c2.Accelerate) FROM cars_data c2);",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT c.Cylinders FROM cars_data c JOIN car_names cn ON c.Id = cn.MakeId WHERE cn.Make = 'volvo' ORDER BY c.Accelerate ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 158,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;",
    "pred": "SELECT c.Cylinders FROM cars_data c JOIN car_names cn ON c.Id = cn.MakeId WHERE cn.Make = 'Volvo' ORDER BY c.Accelerate ASC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 159,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) FROM cars_data cd WHERE cd.accelerate > (SELECT MAX(cars_data.horsepower) FROM cars_data);",
    "exec_result": 0
  },
  {
    "idx": 160,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );",
    "pred": "SELECT COUNT(*) AS num_cars FROM cars_data cd WHERE cd.accelerate > (SELECT MAX(cars_data.horsepower) FROM cars_data);",
    "exec_result": 0
  },
  {
    "idx": 161,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(DISTINCT c.CountryName) FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE (SELECT COUNT(*) FROM car_makers cm2 WHERE cm2.Country = c.CountryId) > 2;",
    "exec_result": 0
  },
  {
    "idx": 162,
    "db_id": "car_1",
    "question": "",
    "gold": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2",
    "pred": "SELECT COUNT(DISTINCT c.CountryId) AS countries_with_multiple_makers FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE Country = c.CountryId) > 2;",
    "exec_result": 0
  },
  {
    "idx": 163,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data cd WHERE cd.Cylinders > 6;",
    "exec_result": 1
  },
  {
    "idx": 164,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;",
    "pred": "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "exec_result": 1
  },
  {
    "idx": 165,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT c.model, MAX(c.horsepower) AS max_horsepower FROM cars_data cd JOIN car_names cn ON cd.id = cn.makeid JOIN model_list ml ON cn.make = CAST(ml.maker AS TEXT) WHERE cd.cylinders = 4 GROUP BY c.model ORDER BY max_horsepower DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 166,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;",
    "pred": "SELECT c.Model, MAX(c.Horsepower) AS MaxHorsepower FROM cars_data c WHERE c.Cylinders = 4 GROUP BY c.Model ORDER BY MaxHorsepower DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 167,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",
    "pred": "SELECT cn.MakeId, cn.Make FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Horsepower > (SELECT MIN(c.Horsepower) FROM cars_data c) AND cd.Cylinders <= 3;",
    "exec_result": 1
  },
  {
    "idx": 168,
    "db_id": "car_1",
    "question": "",
    "gold": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",
    "pred": "SELECT cn.MakeId, cn.Make FROM car_names cn JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Horsepower < (SELECT MIN(Horsepower) FROM cars_data) AND cd.Cylinders < 4 ORDER BY cn.Make;",
    "exec_result": 0
  },
  {
    "idx": 169,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT MAX(c.MPG) FROM cars_data c WHERE c.Cylinders = 8 AND c.Year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 170,
    "db_id": "car_1",
    "question": "",
    "gold": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980",
    "pred": "SELECT MAX(c.MPG) FROM cars_data c WHERE c.Cylinders >= 8 AND c.Year < 1980;",
    "exec_result": 1
  },
  {
    "idx": 171,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT c.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId JOIN model_list ml ON cn.Make = ml.Model JOIN car_makers cm ON ml.Maker = cm.Id WHERE cd.Weight < 3500 AND cm.Maker!= 'Ford Motor Company' ORDER BY c.Model NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 172,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';",
    "pred": "SELECT DISTINCT m.Model FROM car_names cn JOIN model_list ml ON cn.Make = ml.Model WHERE ml.Maker!= (SELECT id FROM car_makers WHERE country = 'United States' AND maker = 'Ford') AND cn.Weight < 3500 ORDER BY m.Model;",
    "exec_result": 0
  },
  {
    "idx": 173,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT c.CountryName FROM countries c WHERE c.CountryId NOT IN (SELECT m.Country FROM car_makers m);",
    "exec_result": 1
  },
  {
    "idx": 174,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;",
    "pred": "SELECT DISTINCT c.CountryName FROM countries c LEFT JOIN car_makers m ON c.CountryId = m.Country WHERE m.Country IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 175,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",
    "pred": "SELECT m.Maker, COUNT(*) AS model_count FROM model_list ml JOIN car_makers m ON ml.Maker = m.Id GROUP BY m.Maker HAVING COUNT(*) >= 2 AND COUNT(*) > 3 ORDER BY model_count DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 176,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",
    "pred": "SELECT m.Maker, COUNT(m.Model) AS model_count FROM model_list m GROUP BY m.Maker HAVING COUNT(m.Model) >= 2 ORDER BY m.Maker;",
    "exec_result": 0
  },
  {
    "idx": 177,
    "db_id": "car_1",
    "question": "",
    "gold": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",
    "pred": "SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE cm.Country IN (SELECT cm.Country FROM car_makers cm GROUP BY cm.Country HAVING COUNT(cm.Id) > 3) OR cm.Country IN (SELECT cm.Country FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model WHERE cn.Make = 'Fiat' GROUP BY cm.Country HAVING COUNT(DISTINCT cn.Model) > 0);",
    "exec_result": 0
  },
  {
    "idx": 178,
    "db_id": "car_1",
    "question": "",
    "gold": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",
    "pred": "SELECT c.CountryName, COUNT(cm.Id) AS car_maker_count FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryName HAVING COUNT(cm.Id) > 3 UNION SELECT c.CountryName, COUNT(DISTINCT m.Model) AS fiat_model_count FROM countries c JOIN car_names cn ON c.CountryId = cn.MakeId JOIN model_list m ON cn.Model = m.Model WHERE m.Make = 'Fiat' GROUP BY c.CountryName HAVING COUNT(DISTINCT m.Model) > 0 ORDER BY c.CountryName NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 179,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT a.Country FROM airlines a WHERE a.Airline = 'JetBlue Airways';",
    "exec_result": 1
  },
  {
    "idx": 180,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT a.Country FROM airlines a WHERE a.Airline = 'Jetblue Airways';",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT a.Abbreviation FROM airlines a WHERE a.Airline = 'JetBlue Airways';",
    "exec_result": 1
  },
  {
    "idx": 182,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
    "pred": "SELECT a.Abbreviation FROM airlines a WHERE a.Airline = 'Jetblue Airways';",
    "exec_result": 0
  },
  {
    "idx": 183,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT a.Airline, a.Abbreviation FROM airlines a WHERE a.Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 184,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT a.Airline, a.Abbreviation FROM airlines a WHERE a.Country = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 185,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT a.AirportCode, a.AirportName FROM airports a WHERE a.City = 'Anthony';",
    "exec_result": 1
  },
  {
    "idx": 186,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
    "pred": "SELECT a.AirportCode, a.AirportName FROM airports a WHERE a.City = 'Anthony';",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT COUNT(DISTINCT a.Uid) FROM airlines a;",
    "exec_result": 1
  },
  {
    "idx": 188,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES",
    "pred": "SELECT COUNT(DISTINCT a.Uid) FROM airlines a;",
    "exec_result": 1
  },
  {
    "idx": 189,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(*) FROM airports;",
    "exec_result": 1
  },
  {
    "idx": 190,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRPORTS",
    "pred": "SELECT COUNT(DISTINCT a.AirportCode) AS Number_of_Airports FROM airports a;",
    "exec_result": 1
  },
  {
    "idx": 191,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(*) FROM flights;",
    "exec_result": 1
  },
  {
    "idx": 192,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS",
    "pred": "SELECT COUNT(f.FlightNo) FROM flights f;",
    "exec_result": 1
  },
  {
    "idx": 193,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT a.Airline FROM airlines a WHERE a.Abbreviation = 'UAL';",
    "exec_result": 1
  },
  {
    "idx": 194,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
    "pred": "SELECT a.Airline FROM airlines a WHERE a.Abbreviation = 'UAL';",
    "exec_result": 1
  },
  {
    "idx": 195,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) FROM airlines WHERE LOWER(Country) = 'usa';",
    "exec_result": 1
  },
  {
    "idx": 196,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
    "pred": "SELECT COUNT(*) FROM airlines WHERE LOWER(Country) = 'usa';",
    "exec_result": 1
  },
  {
    "idx": 197,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT a.City, a.Country FROM airports a JOIN flights f ON a.AirportCode = f.SourceAirport WHERE f.Airline = (SELECT uid FROM airlines WHERE Airline = 'Alton');",
    "exec_result": 1
  },
  {
    "idx": 198,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
    "pred": "SELECT a.City, a.Country FROM airports a WHERE a.AirportCode = 'ALTON';",
    "exec_result": 1
  },
  {
    "idx": 199,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT a.AirportName FROM airports a WHERE a.AirportCode = 'AKO';",
    "exec_result": 1
  },
  {
    "idx": 200,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"",
    "pred": "SELECT a.AirportName FROM airports a WHERE a.AirportCode = 'AKO';",
    "exec_result": 1
  },
  {
    "idx": 201,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT a.AirportName FROM airports a WHERE a.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 202,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"",
    "pred": "SELECT a.AirportName FROM airports a WHERE LOWER(a.City) = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(f.Airline, f.FlightNo) FROM flights f WHERE f.SourceAirport = 'APG';",
    "exec_result": 0
  },
  {
    "idx": 204,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT COUNT(f.Airline, f.FlightNo) FROM flights f WHERE f.SourceAirport = 'APG';",
    "exec_result": 0
  },
  {
    "idx": 205,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(f.Airline, f.FlightNo) FROM flights f WHERE f.DestAirport = 'ATO';",
    "exec_result": 0
  },
  {
    "idx": 206,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"",
    "pred": "SELECT COUNT(f.FlightNo) AS TotalFlightsIntoATo FROM flights f WHERE f.DestAirport = 'ATO';",
    "exec_result": 1
  },
  {
    "idx": 207,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS NumberOfFlights FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE LOWER(a.City) = 'aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 208,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS total_flights FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 209,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(f.FlightNo) FROM flights f JOIN airports d ON f.DestAirport = d.AirportCode WHERE LOWER(d.City) = 'aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 210,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS num_flights FROM flights f JOIN airports d ON f.DestAirport = d.AirportCode WHERE d.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 211,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(f.FlightNo) FROM flights f JOIN airports a1 ON f.SourceAirport = a1.AirportCode JOIN airports a2 ON f.DestAirport = a2.AirportCode WHERE a1.City = 'Aberdeen' AND a2.City = 'Ashley';",
    "exec_result": 1
  },
  {
    "idx": 212,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"",
    "pred": "SELECT COUNT(*) AS number_of_flights FROM flights f WHERE f.SourceAirport = 'Aberdeen' AND f.DestAirport = 'Ashley';",
    "exec_result": 1
  },
  {
    "idx": 213,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) AS number_of_flights FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE a.Airline = 'JetBlue Airways';",
    "exec_result": 1
  },
  {
    "idx": 214,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"",
    "pred": "SELECT COUNT(*) AS num_flights FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE LOWER(a.Abbreviation) = 'b6';",
    "exec_result": 0
  },
  {
    "idx": 215,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*) FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE f.Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines') AND a.AirportCode = 'ASY';",
    "exec_result": 1
  },
  {
    "idx": 216,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"",
    "pred": "SELECT COUNT(*) AS total_flights FROM flights f JOIN airports d ON f.DestAirport = d.AirportCode WHERE LOWER(d.City) = 'asy' AND f.Airline = (SELECT uid FROM airlines WHERE LOWER(Abbreviation) = 'ua');",
    "exec_result": 1
  },
  {
    "idx": 217,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(f.Airline) AS num_flights FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE a.Airline = 'United Airlines' AND f.SourceAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 218,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE LOWER(a.Airline) = 'united' AND LOWER(f.SourceAirport) = 'ahd';",
    "exec_result": 1
  },
  {
    "idx": 219,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(*) FROM flights f JOIN airports d ON f.DestAirport = d.AirportCode WHERE f.Airline = (SELECT uid FROM airlines WHERE LOWER(Abbreviation) = 'ua');",
    "exec_result": 1
  },
  {
    "idx": 220,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"",
    "pred": "SELECT COUNT(f.Airline) AS total_flights FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE a.Abbreviation = 'UAL' AND f.DestAirport = 'ABZ';",
    "exec_result": 1
  },
  {
    "idx": 221,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.city, COUNT(f.airline) AS flight_count FROM airports a JOIN flights f ON a.airportcode = f.destairport GROUP BY a.city ORDER BY flight_count DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 222,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.City, COUNT(f.DestAirport) AS frequency FROM airports a JOIN flights f ON a.AirportCode = f.DestAirport GROUP BY a.City ORDER BY frequency DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 223,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.City, COUNT(f.FlightNo) AS num_flights FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode GROUP BY a.City ORDER BY num_flights DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 224,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.city, COUNT(f.airline) AS frequency FROM airports a JOIN flights f ON a.airportcode = f.sourceairport GROUP BY a.city ORDER BY frequency DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 225,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.AirportCode, COUNT(f.Airline) AS flight_count FROM airports a JOIN flights f ON a.AirportCode = f.SourceAirport GROUP BY a.AirportCode ORDER BY flight_count DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 226,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT f.SourceAirport FROM flights f GROUP BY f.SourceAirport ORDER BY COUNT(f.SourceAirport) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 227,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT a.AirportCode, COUNT(f.Airline) AS flight_count FROM airports a LEFT JOIN flights f ON a.AirportCode = f.SourceAirport GROUP BY a.AirportCode ORDER BY flight_count ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 228,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
    "pred": "SELECT f.DestAirport, COUNT(f.FlightNo) AS num_flights FROM flights f GROUP BY f.DestAirport ORDER BY num_flights ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 229,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.Airline, COUNT(f.FlightNo) AS NumberOfFlights FROM flights f JOIN airlines a ON f.Airline = a.uid GROUP BY a.Airline ORDER BY NumberOfFlights DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.Airline, COUNT(f.Airline) AS flights_count FROM flights f JOIN airlines a ON f.Airline = a.uid GROUP BY a.Airline ORDER BY flights_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 231,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "WITH flight_count AS (SELECT f.Airline, COUNT(*) AS num_flights FROM flights f GROUP BY f.Airline) SELECT a.Abbreviation, a.Country FROM flight_count fc JOIN airlines a ON fc.Airline = a.uid ORDER BY fc.num_flights ASC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
    "pred": "WITH f AS (SELECT a.Abbreviation, COUNT(f.FlightNo) AS flight_count, a.Country FROM flights f JOIN airlines a ON f.Airline = a.uid GROUP BY a.Abbreviation, a.Country) SELECT f.Abbreviation, f.Country FROM f ORDER BY f.flight_count ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 233,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 234,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"",
    "pred": "SELECT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 235,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT a.Airline FROM flights f JOIN airlines a ON f.Airline = a.Uid WHERE f.DestAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 236,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.DestAirport = 'AHD';",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'APG' AND f.DestAirport = 'CVO';",
    "exec_result": 1
  },
  {
    "idx": 238,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'APG' AND f.DestAirport = 'CVO';",
    "exec_result": 1
  },
  {
    "idx": 239,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'CVO' AND f.DestAirport!= 'APG';",
    "exec_result": 1
  },
  {
    "idx": 240,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"",
    "pred": "SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'CVO' AND f.DestAirport <> 'APG' ORDER BY a.Airline NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 241,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT a.Airline FROM airlines a JOIN (SELECT f.Airline, COUNT(*) AS flight_count FROM flights f GROUP BY f.Airline) AS f2 ON a.uid = f2.Airline WHERE f2.flight_count >= 10 ORDER BY a.Airline NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 242,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10",
    "pred": "SELECT a.Airline FROM airlines a JOIN (SELECT f.Airline, COUNT(f.Airline) AS num_flights FROM flights f GROUP BY f.Airline HAVING COUNT(f.Airline) >= 10) AS f2 ON a.uid = f2.Airline;",
    "exec_result": 1
  },
  {
    "idx": 243,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT a.Airline FROM airlines a JOIN (SELECT f.Airline, COUNT(f.FlightNo) AS flight_count FROM flights f GROUP BY f.Airline) f2 ON a.uid = f2.Airline WHERE f2.flight_count < 200;",
    "exec_result": 1
  },
  {
    "idx": 244,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200",
    "pred": "SELECT a.Airline, COUNT(f.Airline) AS FlightCount FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE COUNT(f.Airline) < 200 GROUP BY a.Airline ORDER BY FlightCount ASC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 245,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE a.Abbreviation = 'UA';",
    "exec_result": 0
  },
  {
    "idx": 246,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE a.Abbreviation = 'UA';",
    "exec_result": 0
  },
  {
    "idx": 247,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.City = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 248,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.City = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 249,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE LOWER(a.City) = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 250,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE a.AirportCode = 'APG';",
    "exec_result": 1
  },
  {
    "idx": 251,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports s ON f.SourceAirport = s.AirportCode WHERE s.City = 'Aberdeen' ORDER BY f.FlightNo NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 252,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT DISTINCT f.FlightNo FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 253,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE a.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 254,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"",
    "pred": "SELECT f.FlightNo FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE a.City = 'Aberdeen';",
    "exec_result": 1
  },
  {
    "idx": 255,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) FROM flights f JOIN airports d ON f.DestAirport = d.AirportCode WHERE d.City IN ('Aberdeen', 'Abilene');",
    "exec_result": 1
  },
  {
    "idx": 256,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"",
    "pred": "SELECT COUNT(*) FROM flights f JOIN airports d ON f.DestAirport = d.AirportCode WHERE d.City IN ('Aberdeen', 'Abilene');",
    "exec_result": 1
  },
  {
    "idx": 257,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT DISTINCT a.AirportName FROM airports a WHERE a.AirportCode NOT IN (SELECT f.SourceAirport FROM flights f UNION SELECT f.DestAirport FROM flights f);",
    "exec_result": 1
  },
  {
    "idx": 258,
    "db_id": "flight_2",
    "question": "",
    "gold": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
    "pred": "SELECT a.AirportCode FROM airports a WHERE a.AirportCode NOT IN (SELECT f.SourceAirport FROM flights f UNION SELECT f.DestAirport FROM flights f);",
    "exec_result": 0
  },
  {
    "idx": 259,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) FROM employee;",
    "exec_result": 1
  },
  {
    "idx": 260,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) FROM employee",
    "pred": "SELECT COUNT(*) FROM employee;",
    "exec_result": 1
  },
  {
    "idx": 261,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT e.name, e.age FROM employee e ORDER BY e.age ASC;",
    "exec_result": 0
  },
  {
    "idx": 262,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee ORDER BY age",
    "pred": "SELECT e.name, e.age FROM employee e ORDER BY e.age ASC;",
    "exec_result": 0
  },
  {
    "idx": 263,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT e.city, COUNT(e.employee_id) AS number_of_employees FROM employee e GROUP BY e.city ORDER BY number_of_employees DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 264,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  city FROM employee GROUP BY city",
    "pred": "SELECT e.\"City\", COUNT(e.\"Employee_ID\") AS number_of_employees FROM \"employee\" e GROUP BY e.\"City\" ORDER BY number_of_employees DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 265,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT e.City FROM employee e WHERE e.Age < 30 GROUP BY e.City HAVING COUNT(e.Employee_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT e.City FROM employee e JOIN hiring h ON e.Employee_ID = h.Employee_ID WHERE e.Age < 30 GROUP BY e.City HAVING COUNT(DISTINCT h.Employee_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 267,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT s.location, COUNT(s.location) AS number_of_shops FROM shop s GROUP BY s.location ORDER BY number_of_shops DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 268,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
    "pred": "SELECT s.Location, COUNT(*) AS shop_count FROM shop s GROUP BY s.Location ORDER BY shop_count DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 269,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT s.manager_name, s.district FROM shop s WHERE s.number_products = (SELECT MAX(number_products) FROM shop);",
    "exec_result": 1
  },
  {
    "idx": 270,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
    "pred": "SELECT s.manager_name, s.district, s.number_products FROM shop s ORDER BY s.number_products DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 271,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(s.number_products), MAX(s.number_products) FROM shop s;",
    "exec_result": 1
  },
  {
    "idx": 272,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
    "pred": "SELECT MIN(s.Number_products) AS min_products, MAX(s.Number_products) AS max_products FROM shop s;",
    "exec_result": 1
  },
  {
    "idx": 273,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT s.Name, s.Location, s.District FROM shop s ORDER BY s.Number_products DESC;",
    "exec_result": 1
  },
  {
    "idx": 274,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
    "pred": "SELECT s.name, s.location, s.district FROM shop s ORDER BY s.number_products DESC;",
    "exec_result": 1
  },
  {
    "idx": 275,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(s2.number_products) FROM shop s2);",
    "exec_result": 1
  },
  {
    "idx": 276,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
    "pred": "SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(s2.number_products) FROM shop s2);",
    "exec_result": 1
  },
  {
    "idx": 277,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT e.name, COUNT(*) AS evaluation_count FROM evaluation e GROUP BY e.name ORDER BY evaluation_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 278,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH EmployeeAwards AS (SELECT e.\"Name\", COUNT(ea.\"Employee_ID\") AS AwardCount FROM \"evaluation\" ea JOIN \"employee\" e ON ea.\"Employee_ID\" = e.\"Employee_ID\" GROUP BY e.\"Name\") SELECT ea.\"Name\" FROM EmployeeAwards ea ORDER BY ea.AwardCount DESC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 279,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "SELECT e.Name, MAX(e.Bonus) AS max_bonus FROM evaluation e GROUP BY e.Name ORDER BY max_bonus DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 280,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
    "pred": "WITH max_bonus AS (SELECT e.\"Name\", MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max_age, MAX(e.\"Age\") AS max",
    "exec_result": 0
  },
  {
    "idx": 281,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT e.name FROM employee e WHERE e.employee_id NOT IN (SELECT ev.employee_id FROM evaluation ev);",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
    "pred": "SELECT e.Name FROM employee e WHERE e.Employee_ID NOT IN (SELECT e2.Employee_ID FROM evaluation e2);",
    "exec_result": 1
  },
  {
    "idx": 283,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.name, COUNT(h.employee_id) AS employee_count FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name ORDER BY employee_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 284,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH shop_employees AS (SELECT s.Name AS shop_name, COUNT(h.Employee_ID) AS num_employees FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name) SELECT shop_name, num_employees FROM shop_employees ORDER BY num_employees DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 285,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT s.Name FROM shop s WHERE s.Shop_ID NOT IN (SELECT h.Shop_ID FROM hiring h);",
    "exec_result": 1
  },
  {
    "idx": 286,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)",
    "pred": "SELECT s.Name FROM shop s WHERE s.Shop_ID NOT IN (SELECT h.Shop_ID FROM hiring h);",
    "exec_result": 1
  },
  {
    "idx": 287,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT s.Name, COUNT(h.Employee_ID) AS number_of_employees FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name;",
    "exec_result": 1
  },
  {
    "idx": 288,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",
    "pred": "SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name ORDER BY number_of_employees DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 289,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(e.Bonus) AS Total_Bonus FROM evaluation e;",
    "exec_result": 1
  },
  {
    "idx": 290,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT sum(bonus) FROM evaluation",
    "pred": "SELECT SUM(e.Bonus) AS total_bonus FROM evaluation e;",
    "exec_result": 1
  },
  {
    "idx": 291,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT h.shop_id, e.name AS employee_name, h.start_from, h.is_full_time FROM hiring h JOIN employee e ON h.employee_id = e.employee_id;",
    "exec_result": 0
  },
  {
    "idx": 292,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT * FROM hiring",
    "pred": "SELECT h.Shop_ID, e.Name, h.Start_from, h.Is_full_time FROM hiring h JOIN employee e ON h.Employee_ID = e.Employee_ID;",
    "exec_result": 0
  },
  {
    "idx": 293,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT s.district FROM shop s WHERE s.number_products < 3000 AND s.number_products > 10000 GROUP BY s.district;",
    "exec_result": 1
  },
  {
    "idx": 294,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000",
    "pred": "SELECT d.District FROM shop s1 JOIN shop s2 ON s1.District = s2.District WHERE s1.Number_products < 3000 AND s2.Number_products > 10000;",
    "exec_result": 0
  },
  {
    "idx": 295,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT s.Location) FROM shop s;",
    "exec_result": 1
  },
  {
    "idx": 296,
    "db_id": "employee_hire_evaluation",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM shop",
    "pred": "SELECT COUNT(DISTINCT s.Location) FROM shop s;",
    "exec_result": 1
  },
  {
    "idx": 297,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT d.Document_ID) FROM Documents d;",
    "exec_result": 1
  },
  {
    "idx": 298,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT d.Document_ID) FROM Documents d;",
    "exec_result": 1
  },
  {
    "idx": 299,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT d.Document_ID, d.Document_Name, d.Document_Description FROM Documents d;",
    "exec_result": 1
  },
  {
    "idx": 300,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  document_name ,  document_description FROM Documents",
    "pred": "SELECT d.Document_ID, d.Document_Name, d.Document_Description FROM Documents d;",
    "exec_result": 1
  },
  {
    "idx": 301,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT d.Document_Name, t.Template_ID FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Description ilike '%w%';",
    "exec_result": 0
  },
  {
    "idx": 302,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
    "pred": "SELECT d.Document_Name, t.Template_ID FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Description ilike '%w%' ORDER BY d.Document_Name ASC;",
    "exec_result": 0
  },
  {
    "idx": 303,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT d.Document_ID, t.Template_ID, d.Document_Description FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Name = 'Robbin CV';",
    "exec_result": 1
  },
  {
    "idx": 304,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
    "pred": "SELECT d.Document_ID, t.Template_ID, d.Document_Description FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Name = 'Robbin CV';",
    "exec_result": 1
  },
  {
    "idx": 305,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT t.Template_ID) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID;",
    "exec_result": 1
  },
  {
    "idx": 306,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(DISTINCT template_id) FROM Documents",
    "pred": "SELECT COUNT(DISTINCT t.Template_ID) FROM Templates t;",
    "exec_result": 0
  },
  {
    "idx": 307,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(DISTINCT d.Document_ID) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE LOWER(t.Template_Type_Code) = 'ppt';",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'",
    "pred": "SELECT COUNT(DISTINCT d.Document_ID) AS number_of_documents FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE t.Template_Type_Code = 'PPT';",
    "exec_result": 1
  },
  {
    "idx": 309,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT t.Template_ID, COUNT(DISTINCT d.Document_ID) AS number_of_documents FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID ORDER BY number_of_documents DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 310,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",
    "pred": "SELECT t.Template_ID, COUNT(t.Template_ID) AS usage_count FROM Templates t GROUP BY t.Template_ID ORDER BY usage_count DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 311,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t.Template_ID, rt.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code GROUP BY t.Template_ID, rt.Template_Type_Code ORDER BY COUNT(d.Document_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 312,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t.Template_ID, t.Template_Type_Code, COUNT(d.Document_ID) AS document_count FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Template_Type_Code ORDER BY document_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 313,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT t.Template_ID FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID HAVING COUNT(d.Document_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 314,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT t.Template_ID FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID HAVING COUNT(d.Document_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 315,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT t.Template_ID FROM Templates t WHERE t.Template_ID NOT IN (SELECT d.Template_ID FROM Documents d);",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents",
    "pred": "SELECT t.Template_ID FROM Templates t LEFT JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Template_ID IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(DISTINCT t.Template_ID) FROM Templates t;",
    "exec_result": 1
  },
  {
    "idx": 318,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates",
    "pred": "SELECT COUNT(t.Template_ID) FROM Templates t;",
    "exec_result": 1
  },
  {
    "idx": 319,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT t.Template_ID, t.Version_Number, t.Template_Type_Code FROM Templates t;",
    "exec_result": 1
  },
  {
    "idx": 320,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
    "pred": "SELECT t.Template_ID, t.Version_Number, t.Template_Type_Code FROM Templates t ORDER BY t.Template_ID ASC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 321,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT DISTINCT tt.Template_Type_Code FROM Templates tt;",
    "exec_result": 1
  },
  {
    "idx": 322,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT template_type_code FROM Templates",
    "pred": "SELECT rt.Template_Type_Code FROM Ref_Template_Types rt ORDER BY rt.Template_Type_Code NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 323,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT t.Template_ID FROM Templates t WHERE t.Template_Type_Code IN ('PP', 'PPT');",
    "exec_result": 1
  },
  {
    "idx": 324,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"",
    "pred": "SELECT t.Template_ID FROM Templates t WHERE t.Template_Type_Code IN ('PP', 'PPT');",
    "exec_result": 1
  },
  {
    "idx": 325,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(*) AS number_of_templates FROM Templates t JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'CV';",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"",
    "pred": "SELECT COUNT(*) AS total_templates FROM Templates t JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code WHERE LOWER(r.Template_Type_Description) = 'cv';",
    "exec_result": 1
  },
  {
    "idx": 327,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT t.Version_Number, tt.Template_Type_Code FROM Templates t JOIN Ref_Template_Types tt ON t.Template_Type_Code = tt.Template_Type_Code WHERE t.Version_Number > 5 ORDER BY t.Version_Number DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 328,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",
    "pred": "SELECT t.Version_Number, t.Template_Type_Code FROM Templates t WHERE t.Version_Number > 5;",
    "exec_result": 1
  },
  {
    "idx": 329,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT rt.Template_Type_Code, COUNT(t.Template_ID) AS number_of_templates FROM Templates t JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code GROUP BY rt.Template_Type_Code ORDER BY number_of_templates DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 330,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code",
    "pred": "SELECT t.Template_Type_Code, COUNT(t.Template_ID) AS number_of_templates FROM Templates t GROUP BY t.Template_Type_Code ORDER BY number_of_templates DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 331,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT rtt.Template_Type_Code, COUNT(t.Template_ID) AS total_templates FROM Templates t JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code GROUP BY rtt.Template_Type_Code ORDER BY total_templates DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 332,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT rtt.Template_Type_Code, COUNT(t.Template_ID) AS count_templates FROM Templates t JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code GROUP BY rtt.Template_Type_Code ORDER BY count_templates DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 333,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT t.Template_Type_Code FROM Templates t GROUP BY t.Template_Type_Code HAVING COUNT(t.Template_ID) < 3 ORDER BY t.Template_Type_Code NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 334,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3",
    "pred": "SELECT t.Template_Type_Code FROM Templates t GROUP BY t.Template_Type_Code HAVING COUNT(t.Template_ID) < 3;",
    "exec_result": 1
  },
  {
    "idx": 335,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT MIN(t.Version_Number), t.Template_Type_Code FROM Templates t GROUP BY t.Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 336,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT min(Version_Number) ,  template_type_code FROM Templates",
    "pred": "SELECT MIN(t.Version_Number), t.Template_Type_Code FROM Templates t GROUP BY t.Template_Type_Code;",
    "exec_result": 0
  },
  {
    "idx": 337,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT t.Template_Type_Code FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Name = 'Data base';",
    "exec_result": 1
  },
  {
    "idx": 338,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"",
    "pred": "SELECT rt.Template_Type_Code FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Document_Name ilike '%Data base%';",
    "exec_result": 0
  },
  {
    "idx": 339,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT d.Document_Name FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code WHERE r.Template_Type_Code = 'BK';",
    "exec_result": 1
  },
  {
    "idx": 340,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
    "pred": "SELECT d.Document_Name FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE LOWER(t.Template_Type_Code) = 'bk';",
    "exec_result": 1
  },
  {
    "idx": 341,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT t.Template_Type_Code, COUNT(DISTINCT d.Document_ID) AS num_documents FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_Type_Code ORDER BY num_documents DESC;",
    "exec_result": 1
  },
  {
    "idx": 342,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",
    "pred": "SELECT t.Template_Type_Code, COUNT(DISTINCT d.Document_ID) AS number_of_documents FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_Type_Code ORDER BY number_of_documents DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 343,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT rtt.Template_Type_Code, COUNT(DISTINCT d.Document_ID) AS num_documents FROM Ref_Template_Types rtt JOIN Templates t ON rtt.Template_Type_Code = t.Template_Type_Code JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY rtt.Template_Type_Code ORDER BY num_documents DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 344,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT t.Template_Type_Code FROM Templates t GROUP BY t.Template_Type_Code ORDER BY COUNT(t.Template_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 345,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT rt.Template_Type_Code FROM Ref_Template_Types rt LEFT JOIN Templates t ON rt.Template_Type_Code = t.Template_Type_Code WHERE t.Template_Type_Code IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 346,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
    "pred": "SELECT rt.Template_Type_Code FROM Ref_Template_Types rt WHERE rt.Template_Type_Code NOT IN (SELECT t.Template_Type_Code FROM Templates t);",
    "exec_result": 0
  },
  {
    "idx": 347,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT rt.Template_Type_Code, rt.Template_Type_Description FROM Ref_Template_Types rt;",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code ,  template_type_description FROM Ref_template_types",
    "pred": "SELECT t.Template_Type_Code, t.Template_Type_Description FROM Ref_Template_Types t ORDER BY t.Template_Type_Code NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 349,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT rt.Template_Type_Description FROM Ref_Template_Types rt WHERE rt.Template_Type_Code = 'AD';",
    "exec_result": 1
  },
  {
    "idx": 350,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"",
    "pred": "SELECT rtt.Template_Type_Description FROM Ref_Template_Types rtt WHERE rtt.Template_Type_Code = 'AD';",
    "exec_result": 1
  },
  {
    "idx": 351,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT rt.Template_Type_Code FROM Ref_Template_Types rt WHERE rt.Template_Type_Description = 'Book';",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"",
    "pred": "SELECT t.Template_Type_Code FROM Ref_Template_Types t WHERE t.Template_Type_Description = 'Book';",
    "exec_result": 1
  },
  {
    "idx": 353,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT t.Template_Type_Description FROM Templates t ORDER BY t.Template_Type_Description NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 354,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID",
    "pred": "SELECT DISTINCT t.Template_Type_Description FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID ORDER BY t.Template_Type_Description ASC;",
    "exec_result": 0
  },
  {
    "idx": 355,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT t.Template_ID FROM Templates t JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code WHERE r.Template_Type_Description = 'Presentation';",
    "exec_result": 1
  },
  {
    "idx": 356,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"",
    "pred": "SELECT t.Template_ID FROM Templates t JOIN Ref_Template_Types r ON t.Template_Type_Code = r.Template_Type_Code WHERE r.Template_Type_Description = 'Presentation';",
    "exec_result": 1
  },
  {
    "idx": 357,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(p.Paragraph_ID) FROM Paragraphs p;",
    "exec_result": 1
  },
  {
    "idx": 358,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs",
    "pred": "SELECT COUNT(p.Paragraph_ID) FROM Paragraphs p;",
    "exec_result": 1
  },
  {
    "idx": 359,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(p.Paragraph_ID) FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE d.Document_Name ilike '%Summer Show%';",
    "exec_result": 0
  },
  {
    "idx": 360,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'",
    "pred": "SELECT COUNT(p.Paragraph_ID) AS total_paragraphs FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE d.Document_Name = 'Summer Show';",
    "exec_result": 1
  },
  {
    "idx": 361,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT p.Paragraph_ID, p.Paragraph_Text, p.Other_Details FROM Paragraphs p WHERE p.Paragraph_Text ilike '%Korea%';",
    "exec_result": 0
  },
  {
    "idx": 362,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "select other_details from paragraphs where paragraph_text like 'korea'",
    "pred": "SELECT p.Paragraph_ID, p.Paragraph_Text, d.Document_Name FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE p.Paragraph_Text ILIKE '%Korea%';",
    "exec_result": 0
  },
  {
    "idx": 363,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT p.Paragraph_ID, p.Paragraph_Text FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE d.Document_Name ilike '%Welcome to NY%';",
    "exec_result": 0
  },
  {
    "idx": 364,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
    "pred": "SELECT p.Paragraph_ID, p.Paragraph_Text FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE d.Document_Description ilike '%Welcome to NY%';",
    "exec_result": 0
  },
  {
    "idx": 365,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT p.Paragraph_ID, p.Paragraph_Text FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE d.Document_Name = 'Customer reviews' ORDER BY p.Paragraph_ID ASC;",
    "exec_result": 0
  },
  {
    "idx": 366,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"",
    "pred": "SELECT p.Paragraph_ID, p.Paragraph_Text FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE d.Document_Name = 'Customer reviews';",
    "exec_result": 0
  },
  {
    "idx": 367,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT d.Document_ID, COUNT(p.Paragraph_ID) AS num_paragraphs FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID GROUP BY d.Document_ID ORDER BY d.Document_ID NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 368,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
    "pred": "SELECT d.Document_ID, COUNT(p.Paragraph_ID) AS paragraph_count FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID GROUP BY d.Document_ID ORDER BY d.Document_ID NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 369,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT d.Document_ID, d.Document_Name, COUNT(p.Paragraph_ID) AS paragraph_count FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID, d.Document_Name;",
    "exec_result": 1
  },
  {
    "idx": 370,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id",
    "pred": "SELECT d.Document_ID, d.Document_Name, COUNT(p.Paragraph_ID) AS Number_of_Paragraphs FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID, d.Document_Name ORDER BY Number_of_Paragraphs DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 371,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT d.Document_ID FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID HAVING COUNT(p.Paragraph_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 372,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2",
    "pred": "SELECT d.Document_ID FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID HAVING COUNT(p.Paragraph_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 373,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT d.Document_ID, d.Document_Name FROM Documents d JOIN (SELECT p.Document_ID, COUNT(p.Paragraph_ID) AS paragraph_count FROM Paragraphs p GROUP BY p.Document_ID ORDER BY paragraph_count DESC LIMIT 1) AS pc ON d.Document_ID = pc.Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 374,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH ParagraphCounts AS (SELECT d.Document_ID, COUNT(p.Paragraph_ID) AS Paragraph_Count FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID) SELECT dc.Document_ID, dc.Document_Name FROM ParagraphCounts dc JOIN Documents d ON dc.Document_ID = d.Document_ID ORDER BY dc.Paragraph_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 375,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT d.Document_ID FROM Documents d JOIN (SELECT p.Document_ID, COUNT(p.Paragraph_ID) AS num_paragraphs FROM Paragraphs p GROUP BY p.Document_ID) AS pp ON d.Document_ID = pp.Document_ID ORDER BY pp.num_paragraphs ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 376,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT d.Document_ID FROM Documents d JOIN (SELECT p.Document_ID, COUNT(p.Paragraph_ID) AS num_paragraphs FROM Paragraphs p GROUP BY p.Document_ID ORDER BY num_paragraphs ASC LIMIT 1) AS dp ON d.Document_ID = dp.Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 377,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT d.Document_ID FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID HAVING COUNT(p.Paragraph_ID) BETWEEN 1 AND 2;",
    "exec_result": 1
  },
  {
    "idx": 378,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
    "pred": "SELECT d.Document_ID FROM Documents d JOIN (SELECT p.Document_ID FROM Paragraphs p GROUP BY p.Document_ID HAVING COUNT(p.Paragraph_ID) BETWEEN 1 AND 2) AS p ON d.Document_ID = p.Document_ID;",
    "exec_result": 1
  },
  {
    "idx": 379,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT p.Document_ID FROM Paragraphs p WHERE p.Paragraph_Text IN ('Brazil', 'Ireland');",
    "exec_result": 0
  },
  {
    "idx": 380,
    "db_id": "cre_Doc_Template_Mgt",
    "question": "",
    "gold": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
    "pred": "SELECT d.Document_ID FROM Paragraphs p JOIN Documents d ON p.Document_ID = d.Document_ID WHERE p.Paragraph_Text ILIKE '%Brazil%' AND p.Paragraph_Text ILIKE '%Ireland%';",
    "exec_result": 0
  },
  {
    "idx": 381,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(*) AS number_of_teachers FROM teacher;",
    "exec_result": 1
  },
  {
    "idx": 382,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT count(*) FROM teacher",
    "pred": "SELECT COUNT(*) AS total_teachers FROM teacher;",
    "exec_result": 1
  },
  {
    "idx": 383,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT t.Name, t.Age FROM teacher t ORDER BY CAST(t.Age AS int) ASC;",
    "exec_result": 0
  },
  {
    "idx": 384,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher ORDER BY Age ASC",
    "pred": "SELECT t.Name, t.Age FROM teacher t ORDER BY t.Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 385,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT t.Age, t.Hometown FROM teacher t;",
    "exec_result": 1
  },
  {
    "idx": 386,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Age ,  Hometown FROM teacher",
    "pred": "SELECT t.\"Age\", t.\"Hometown\" FROM \"teacher\" t;",
    "exec_result": 1
  },
  {
    "idx": 387,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT t.Name FROM teacher t WHERE t.Hometown!= 'Little Lever Urban District';",
    "exec_result": 0
  },
  {
    "idx": 388,
    "db_id": "course_teach",
    "question": "",
    "gold": "select name from teacher where hometown != \"little lever urban district\"",
    "pred": "SELECT t.Name FROM teacher t WHERE t.Hometown!= 'Little Lever Urban District';",
    "exec_result": 0
  },
  {
    "idx": 389,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT t.Name FROM teacher t WHERE t.Age IN ('32', '33');",
    "exec_result": 1
  },
  {
    "idx": 390,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33",
    "pred": "SELECT t.name FROM teacher t WHERE t.age = '32' OR t.age = '33';",
    "exec_result": 1
  },
  {
    "idx": 391,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT t.Hometown FROM teacher t WHERE t.Age = (SELECT MIN(t2.Age) FROM teacher t2);",
    "exec_result": 1
  },
  {
    "idx": 392,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1",
    "pred": "SELECT t.hometown FROM teacher t WHERE t.age = (SELECT MIN(t2.age) FROM teacher t2);",
    "exec_result": 1
  },
  {
    "idx": 393,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT t.Hometown, COUNT(t.Hometown) AS Number_of_Teachers FROM teacher t GROUP BY t.Hometown ORDER BY Number_of_Teachers DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 394,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",
    "pred": "SELECT t.hometown, COUNT(t.teacher_id) AS num_teachers FROM teacher t GROUP BY t.hometown ORDER BY num_teachers DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 395,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT t.hometown, COUNT(*) AS frequency FROM teacher t GROUP BY t.hometown ORDER BY frequency DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 396,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT t.hometown, COUNT(t.hometown) AS COUNT FROM teacher t GROUP BY t.hometown ORDER BY COUNT DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 397,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.hometown FROM teacher t GROUP BY t.hometown HAVING COUNT(t.hometown) > 1;",
    "exec_result": 1
  },
  {
    "idx": 398,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.Hometown FROM teacher t GROUP BY t.Hometown HAVING COUNT(t.Hometown) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 399,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT t.Name, c.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID;",
    "exec_result": 1
  },
  {
    "idx": 400,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",
    "pred": "SELECT t.Name, c.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID;",
    "exec_result": 1
  },
  {
    "idx": 401,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT t.Name, c.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID ORDER BY t.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 402,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
    "pred": "SELECT t.Name, c.Course FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID ORDER BY t.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 403,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.\"Course\" ='math';",
    "exec_result": 0
  },
  {
    "idx": 404,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"",
    "pred": "SELECT t.Name FROM course_arrange ca JOIN teacher t ON ca.Teacher_ID = t.Teacher_ID JOIN course c ON ca.Course_ID = c.Course_ID WHERE c.\"Course\" ='math';",
    "exec_result": 0
  },
  {
    "idx": 405,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT t.Name, COUNT(ca.Course_ID) AS num_courses FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name ORDER BY num_courses DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 406,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",
    "pred": "SELECT t.Name, COUNT(ca.Course_ID) AS num_courses FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name ORDER BY num_courses DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 407,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name HAVING COUNT(DISTINCT ca.Course_ID) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 408,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2",
    "pred": "SELECT t.Name FROM teacher t JOIN course_arrange ca ON t.Teacher_ID = ca.Teacher_ID GROUP BY t.Name HAVING COUNT(DISTINCT ca.Course_ID) >= 2 ORDER BY t.Name NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 409,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT t.Name FROM teacher t WHERE t.Teacher_ID NOT IN (SELECT ca.Teacher_ID FROM course_arrange ca);",
    "exec_result": 1
  },
  {
    "idx": 410,
    "db_id": "course_teach",
    "question": "",
    "gold": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
    "pred": "SELECT t.Name FROM teacher t WHERE NOT EXISTS (SELECT 1 FROM course_arrange ca WHERE ca.Teacher_ID = t.Teacher_ID);",
    "exec_result": 1
  },
  {
    "idx": 411,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE age  <  30",
    "pred": "SELECT COUNT(*) FROM visitor v WHERE v.Age < 30;",
    "exec_result": 1
  },
  {
    "idx": 412,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC",
    "pred": "SELECT v.Name, v.Level_of_membership FROM visitor v WHERE v.Level_of_membership > 4 ORDER BY v.Level_of_membership DESC;",
    "exec_result": 0
  },
  {
    "idx": 413,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4",
    "pred": "SELECT AVG(v.Age) FROM visitor v WHERE v.Level_of_membership <= 4;",
    "exec_result": 1
  },
  {
    "idx": 414,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC",
    "pred": "SELECT v.name, v.level_of_membership, v.age FROM visitor v WHERE v.level_of_membership > 4 ORDER BY v.age DESC;",
    "exec_result": 0
  },
  {
    "idx": 415,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1",
    "pred": "SELECT m.Museum_ID, m.Name FROM museum m ORDER BY m.Num_of_Staff DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 416,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009",
    "pred": "SELECT AVG(m.\"Num_of_Staff\") AS average_staff FROM \"museum\" m WHERE m.\"Open_Year\" < '2009';",
    "exec_result": 1
  },
  {
    "idx": 417,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",
    "pred": "SELECT m.\"Open_Year\", m.\"Num_of_Staff\" FROM \"museum\" m WHERE m.\"Name\" = 'Plaza Museum';",
    "exec_result": 1
  },
  {
    "idx": 418,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)",
    "pred": "SELECT m.name FROM museum m WHERE m.num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > '2010');",
    "exec_result": 1
  },
  {
    "idx": 419,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1",
    "pred": "SELECT v.ID, v.Name, v.Age FROM visitor v JOIN (SELECT v.ID FROM visit GROUP BY v.ID HAVING COUNT(v.Museum_ID) > 1) AS mv ON v.ID = mv.ID;",
    "exec_result": 0
  },
  {
    "idx": 420,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
    "pred": "WITH total_spent AS (SELECT v.ID, v.Name, v.Level_of_membership, SUM(v.Visit.Total_spent) AS total_spent FROM visitor v JOIN visit vs ON v.ID = CAST(vs.visitor_ID AS int) GROUP BY v.ID, v.Name, v.Level_of_membership) SELECT ts.ID, ts.Name, ts.Level_of_membership FROM total_spent ts ORDER BY ts.total_spent DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 421,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH visit_counts AS (SELECT v.Museum_ID, COUNT(v.Visitor_ID) AS visit_count FROM visit v GROUP BY v.Museum_ID) SELECT m.Name, vc.Visit_Count FROM visit_counts vc JOIN museum m ON vc.Museum_ID = m.Museum_ID ORDER BY vc.Visit_Count DESC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 422,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)",
    "pred": "SELECT m.Name FROM museum m WHERE m.Museum_ID NOT IN (SELECT v.Museum_ID FROM visit v);",
    "exec_result": 1
  },
  {
    "idx": 423,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
    "pred": "SELECT v.Name, v.Age FROM visit v JOIN visitor vi ON v.visitor_ID = CAST(vi.ID AS text) WHERE v.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);",
    "exec_result": 0
  },
  {
    "idx": 424,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit",
    "pred": "SELECT AVG(v.Num_of_Ticket) AS average_tickets, MAX(v.Num_of_Ticket) AS max_tickets FROM visit v;",
    "exec_result": 1
  },
  {
    "idx": 425,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1",
    "pred": "SELECT SUM(v.total_spent) AS total_spent FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1;",
    "exec_result": 1
  },
  {
    "idx": 426,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011",
    "pred": "SELECT v.name FROM visit v JOIN museum m ON v.museum_id = m.museum_id WHERE m.open_year < '2009' AND m.open_year > '2011' GROUP BY v.name HAVING COUNT(DISTINCT v.museum_id) > 1;",
    "exec_result": 0
  },
  {
    "idx": 427,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)",
    "pred": "SELECT COUNT(DISTINCT v.ID) FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID JOIN museum m ON vi.Museum_ID = m.Museum_ID WHERE m.Open_Year < '2011';",
    "exec_result": 0
  },
  {
    "idx": 428,
    "db_id": "museum_visit",
    "question": "",
    "gold": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008",
    "pred": "SELECT COUNT(*) FROM museum m WHERE m.open_year > '2013' AND m.open_year < '2008';",
    "exec_result": 0
  },
  {
    "idx": 429,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(DISTINCT p.player_id) FROM players p;",
    "exec_result": 1
  },
  {
    "idx": 430,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM players",
    "pred": "SELECT COUNT(DISTINCT p.player_id) FROM players p;",
    "exec_result": 1
  },
  {
    "idx": 431,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(*) FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 432,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches",
    "pred": "SELECT COUNT(*) AS total_matches FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 433,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT p.first_name, p.birth_date FROM players p WHERE p.country_code = 'USA' ORDER BY p.birth_date ASC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 434,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'",
    "pred": "SELECT p.\"first_name\", p.birth_date FROM players p WHERE p.country_code = 'USA';",
    "exec_result": 1
  },
  {
    "idx": 435,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(m.loser_age) AS average_loser_age, AVG(m.winner_age) AS average_winner_age FROM matches m;",
    "exec_result": 1
  },
  {
    "idx": 436,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches",
    "pred": "SELECT AVG(m.loser_age) AS average_loser_age, AVG(m.winner_age) AS average_winner_age FROM matches m;",
    "exec_result": 1
  },
  {
    "idx": 437,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(r.ranking) AS average_rank FROM rankings r JOIN matches m ON r.player_id = m.winner_id;",
    "exec_result": 0
  },
  {
    "idx": 438,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(winner_rank) FROM matches",
    "pred": "SELECT AVG(r.ranking) AS average_rank FROM rankings r JOIN matches m ON r.player_id = m.winner_id;",
    "exec_result": 0
  },
  {
    "idx": 439,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(m.loser_rank) AS highest_losing_rank FROM matches m;",
    "exec_result": 0
  },
  {
    "idx": 440,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT min(loser_rank) FROM matches",
    "pred": "SELECT MAX(r.ranking) AS max_losing_rank FROM matches m JOIN players p ON m.loser_id = p.player_id JOIN rankings r ON p.player_id = r.player_id;",
    "exec_result": 0
  },
  {
    "idx": 441,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT p.country_code) FROM players p;",
    "exec_result": 1
  },
  {
    "idx": 442,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country_code) FROM players",
    "pred": "SELECT COUNT(DISTINCT p.country_code) FROM players p;",
    "exec_result": 1
  },
  {
    "idx": 443,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT m.loser_name) FROM matches m;",
    "exec_result": 1
  },
  {
    "idx": 444,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT loser_name) FROM matches",
    "pred": "SELECT COUNT(DISTINCT loser_name) FROM matches;",
    "exec_result": 1
  },
  {
    "idx": 445,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT m.tourney_name, COUNT(m.match_num) AS match_count FROM matches m GROUP BY m.tourney_name HAVING COUNT(m.match_num) > 10 ORDER BY match_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 446,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10",
    "pred": "SELECT m.tourney_name FROM matches m GROUP BY m.tourney_name HAVING COUNT(m.match_num) > 10;",
    "exec_result": 1
  },
  {
    "idx": 447,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN rankings r1 ON p.player_id = r1.player_id JOIN rankings r2 ON p.player_id = r2.player_id WHERE r1.\"ranking_date\" = '2013-01-01' AND r2.\"ranking_date\" = '2016-12-31';",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016",
    "pred": "WITH winner_2013 AS (SELECT p.\"first_name\", p.\"last_name\" FROM players p JOIN matches m ON p.\"player_id\" = m.\"winner_id\" WHERE m.\"year\" = 2013), winner_2016 AS (SELECT p.\"first_name\", p.\"last_name\" FROM players p JOIN matches m ON p.\"player_id\" = m.\"winner_id\" WHERE m.\"year\" = 2016) SELECT w2013.\"first_name\", w2013.\"last_name\" FROM winner_2013 w2013 JOIN winner_2016 w2016 ON w2013.\"first_name\" = w2016.\"first_name\" AND w2013.\"last_name\" = w2016.\"last_name\";",
    "exec_result": 0
  },
  {
    "idx": 449,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*) AS total_matches FROM matches m WHERE EXTRACT(YEAR FROM m.tourney_date) IN (2013, 2016);",
    "exec_result": 0
  },
  {
    "idx": 450,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016",
    "pred": "SELECT COUNT(*) FROM matches m WHERE EXTRACT(YEAR FROM m.tourney_date) IN (2013, 2016);",
    "exec_result": 0
  },
  {
    "idx": 451,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT p.country_code, p.first_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name = 'WTA Championships' AND p.player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open') GROUP BY p.country_code, p.first_name;",
    "exec_result": 1
  },
  {
    "idx": 452,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",
    "pred": "SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.first_name, p.country_code;",
    "exec_result": 0
  },
  {
    "idx": 453,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT p.\"first_name\", p.country_code FROM players p ORDER BY p.birth_date ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 454,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code FROM players p WHERE p.birth_date = (SELECT MIN(p2.birth_date) FROM players p2);",
    "exec_result": 1
  },
  {
    "idx": 455,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT p.first_name, p.last_name, p.birth_date FROM players p ORDER BY p.birth_date ASC;",
    "exec_result": 0
  },
  {
    "idx": 456,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players ORDER BY birth_date",
    "pred": "SELECT p.first_name, p.last_name FROM players p ORDER BY p.birth_date ASC;",
    "exec_result": 1
  },
  {
    "idx": 457,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT p.first_name, p.last_name FROM players p WHERE p.hand = 'L' ORDER BY p.birth_date ASC;",
    "exec_result": 1
  },
  {
    "idx": 458,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",
    "pred": "SELECT p.first_name, p.last_name FROM players p WHERE p.hand = 'left' ORDER BY p.birth_date ASC;",
    "exec_result": 0
  },
  {
    "idx": 459,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE r.tours = (SELECT MAX(tours) FROM rankings);",
    "exec_result": 1
  },
  {
    "idx": 460,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name, p.country_code ORDER BY r.tours DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 461,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT EXTRACT(YEAR FROM m.tourney_date) AS YEAR, COUNT(*) AS num_matches FROM matches m GROUP BY EXTRACT(YEAR FROM m.tourney_date) ORDER BY num_matches DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 462,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT EXTRACT(YEAR FROM m.tourney_date) AS YEAR, COUNT(*) AS total_matches FROM matches m GROUP BY YEAR ORDER BY total_matches DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 463,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH winner_rank_points AS (SELECT p.first_name, p.last_name, r.ranking_points, COUNT(m.match_num) AS wins FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN matches m ON p.player_id = m.winner_id WHERE r.ranking_points = (SELECT MAX(r2.ranking_points) FROM rankings r2) GROUP BY p.first_name, p.last_name) SELECT wr.first_name, wr.last_name, wr.ranking_points FROM winner_rank_points wr ORDER BY wr.wins DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.last_name, SUM(r.ranking_points) AS total_ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name, p.last_name ORDER BY total_ranking_points DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name = 'Australian Open' ORDER BY r.ranking_points DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
    "pred": "SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name = 'Australian Open' ORDER BY r.ranking_points DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 467,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT p1.first_name, p1.last_name, p2.first_name, p2.last_name FROM players p1 JOIN players p2 ON p1.player_id = (SELECT loser_id FROM matches ORDER BY minutes DESC LIMIT 1) AND p2.player_id = (SELECT winner_id FROM matches ORDER BY minutes DESC LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 468,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",
    "pred": "SELECT p1.first_name, p2.first_name FROM players p1 JOIN players p2 ON p1.player_id = (SELECT winner_id FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)) AND p2.player_id = (SELECT loser_id FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches));",
    "exec_result": 0
  },
  {
    "idx": 469,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name ORDER BY p.first_name NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 470,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, AVG(r.ranking) AS average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name;",
    "exec_result": 1
  },
  {
    "idx": 471,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name;",
    "exec_result": 1
  },
  {
    "idx": 472,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name",
    "pred": "SELECT p.first_name, SUM(r.ranking_points) AS total_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name;",
    "exec_result": 1
  },
  {
    "idx": 473,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT p.country_code, COUNT(*) AS number_of_players FROM players p GROUP BY p.country_code ORDER BY number_of_players DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 474,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  country_code FROM players GROUP BY country_code",
    "pred": "SELECT p.country_code, COUNT(p.player_id) AS player_count FROM players p GROUP BY p.country_code ORDER BY p.country_code NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 475,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT p.country_code, COUNT(p.player_id) AS player_count FROM players p GROUP BY p.country_code ORDER BY player_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 476,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT p.country_code, COUNT(p.player_id) AS country_player_count FROM players p GROUP BY p.country_code ORDER BY country_player_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 477,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT DISTINCT p.country_code FROM players p GROUP BY p.country_code HAVING COUNT(p.player_id) > 50;",
    "exec_result": 1
  },
  {
    "idx": 478,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50",
    "pred": "SELECT COUNT(DISTINCT p.country_code) AS country_code FROM players p WHERE p.country_code IN (SELECT r.player_id FROM rankings r GROUP BY r.player_id HAVING COUNT(r.player_id) > 50) GROUP BY p.country_code;",
    "exec_result": 0
  },
  {
    "idx": 479,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT r.ranking_date, SUM(r.tours) AS total_tours FROM rankings r GROUP BY r.ranking_date ORDER BY r.ranking_date NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 480,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",
    "pred": "SELECT r.ranking_date, SUM(r.tours) AS total_tours FROM rankings r GROUP BY r.ranking_date ORDER BY r.ranking_date NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 481,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT EXTRACT(YEAR FROM m.tourney_date) AS YEAR, COUNT(*) AS number_of_matches FROM matches m GROUP BY YEAR ORDER BY YEAR;",
    "exec_result": 0
  },
  {
    "idx": 482,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",
    "pred": "SELECT EXTRACT(YEAR FROM m.tourney_date) AS YEAR, COUNT(m.match_num) AS matches_count FROM matches m GROUP BY YEAR ORDER BY YEAR;",
    "exec_result": 0
  },
  {
    "idx": 483,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "WITH winner_age AS (SELECT p.first_name, p.last_name, p.hand, m.winner_age, m.winner_rank FROM players p JOIN matches m ON p.player_id = m.winner_id) SELECT wa.first_name, wa.last_name, wa.hand, wa.winner_age, wa.winner_rank FROM winner_age wa ORDER BY wa.winner_age ASC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 484,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",
    "pred": "SELECT p.first_name, p.last_name, m.winner_rank FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.winner_age <= (SELECT AVG(winner_age) FROM matches) ORDER BY m.winner_rank DESC NULLS LAST LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 485,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(DISTINCT p.\"player_id\") FROM players p JOIN matches m ON p.\"player_id\" = m.\"winner_id\" WHERE p.\"hand\" = 'left' AND m.\"tourney_name\" = 'WTA Championships';",
    "exec_result": 0
  },
  {
    "idx": 486,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'",
    "pred": "SELECT COUNT(*) FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE p.hand = 'left';",
    "exec_result": 0
  },
  {
    "idx": 487,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "WITH winner_rank_points AS (SELECT p.player_id, MAX(r.ranking_points) AS max_ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id) SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN winner_rank_points wrp ON p.player_id = wrp.player_id ORDER BY wrp.max_ranking_points DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 488,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
    "pred": "WITH winner_rank_points AS (SELECT p.player_id, SUM(m.winner_rank_points) AS total_winner_rank_points FROM matches m JOIN players p ON m.winner_id = p.player_id GROUP BY p.player_id) SELECT p.first_name, p.country_code, p.birth_date FROM winner_rank_points wr JOIN players p ON wr.player_id = p.player_id ORDER BY wr.total_winner_rank_points DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 489,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT p.hand, COUNT(p.player_id) AS number_of_players FROM players p GROUP BY p.hand ORDER BY number_of_players DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 490,
    "db_id": "wta_1",
    "question": "",
    "gold": "SELECT count(*) ,  hand FROM players GROUP BY hand",
    "pred": "SELECT p.hand, COUNT(*) AS player_count FROM players p GROUP BY p.hand ORDER BY p.hand NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 491,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'",
    "pred": "SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';",
    "exec_result": 1
  },
  {
    "idx": 492,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  tonnage FROM ship ORDER BY name DESC",
    "pred": "SELECT s.name, s.tonnage FROM ship s ORDER BY s.name DESC;",
    "exec_result": 1
  },
  {
    "idx": 493,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  date FROM battle",
    "pred": "SELECT b.name, b.date, b.result FROM battle b;",
    "exec_result": 0
  },
  {
    "idx": 494,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT max(killed) ,  min(killed) FROM death",
    "pred": "SELECT MAX(d.killed) AS max_killed, MIN(d.killed) AS min_killed FROM death d;",
    "exec_result": 1
  },
  {
    "idx": 495,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT avg(injured) FROM death",
    "pred": "SELECT AVG(d.injured) AS average_injuries FROM death d;",
    "exec_result": 1
  },
  {
    "idx": 496,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'",
    "pred": "SELECT d.note, d.killed, d.injured FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE s.tonnage = 't';",
    "exec_result": 0
  },
  {
    "idx": 497,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",
    "pred": "SELECT b.name, b.result FROM \"battle\" b WHERE b.bulgarian_commander!= 'Boril' ORDER BY b.name ASC;",
    "exec_result": 1
  },
  {
    "idx": 498,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",
    "pred": "SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.ship_type = 'Brig';",
    "exec_result": 1
  },
  {
    "idx": 499,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",
    "pred": "SELECT b.id, b.name FROM battle b JOIN death d ON b.id = d.caused_by_ship_id GROUP BY b.id, b.name HAVING SUM(d.killed) > 10;",
    "exec_result": 0
  },
  {
    "idx": 500,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id, s.name ORDER BY SUM(d.injured) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'",
    "pred": "SELECT DISTINCT b.name FROM battle b WHERE b.bulgarian_commander ilike '%Kaloyan%' AND b.latin_commander ilike '%Baldwin I%';",
    "exec_result": 0
  },
  {
    "idx": 502,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(DISTINCT RESULT) FROM battle",
    "pred": "SELECT COUNT(DISTINCT result) FROM battle;",
    "exec_result": 1
  },
  {
    "idx": 503,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );",
    "pred": "SELECT COUNT(DISTINCT b.id) AS number_of_battles FROM battle b LEFT JOIN ship s ON b.id = s.lost_in_battle WHERE s.tonnage IS NULL OR s.tonnage!= '225';",
    "exec_result": 0
  },
  {
    "idx": 504,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",
    "pred": "SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name IN ('Lettice', 'HMS Atalanta');",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",
    "pred": "SELECT b.name, b.result, b.bulgarian_commander FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.location!= 'English Channel' ORDER BY b.name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 506,
    "db_id": "battle_death",
    "question": "",
    "gold": "SELECT note FROM death WHERE note LIKE '%East%'",
    "pred": "SELECT d.note FROM death d WHERE d.note ilike '%East%';",
    "exec_result": 0
  },
  {
    "idx": 507,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT a.line_1, a.line_2 FROM Addresses a;",
    "exec_result": 1
  },
  {
    "idx": 508,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT line_1 ,  line_2 FROM addresses",
    "pred": "SELECT a.line_1, a.line_2 FROM Addresses a;",
    "exec_result": 1
  },
  {
    "idx": 509,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(c.course_id) FROM Courses c;",
    "exec_result": 1
  },
  {
    "idx": 510,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Courses",
    "pred": "SELECT COUNT(DISTINCT c.course_id) AS number_of_courses FROM Courses c;",
    "exec_result": 1
  },
  {
    "idx": 511,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT c.course_description FROM Courses c WHERE c.course_name = 'Math';",
    "exec_result": 0
  },
  {
    "idx": 512,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT course_description FROM Courses WHERE course_name  =  'math'",
    "pred": "SELECT c.course_description FROM Courses c WHERE c.course_name ilike '%Math%';",
    "exec_result": 0
  },
  {
    "idx": 513,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT a.zip_postcode FROM Addresses a WHERE a.city = 'Port Chelsea';",
    "exec_result": 1
  },
  {
    "idx": 514,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'",
    "pred": "SELECT a.zip_postcode FROM Addresses a WHERE a.city = 'Port Chelsea';",
    "exec_result": 1
  },
  {
    "idx": 515,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT d.department_name, COUNT(d.department_id) AS degree_count FROM Degree_Programs dp JOIN Departments d ON dp.department_id = d.department_id GROUP BY d.department_name ORDER BY degree_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 516,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
    "pred": "SELECT d.department_name, COUNT(sp.degree_program_id) AS degree_count FROM Degree_Programs sp JOIN Departments d ON sp.department_id = d.department_id GROUP BY d.department_name ORDER BY degree_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 517,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT d.department_id) FROM Degree_Programs d;",
    "exec_result": 1
  },
  {
    "idx": 518,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT department_id) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT d.department_id) FROM Degree_Programs d;",
    "exec_result": 1
  },
  {
    "idx": 519,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT dp.degree_summary_name) FROM Degree_Programs dp;",
    "exec_result": 1
  },
  {
    "idx": 520,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs",
    "pred": "SELECT COUNT(DISTINCT d.degree_summary_name) FROM Degree_Programs d;",
    "exec_result": 1
  },
  {
    "idx": 521,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(DISTINCT dp.degree_program_id) FROM Degree_Programs dp JOIN Departments d ON dp.department_id = d.department_id WHERE d.department_name = 'Engineering';",
    "exec_result": 1
  },
  {
    "idx": 522,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'",
    "pred": "SELECT COUNT(DISTINCT d.degree_program_id) FROM Degree_Programs d JOIN Departments dpt ON d.department_id = dpt.department_id WHERE LOWER(dpt.department_description) = 'engineering';",
    "exec_result": 1
  },
  {
    "idx": 523,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT s.section_name, s.section_description FROM Sections s;",
    "exec_result": 1
  },
  {
    "idx": 524,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name ,  section_description FROM Sections",
    "pred": "SELECT s.section_name, s.section_description FROM Sections s;",
    "exec_result": 1
  },
  {
    "idx": 525,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT c.course_id, c.course_name FROM Courses c JOIN Sections s ON c.course_id = s.course_id GROUP BY c.course_id, c.course_name HAVING COUNT(s.section_id) <= 2;",
    "exec_result": 1
  },
  {
    "idx": 526,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",
    "pred": "SELECT c.course_id, c.course_name FROM Courses c JOIN Sections s ON c.course_id = s.course_id GROUP BY c.course_id, c.course_name HAVING COUNT(s.section_id) < 2;",
    "exec_result": 0
  },
  {
    "idx": 527,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT s.section_name FROM Sections s ORDER BY s.section_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 528,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_name FROM Sections ORDER BY section_name DESC",
    "pred": "SELECT s.section_name FROM Sections s ORDER BY s.section_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 529,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.semester_name, COUNT(se.student_id) AS total_students FROM Student_Enrolment se JOIN Semesters s ON se.semester_id = s.semester_id GROUP BY s.semester_name ORDER BY total_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 530,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH semester_enrolments AS (SELECT se.semester_id, COUNT(se.student_id) AS num_students FROM Student_Enrolment se GROUP BY se.semester_id) SELECT s.semester_name, se.semester_id, se.num_students FROM Semesters s JOIN semester_enrolments se ON s.semester_id = se.semester_id ORDER BY se.num_students DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 531,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT d.department_description FROM Departments d WHERE d.department_name ILIKE '%computer%';",
    "exec_result": 0
  },
  {
    "idx": 532,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
    "pred": "SELECT d.department_description FROM Departments d WHERE d.department_name ilike '%computer%';",
    "exec_result": 0
  },
  {
    "idx": 533,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name, se.degree_program_id FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id GROUP BY s.first_name, s.middle_name, s.last_name, se.degree_program_id HAVING COUNT(DISTINCT se.degree_program_id) = 2;",
    "exec_result": 0
  },
  {
    "idx": 534,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sm ON se.semester_id = sm.semester_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name HAVING COUNT(DISTINCT dp.degree_program_id) >= 2 ORDER BY s.student_id NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 535,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE LOWER(dp.degree_summary_description) = 'bachelor';",
    "exec_result": 0
  },
  {
    "idx": 536,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name, dp.degree_summary_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelors';",
    "exec_result": 0
  },
  {
    "idx": 537,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_summary_name, COUNT(se.student_id) AS total_students FROM Degree_Programs dp JOIN Student_Enrolment se ON dp.degree_program_id = se.degree_program_id GROUP BY dp.degree_summary_name ORDER BY total_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 538,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT dp.degree_summary_name, COUNT(se.student_id) AS total_students FROM Student_Enrolment se JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id GROUP BY dp.degree_summary_name ORDER BY total_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 539,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH student_programs AS (SELECT d.degree_program_id, d.degree_summary_name, COUNT(se.student_id) AS num_students FROM Student_Enrolment se JOIN Degree_Programs d ON se.degree_program_id = d.degree_program_id GROUP BY d.degree_program_id, d.degree_summary_name) SELECT sp.degree_program_id, sp.degree_summary_name, sp.num_students FROM student_programs sp ORDER BY sp.num_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 540,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH student_enrolment_count AS (SELECT d.degree_program_id, COUNT(se.student_id) AS total_students FROM Degree_Programs d JOIN Student_Enrolment se ON d.degree_program_id = se.degree_program_id GROUP BY d.degree_program_id) SELECT sec.degree_program_id, sec.total_students FROM student_enrolment_count sec ORDER BY sec.total_students DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 541,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH student_enrolment_count AS (SELECT se.student_id, COUNT(se.student_enrolment_id) AS total_enrolments FROM Student_Enrolment se GROUP BY se.student_id) SELECT s.student_id, s.first_name, s.middle_name, s.last_name, sec.total_enrolments FROM student_enrolment_count sec JOIN Students s ON sec.student_id = s.student_id ORDER BY sec.total_enrolments DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS num_enrolments FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name ORDER BY num_enrolments DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 543,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "SELECT s.semester_name FROM Semesters s LEFT JOIN Student_Enrolment se ON s.semester_id = se.semester_id WHERE se.student_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 544,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )",
    "pred": "WITH se AS (SELECT se.student_id, se.degree_program_id, se.semester_id FROM Student_Enrolment se) SELECT s.semester_name FROM Semesters s LEFT JOIN se ON s.semester_id = se.semester_id WHERE se.semester_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 545,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT DISTINCT c.course_name FROM Courses c JOIN Student_Enrolment se ON c.course_id = se.course_id;",
    "exec_result": 0
  },
  {
    "idx": 546,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id",
    "pred": "SELECT DISTINCT c.course_name FROM Courses c JOIN Student_Enrolment se ON c.course_id = se.course_id WHERE se.student_id IS NOT NULL ORDER BY c.course_name ASC;",
    "exec_result": 0
  },
  {
    "idx": 547,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.course_id, COUNT(se.student_enrolment_id) AS total_enrollments FROM Student_Enrolment se JOIN Student_Enrolment_Courses sec ON se.student_enrolment_id = sec.student_enrolment_id JOIN Courses s ON sec.course_id = s.course_id GROUP BY s.course_id ORDER BY total_enrollments DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 548,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.course_name, COUNT(se.student_id) AS total_students FROM Courses c JOIN Student_Enrolment_Courses sec ON c.course_id = sec.course_id JOIN Student_Enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_name ORDER BY total_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 549,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (SELECT se.student_id FROM Student_Enrolment se);",
    "exec_result": 0
  },
  {
    "idx": 550,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
    "pred": "SELECT s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (SELECT se.student_id FROM Student_Enrolment se);",
    "exec_result": 0
  },
  {
    "idx": 551,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "SELECT t.transcript_id, t.transcript_date FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id, t.transcript_date HAVING COUNT(tc.student_course_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 552,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2",
    "pred": "WITH CourseTranscripts AS (SELECT t.transcript_id, COUNT(tc.student_course_id) AS course_count FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id) SELECT ct.transcript_id, ct.course_count FROM CourseTranscripts ct WHERE ct.course_count >= 2 ORDER BY ct.transcript_id NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 553,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'",
    "pred": "SELECT s.cell_mobile_number FROM Students s WHERE s.first_name = 'Timmothy' AND s.last_name = 'Ward';",
    "exec_result": 1
  },
  {
    "idx": 554,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'",
    "pred": "SELECT s.cell_mobile_number FROM Students s WHERE s.first_name = 'Timmothy' AND s.last_name = 'Ward';",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s WHERE s.date_first_registered = (SELECT MIN(s2.date_first_registered) FROM Students s2);",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s ORDER BY s.date_first_registered ASC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s WHERE s.date_left = (SELECT MIN(s2.date_left) FROM Students s2);",
    "exec_result": 1
  },
  {
    "idx": 558,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",
    "pred": "WITH EarliestGrad AS (SELECT s.student_id, s.first_name, s.middle_name, s.last_name, MIN(te.transcript_date) AS earliest_transcript_date FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Student_Enrolment_Courses sec ON se.student_enrolment_id = sec.student_enrolment_id JOIN Transcripts te ON sec.student_course_id = te.student_course_id GROUP BY s.student_id, s.first_name, s.middle_name, s.last_name) SELECT eg.first_name, eg.middle_name, eg.last_name FROM EarliestGrad eg ORDER BY eg.earliest_transcript_date ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 559,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT s.first_name FROM Students s WHERE s.current_address_id!= s.permanent_address_id;",
    "exec_result": 1
  },
  {
    "idx": 560,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id",
    "pred": "SELECT s.first_name FROM Students s WHERE s.current_address_id!= s.permanent_address_id;",
    "exec_result": 1
  },
  {
    "idx": 561,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.state_province_county, a.country FROM Addresses a JOIN Students s ON a.address_id = s.current_address_id GROUP BY a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.state_province_county, a.country ORDER BY COUNT(s.student_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 562,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.address_id, a.line_1, a.line_2, COUNT(s.student_id) AS number_of_students FROM Addresses a JOIN Students s ON a.address_id = s.current_address_id GROUP BY a.address_id, a.line_1, a.line_2 ORDER BY number_of_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 563,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(EXTRACT(epoch FROM t.transcript_date)) AS average_transcript_time FROM Transcripts t;",
    "exec_result": 0
  },
  {
    "idx": 564,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT avg(transcript_date) FROM Transcripts",
    "pred": "SELECT AVG(t.transcript_date) FROM Transcripts t;",
    "exec_result": 1
  },
  {
    "idx": 565,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT t.transcript_date, t.other_details FROM Transcripts t ORDER BY t.transcript_date ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 566,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",
    "pred": "SELECT MIN(t.transcript_date) AS earliest_transcript_date, s.first_name, s.last_name FROM Transcripts t JOIN Student_Enrolment se ON t.transcript_id = se.student_enrolment_id JOIN Students s ON se.student_id = s.student_id GROUP BY s.first_name, s.last_name;",
    "exec_result": 0
  },
  {
    "idx": 567,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(*) FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 568,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) FROM Transcripts",
    "pred": "SELECT COUNT(t.transcript_id) AS total_transcripts FROM Transcripts t;",
    "exec_result": 1
  },
  {
    "idx": 569,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(t.transcript_date) AS last_transcript_release_date FROM Transcripts t;",
    "exec_result": 1
  },
  {
    "idx": 570,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1",
    "pred": "SELECT MAX(t.transcript_date) AS last_transcript_date FROM Transcripts t;",
    "exec_result": 1
  },
  {
    "idx": 571,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(te.student_enrolment_id) AS total_transcripts, te.student_enrolment_id FROM Student_Enrolment te GROUP BY te.student_enrolment_id ORDER BY total_transcripts DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 572,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(tc.student_course_id), se.student_enrolment_id FROM Student_Enrolment_Courses se JOIN Transcript_Contents tc ON se.student_course_id = tc.student_course_id GROUP BY se.student_enrolment_id ORDER BY COUNT(tc.student_course_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 573,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT t.transcript_date, t.transcript_id FROM Transcripts t JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id, t.transcript_date ORDER BY COUNT(tc.student_course_id) ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 574,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "WITH transcript_count AS (SELECT tc.student_course_id, COUNT(tc.student_course_id) AS num_transcripts FROM Transcript_Contents tc GROUP BY tc.student_course_id) SELECT MIN(num_transcripts) AS min_transcripts, tc.student_course_id FROM transcript_count tc GROUP BY tc.student_course_id ORDER BY min_transcripts ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 575,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT s.semester_id, d.degree_summary_name FROM Student_Enrolment se JOIN Degree_Programs d ON se.degree_program_id = d.degree_program_id JOIN Semesters s ON se.semester_id = s.semester_id WHERE d.degree_summary_name IN ('Master', 'Bachelor') GROUP BY s.semester_id, d.degree_summary_name HAVING COUNT(DISTINCT d.degree_summary_name) = 2;",
    "exec_result": 0
  },
  {
    "idx": 576,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'",
    "pred": "SELECT s.semester_id FROM Student_Enrolment se JOIN Students st ON se.student_id = st.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.department_id WHERE dp.department_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.department_name) = 2;",
    "exec_result": 0
  },
  {
    "idx": 577,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT COUNT(DISTINCT s.current_address_id) FROM Students s;",
    "exec_result": 1
  },
  {
    "idx": 578,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT count(DISTINCT current_address_id) FROM Students",
    "pred": "SELECT DISTINCT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id;",
    "exec_result": 0
  },
  {
    "idx": 579,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT s.first_name, s.middle_name, s.last_name FROM Students s ORDER BY s.last_name DESC, s.first_name DESC;",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC",
    "pred": "SELECT s.other_student_details FROM Students s ORDER BY s.other_student_details DESC;",
    "exec_result": 1
  },
  {
    "idx": 581,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT s.section_description FROM Sections s ORDER BY s.section_description ASC;",
    "exec_result": 0
  },
  {
    "idx": 582,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "SELECT section_description FROM Sections WHERE section_name  =  'h'",
    "pred": "SELECT s.section_description FROM Sections s WHERE s.section_name = 'h';",
    "exec_result": 1
  },
  {
    "idx": 583,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT s.first_name FROM Students s WHERE s.cell_mobile_number = '09700166582' OR s.permanent_address_id IN (SELECT a.address_id FROM Addresses a WHERE a.country = 'Haiti');",
    "exec_result": 0
  },
  {
    "idx": 584,
    "db_id": "student_transcripts_tracking",
    "question": "",
    "gold": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'",
    "pred": "SELECT s.first_name FROM Students s WHERE s.cell_mobile_number = '09700166582' OR s.permanent_address_id IN (SELECT a.address_id FROM Addresses a WHERE a.country = 'Haiti');",
    "exec_result": 0
  },
  {
    "idx": 585,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT c.title FROM Cartoon c ORDER BY c.title ASC;",
    "exec_result": 1
  },
  {
    "idx": 586,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon ORDER BY title",
    "pred": "SELECT c.title FROM Cartoon c ORDER BY c.title ASC;",
    "exec_result": 1
  },
  {
    "idx": 587,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT c.title FROM cartoon c WHERE c.directed_by = 'Ben Jones';",
    "exec_result": 1
  },
  {
    "idx": 588,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
    "pred": "SELECT c.title FROM cartoon c WHERE c.directed_by = 'Ben Jones';",
    "exec_result": 1
  },
  {
    "idx": 589,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(*) AS total_cartoons FROM Cartoon c WHERE c.\"Written_by\" = 'Joseph Kuhr';",
    "exec_result": 1
  },
  {
    "idx": 590,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";",
    "pred": "SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';",
    "exec_result": 1
  },
  {
    "idx": 591,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT c.title, c.directed_by FROM Cartoon c ORDER BY c.original_air_date ASC;",
    "exec_result": 1
  },
  {
    "idx": 592,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",
    "pred": "SELECT c.title, c.directed_by FROM cartoon c ORDER BY c.original_air_date ASC;",
    "exec_result": 1
  },
  {
    "idx": 593,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT c.title FROM cartoon c WHERE c.directed_by = 'Ben Jones' OR c.directed_by = 'Brandon Vietti';",
    "exec_result": 1
  },
  {
    "idx": 594,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";",
    "pred": "SELECT c.title FROM cartoon c WHERE c.directed_by ilike '%Ben Jones%' OR c.directed_by ilike '%Brandon Vietti%';",
    "exec_result": 0
  },
  {
    "idx": 595,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT c.\"Country\", COUNT(c.\"id\") AS number_of_channels FROM \"TV_Channel\" c GROUP BY c.\"Country\" ORDER BY number_of_channels DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 596,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT c.Country, COUNT(*) AS number_of_channels FROM TV_Channel c GROUP BY c.Country ORDER BY number_of_channels DESC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 597,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT s.series_name), COUNT(DISTINCT s.content) FROM TV_Channel s;",
    "exec_result": 1
  },
  {
    "idx": 598,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;",
    "pred": "SELECT COUNT(DISTINCT s.id) AS number_of_series, COUNT(DISTINCT t.content) AS number_of_contents FROM TV_Channel t JOIN TV_Series s ON t.id = s.Channel;",
    "exec_result": 0
  },
  {
    "idx": 599,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT t.content FROM TV_Channel t WHERE t.series_name = 'Sky Radio';",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT t.Content FROM TV_Channel t WHERE t.id = 'Sky Radio';",
    "exec_result": 0
  },
  {
    "idx": 601,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT tc.Package_Option FROM TV_Channel tc WHERE tc.series_name ilike '%Sky Radio%';",
    "exec_result": 0
  },
  {
    "idx": 602,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";",
    "pred": "SELECT tc.Package_Option FROM TV_Channel tc JOIN TV_Series ts ON tc.id = ts.Channel WHERE ts.series_name = 'Sky Radio';",
    "exec_result": 0
  },
  {
    "idx": 603,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(DISTINCT t.id) FROM TV_Channel t WHERE LOWER(t.Language) = 'english';",
    "exec_result": 1
  },
  {
    "idx": 604,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";",
    "pred": "SELECT COUNT(DISTINCT t.id) FROM TV_Channel t WHERE t.Language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 605,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "WITH LanguageCount AS (SELECT t.Language, COUNT(t.id) AS LanguageCount FROM TV_Channel t GROUP BY t.Language) SELECT lc.Language, lc.LanguageCount FROM LanguageCount lc ORDER BY lc.LanguageCount ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 606,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT COUNT(DISTINCT t.Language) AS number_of_channels, t.Language FROM TV_Channel t GROUP BY t.Language ORDER BY number_of_channels ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 607,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT DISTINCT t.Language, COUNT(t.id) FROM TV_Channel t GROUP BY t.Language ORDER BY t.Language ASC;",
    "exec_result": 1
  },
  {
    "idx": 608,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",
    "pred": "SELECT COUNT(DISTINCT t.id) AS number_of_channels, t.Language FROM TV_Channel t GROUP BY t.Language ORDER BY number_of_channels DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 609,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT tc.series_name FROM TV_Channel tc JOIN Cartoon c ON tc.id = c.Channel WHERE c.id = 1;",
    "exec_result": 1
  },
  {
    "idx": 610,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";",
    "pred": "SELECT tc.\"series_name\" FROM \"TV_Channel\" tc JOIN \"Cartoon\" c ON tc.\"id\" = c.\"Channel\" WHERE c.\"Title\" = 'The Rise of the Blue Beetle';",
    "exec_result": 0
  },
  {
    "idx": 611,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT c.title FROM \"Cartoon\" c JOIN \"TV_Channel\" t ON c.channel = t.id WHERE t.series_name ilike '%Sky Radio%';",
    "exec_result": 0
  },
  {
    "idx": 612,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT c.title FROM cartoon c JOIN tv_channel t ON c.channel = t.id WHERE t.series_name ilike '%Sky Radio%';",
    "exec_result": 0
  },
  {
    "idx": 613,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT s.episode, s.rating FROM tv_series s ORDER BY s.rating DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 614,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode FROM TV_series ORDER BY rating",
    "pred": "SELECT s.episode, s.rating FROM TV_series s ORDER BY s.rating DESC;",
    "exec_result": 0
  },
  {
    "idx": 615,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT s.episode, s.rating FROM TV_series s ORDER BY s.rating DESC LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 616,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",
    "pred": "SELECT s.episode, s.rating FROM TV_series s ORDER BY s.rating DESC LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 617,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MIN(s.Share) AS min_share, MAX(s.Share) AS max_share FROM \"TV_series\" s;",
    "exec_result": 1
  },
  {
    "idx": 618,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT max(SHARE) , min(SHARE) FROM TV_series;",
    "pred": "SELECT MAX(s.Share), MIN(s.Share) FROM \"TV_series\" s;",
    "exec_result": 1
  },
  {
    "idx": 619,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT ts.\"Air_Date\" FROM \"TV_series\" ts WHERE ts.\"Episode\" = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 620,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT s.air_date FROM tv_series s WHERE s.episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 621,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT s.Weekly_Rank FROM \"TV_series\" s WHERE s.Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 622,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT s.Weekly_Rank FROM TV_series s WHERE s.Episode = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 623,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT t.\"series_name\" FROM \"TV_Channel\" t JOIN \"TV_series\" s ON t.\"id\" = s.\"Channel\" WHERE s.\"Episode\" = 'A Love of a Lifetime';",
    "exec_result": 1
  },
  {
    "idx": 624,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";",
    "pred": "SELECT s.Series_name FROM TV_Series s JOIN TV_Channel t ON s.Channel = t.id WHERE s.Episode = 'A Love of a Lifetime';",
    "exec_result": 0
  },
  {
    "idx": 625,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT ts.\"Episode\" FROM \"TV_series\" ts JOIN \"TV_Channel\" tc ON ts.\"Channel\" = tc.\"id\" WHERE LOWER(tc.\"series_name\") ='sky radio';",
    "exec_result": 1
  },
  {
    "idx": 626,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";",
    "pred": "SELECT s.episode FROM TV_series s WHERE s.channel = (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio');",
    "exec_result": 1
  },
  {
    "idx": 627,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT c.Directed_by, COUNT(*) AS number_of_cartoons FROM Cartoon c GROUP BY c.Directed_by ORDER BY number_of_cartoons DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 628,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",
    "pred": "SELECT d.\"Directed_by\", COUNT(c.\"id\") AS number_of_cartoons FROM \"Cartoon\" c JOIN \"TV_Channel\" t ON c.\"Channel\" = t.\"id\" WHERE t.\"Content\" = 'Cartoon' GROUP BY d.\"Directed_by\" ORDER BY number_of_cartoons DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 629,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT c.production_code, c.channel FROM Cartoon c ORDER BY c.original_air_date DESC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 630,
    "db_id": "tvshow",
    "question": "",
    "gold": "select production_code ,  channel from cartoon order by original_air_date desc limit 1",
    "pred": "SELECT c.production_code, c.channel FROM Cartoon c ORDER BY c.original_air_date DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 631,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT t.\"Package_Option\", t.\"series_name\" FROM \"TV_Channel\" t WHERE t.\"Hight_definition_TV\" = 'Yes';",
    "exec_result": 0
  },
  {
    "idx": 632,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"",
    "pred": "SELECT t.\"Package_Option\", t.\"series_name\" FROM \"TV_Channel\" t WHERE t.\"Hight_definition_TV\" = 'Yes';",
    "exec_result": 0
  },
  {
    "idx": 633,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT t.\"Country\" FROM \"TV_Channel\" t JOIN Cartoon c ON t.\"id\" = c.\"Channel\" WHERE c.\"Written_by\" = 'Todd Casey';",
    "exec_result": 1
  },
  {
    "idx": 634,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT c.\"Country\" FROM \"TV_Channel\" c JOIN Cartoon ca ON c.\"id\" = ca.\"Channel\" WHERE ca.\"Written_by\" ilike '%Todd%Casey%' ORDER BY c.\"Country\" ASC;",
    "exec_result": 0
  },
  {
    "idx": 635,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT c.Country FROM \"TV_Channel\" c LEFT JOIN Cartoon ct ON c.id = ct.Channel WHERE ct.Channel IS NULL AND c.Country IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'",
    "pred": "SELECT DISTINCT t.\"Country\" FROM \"TV_Channel\" t JOIN Cartoon c ON t.\"id\" = c.\"Channel\" WHERE c.\"Written_by\" NOT ILIKE '%Todd Casey%' ORDER BY t.\"Country\" NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 637,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT tc.\"series_name\", tc.\"Country\" FROM \"TV_Channel\" tc JOIN \"TV_series\" ts ON tc.\"id\" = ts.\"Channel\" JOIN \"Cartoon\" c ON tc.\"id\" = c.\"Channel\" WHERE c.\"Directed_by\" ilike '%Ben Jones%' AND c.\"Directed_by\" ilike '%Michael Chang%' GROUP BY tc.\"series_name\", tc.\"Country\" ORDER BY tc.\"series_name\" ASC, tc.\"Country\" ASC;",
    "exec_result": 0
  },
  {
    "idx": 638,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",
    "pred": "SELECT tc.\"series_name\", tc.\"Country\" FROM \"TV_Channel\" tc JOIN \"TV_series\" ts ON tc.\"id\" = ts.\"Channel\" JOIN \"Cartoon\" c ON ts.\"id\" = c.\"Channel\" WHERE c.\"Directed_by\" IN ('Ben Jones', 'Michael Chang') ORDER BY tc.\"series_name\" NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 639,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT tc.Pixel_aspect_ratio_PAR, tc.Country FROM TV_Channel tc WHERE tc.Language!= 'English' ORDER BY tc.Country NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 640,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",
    "pred": "SELECT tc.Pixel_aspect_ratio_PAR, tc.Country FROM TV_Channel tc WHERE tc.Language!= 'English';",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "WITH country_channel_count AS (SELECT tv_channel.country, COUNT(tv_channel.id) AS channel_count FROM tv_channel GROUP BY tv_channel.country HAVING COUNT(tv_channel.id) > 2) SELECT tv_channel.id FROM tv_channel JOIN country_channel_count ON tv_channel.country = country_channel_count.country;",
    "exec_result": 0
  },
  {
    "idx": 642,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2",
    "pred": "SELECT DISTINCT c.id FROM TV_Channel c GROUP BY c.id HAVING COUNT(c.id) > 2;",
    "exec_result": 0
  },
  {
    "idx": 643,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT DISTINCT t.id FROM TV_Channel t WHERE t.id NOT IN (SELECT c.Channel FROM Cartoon c WHERE c.Directed_by ilike '%Ben Jones%');",
    "exec_result": 0
  },
  {
    "idx": 644,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'",
    "pred": "SELECT DISTINCT c.Channel FROM Cartoon c JOIN TV_Channel t ON c.Channel = t.id WHERE c.Directed_by not ilike '%Ben Jones%';",
    "exec_result": 0
  },
  {
    "idx": 645,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT tc.Package_Option FROM TV_Channel tc WHERE tc.id NOT IN (SELECT c.Channel FROM Cartoon c WHERE c.Directed_by ilike '%Ben Jones%');",
    "exec_result": 0
  },
  {
    "idx": 646,
    "db_id": "tvshow",
    "question": "",
    "gold": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')",
    "pred": "SELECT DISTINCT t.\"Package_Option\" FROM \"TV_Channel\" t JOIN Cartoon c ON t.\"id\" = c.\"Channel\" WHERE c.\"Directed_by\" not ilike '%Ben Jones%' ORDER BY t.\"Package_Option\" NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 647,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) AS number_of_players FROM \"poker_player\";",
    "exec_result": 1
  },
  {
    "idx": 648,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(*) FROM poker_player",
    "pred": "SELECT COUNT(*) FROM \"poker_player\";",
    "exec_result": 1
  },
  {
    "idx": 649,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT pp.Earnings FROM \"poker_player\" pp ORDER BY pp.Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 650,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC",
    "pred": "SELECT p.Earnings FROM \"poker_player\" p ORDER BY p.Earnings DESC;",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT p.\"Poker_Player_ID\", p.\"Final_Table_Made\", p.\"Best_Finish\" FROM \"poker_player\" p;",
    "exec_result": 0
  },
  {
    "idx": 652,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player",
    "pred": "SELECT pp.\"Poker_Player_ID\", pp.\"Final_Table_Made\", pp.\"Best_Finish\" FROM \"poker_player\" pp;",
    "exec_result": 0
  },
  {
    "idx": 653,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(p.Earnings) FROM \"poker_player\" p;",
    "exec_result": 1
  },
  {
    "idx": 654,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(Earnings) FROM poker_player",
    "pred": "SELECT AVG(p.Earnings) AS average_earnings FROM \"poker_player\" p;",
    "exec_result": 1
  },
  {
    "idx": 655,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT pp.\"Money_Rank\" FROM \"poker_player\" pp WHERE pp.\"Earnings\" = (SELECT MAX(pp2.\"Earnings\") FROM \"poker_player\" pp2);",
    "exec_result": 1
  },
  {
    "idx": 656,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT pp.\"Money_Rank\" FROM \"poker_player\" pp WHERE pp.\"Earnings\" = (SELECT MAX(pp2.\"Earnings\") FROM \"poker_player\" pp2);",
    "exec_result": 1
  },
  {
    "idx": 657,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(p.\"Final_Table_Made\") AS max_final_tables FROM \"poker_player\" p WHERE p.\"Earnings\" < 200000;",
    "exec_result": 1
  },
  {
    "idx": 658,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000",
    "pred": "SELECT MAX(p.\"Final_Table_Made\") FROM \"poker_player\" p WHERE p.\"Earnings\" < 200000;",
    "exec_result": 1
  },
  {
    "idx": 659,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT p.Name FROM \"poker_player\" pp JOIN \"people\" p ON pp.\"People_ID\" = p.\"People_ID\";",
    "exec_result": 1
  },
  {
    "idx": 660,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID",
    "pred": "SELECT p.\"Name\" FROM \"poker_player\" pp JOIN \"people\" p ON pp.\"People_ID\" = p.\"People_ID\";",
    "exec_result": 1
  },
  {
    "idx": 661,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT p.\"Name\" FROM \"poker_player\" pp JOIN \"people\" p ON pp.\"People_ID\" = p.\"People_ID\" WHERE pp.\"Earnings\" > 300000;",
    "exec_result": 1
  },
  {
    "idx": 662,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000",
    "pred": "SELECT p.\"Name\" FROM \"poker_player\" p WHERE p.\"Earnings\" > 300000;",
    "exec_result": 0
  },
  {
    "idx": 663,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT p.Name, p.Poker_Player_ID FROM \"poker_player\" p ORDER BY p.Final_Table_Made ASC;",
    "exec_result": 0
  },
  {
    "idx": 664,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made",
    "pred": "SELECT p.\"Name\", COUNT(pp.\"Poker_Player_ID\") AS num_final_tables FROM \"poker_player\" pp JOIN \"people\" p ON pp.\"People_ID\" = p.\"People_ID\" GROUP BY p.\"Name\" ORDER BY num_final_tables ASC;",
    "exec_result": 0
  },
  {
    "idx": 665,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT p.\"Birth_Date\" FROM \"poker_player\" pp JOIN \"people\" p ON pp.\"People_ID\" = p.\"People_ID\" WHERE pp.\"Earnings\" = (SELECT MIN(e) FROM \"poker_player\");",
    "exec_result": 0
  },
  {
    "idx": 666,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
    "pred": "SELECT p.Name, p.\"Birth_Date\" FROM \"poker_player\" pp JOIN \"people\" p ON pp.\"People_ID\" = p.\"People_ID\" ORDER BY pp.\"Earnings\" ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 667,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT p.\"Money_Rank\" FROM \"poker_player\" p JOIN \"people\" pe ON p.\"People_ID\" = pe.\"People_ID\" ORDER BY pe.\"Height\" DESC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 668,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
    "pred": "SELECT p.\"Money_Rank\" FROM \"poker_player\" p JOIN \"people\" pe ON p.\"People_ID\" = pe.\"People_ID\" ORDER BY pe.\"Height\" DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 669,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(p.Earnings) FROM \"poker_player\" p JOIN \"people\" pe ON p.\"People_ID\" = pe.\"People_ID\" WHERE pe.Height > 200;",
    "exec_result": 1
  },
  {
    "idx": 670,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200",
    "pred": "SELECT AVG(p.Earnings) FROM \"poker_player\" p JOIN \"people\" p2 ON p.\"People_ID\" = p2.\"People_ID\" WHERE p2.\"Height\" > 200;",
    "exec_result": 1
  },
  {
    "idx": 671,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT p.name, p.\"Poker_Player_ID\", SUM(p2.earnings) AS total_earnings FROM \"poker_player\" p2 JOIN \"people\" p ON p2.\"People_ID\" = p.\"People_ID\" GROUP BY p.name, p.\"Poker_Player_ID\" ORDER BY total_earnings DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 672,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC",
    "pred": "SELECT p.Name, p.\"Poker_Player_ID\", SUM(p.Earnings) AS Total_Earnings FROM \"poker_player\" p GROUP BY p.Name, p.\"Poker_Player_ID\" ORDER BY Total_Earnings DESC;",
    "exec_result": 0
  },
  {
    "idx": 673,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT p.Nationality, COUNT(p.Nationality) AS number_of_people FROM people p GROUP BY p.Nationality ORDER BY number_of_people DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 674,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",
    "pred": "SELECT p.Nationality, COUNT(*) AS COUNT FROM people p GROUP BY p.Nationality ORDER BY COUNT DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 675,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT p.Nationality, COUNT(*) AS frequency FROM people p GROUP BY p.Nationality ORDER BY frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 676,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT p.Nationality, COUNT(p.Nationality) AS Count FROM people p GROUP BY p.Nationality ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 677,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT p1.\"Nationality\" FROM \"poker_player\" p1 JOIN \"people\" p2 ON p1.\"People_ID\" = p2.\"People_ID\" GROUP BY p1.\"Nationality\" HAVING COUNT(DISTINCT p1.\"Poker_Player_ID\") > 1;",
    "exec_result": 0
  },
  {
    "idx": 678,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT p.Nationality FROM people p GROUP BY p.Nationality HAVING COUNT(p.Nationality) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 679,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT p.Name, p.\"Birth_Date\" FROM \"people\" p ORDER BY p.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 680,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",
    "pred": "SELECT p.Name, p.Birth_Date FROM people p ORDER BY p.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 681,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT p.\"Name\" FROM \"people\" p WHERE p.\"Nationality\"!= 'Russia';",
    "exec_result": 1
  },
  {
    "idx": 682,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE Nationality != \"Russia\"",
    "pred": "SELECT p.Name FROM people p WHERE p.Nationality!= 'Russia';",
    "exec_result": 1
  },
  {
    "idx": 683,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT p.Name FROM people p WHERE p.\"People_ID\" NOT IN (SELECT pp.\"People_ID\" FROM \"poker_player\" pp);",
    "exec_result": 1
  },
  {
    "idx": 684,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
    "pred": "SELECT p.Name FROM people p WHERE p.Name NOT IN (SELECT pp.Name FROM poker_player pp);",
    "exec_result": 0
  },
  {
    "idx": 685,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT p.Nationality) FROM people p;",
    "exec_result": 1
  },
  {
    "idx": 686,
    "db_id": "poker_player",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM people",
    "pred": "SELECT COUNT(DISTINCT p.Nationality) FROM people p;",
    "exec_result": 1
  },
  {
    "idx": 687,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM area_code_state",
    "pred": "SELECT COUNT(DISTINCT state) FROM AREA_CODE_STATE;",
    "exec_result": 1
  },
  {
    "idx": 688,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC",
    "pred": "SELECT c.contestant_number, c.contestant_name FROM CONTESTANTS c ORDER BY c.contestant_name DESC;",
    "exec_result": 1
  },
  {
    "idx": 689,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT vote_id ,  phone_number ,  state FROM votes",
    "pred": "SELECT v.vote_id, v.phone_number, v.state FROM VOTES v;",
    "exec_result": 1
  },
  {
    "idx": 690,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(area_code) ,  min(area_code) FROM area_code_state",
    "pred": "SELECT MAX(area_code), MIN(area_code) FROM AREA_CODE_STATE;",
    "exec_result": 1
  },
  {
    "idx": 691,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT max(created) FROM votes WHERE state  =  'CA'",
    "pred": "SELECT MAX(v.created) AS last_vote_date FROM VOTES v WHERE v.state = 'CA';",
    "exec_result": 1
  },
  {
    "idx": 692,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",
    "pred": "SELECT c.contestant_name FROM CONTESTANTS c WHERE c.contestant_name!= 'Jessie Alloway';",
    "exec_result": 1
  },
  {
    "idx": 693,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT DISTINCT state ,  created FROM votes",
    "pred": "SELECT DISTINCT v.state, v.created FROM VOTES v ORDER BY v.state, v.created NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 694,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",
    "pred": "SELECT c.contestant_number, c.contestant_name FROM VOTES v JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number GROUP BY c.contestant_number, c.contestant_name HAVING COUNT(v.vote_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 695,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT v.contestant_number, c.contestant_name, COUNT(v.vote_id) AS vote_count FROM VOTES v JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number GROUP BY v.contestant_number, c.contestant_name ORDER BY vote_count ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 696,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'",
    "pred": "SELECT SUM(COUNT(vote_id)) AS total_votes FROM VOTES v WHERE v.state IN ('NY', 'CA');",
    "exec_result": 0
  },
  {
    "idx": 697,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
    "pred": "SELECT COUNT(*) AS contestants_without_votes FROM CONTESTANTS c WHERE c.contestant_number NOT IN (SELECT DISTINCT v.contestant_number FROM VOTES v);",
    "exec_result": 1
  },
  {
    "idx": 698,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT ac.state, COUNT(v.phone_number) AS total_votes FROM VOTES v JOIN AREA_CODE_STATE ac ON v.state = ac.state GROUP BY ac.state ORDER BY total_votes DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 699,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",
    "pred": "SELECT v.created, v.state, v.phone_number FROM VOTES v JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name ilike '%Tabatha Gehling%';",
    "exec_result": 0
  },
  {
    "idx": 700,
    "db_id": "voter_1",
    "question": "",
    "gold": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'",
    "pred": "SELECT v.state FROM VOTES v JOIN CONTESTANTS c1 ON v.contestant_number = c1.contestant_number JOIN CONTESTANTS c2 ON v.contestant_number = c2.contestant_number WHERE c1.contestant_name = 'Tabatha Gehling' AND c2.contestant_name = 'Kelly Clauss' GROUP BY v.state;",
    "exec_result": 0
  },
  {
    "idx": 701,
    "db_id": "voter_1",
    "question": "",
    "gold": "select contestant_name from contestants where contestant_name like \"%al%\"",
    "pred": "SELECT c.contestant_name FROM CONTESTANTS c WHERE c.contestant_name ilike '%Al%';",
    "exec_result": 0
  },
  {
    "idx": 702,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT c.Name FROM country c WHERE c.IndepYear > 1950 ORDER BY c.Name NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 703,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE IndepYear  >  1950",
    "pred": "SELECT c.Name FROM country c WHERE c.IndepYear > 1950;",
    "exec_result": 1
  },
  {
    "idx": 704,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(DISTINCT c.Code) FROM country c WHERE c.GovernmentForm ilike '%republic%';",
    "exec_result": 0
  },
  {
    "idx": 705,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"",
    "pred": "SELECT COUNT(*) FROM country c WHERE c.GovernmentForm ilike '%republic%';",
    "exec_result": 0
  },
  {
    "idx": 706,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(c.SurfaceArea) AS total_surface_area FROM country c WHERE c.Region = 'Caribbean';",
    "exec_result": 1
  },
  {
    "idx": 707,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"",
    "pred": "SELECT SUM(c.SurfaceArea) AS total_surface_area FROM country c WHERE c.Region = 'Caribbean';",
    "exec_result": 1
  },
  {
    "idx": 708,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT c.Continent FROM country c WHERE c.Code = 'AIA';",
    "exec_result": 1
  },
  {
    "idx": 709,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"",
    "pred": "SELECT c.Continent FROM country c JOIN city ci ON c.Code = ci.CountryCode WHERE ci.Name = 'Anguilla';",
    "exec_result": 0
  },
  {
    "idx": 710,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT c.Region FROM city c WHERE c.Name = 'Kabul';",
    "exec_result": 0
  },
  {
    "idx": 711,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"",
    "pred": "SELECT c.Name, c.Region FROM city c WHERE c.Name = 'Kabul';",
    "exec_result": 0
  },
  {
    "idx": 712,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT cl.Language, MAX(cl.Percentage) AS Max_Percentage FROM countrylanguage cl WHERE cl.CountryCode = 'ABC' GROUP BY cl.Language ORDER BY Max_Percentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 713,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
    "pred": "SELECT cl.Percentage, cl.Language FROM countrylanguage cl WHERE cl.CountryCode = (SELECT c.Code FROM country c WHERE c.Name = 'Aruba') ORDER BY cl.Percentage DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT c.population, c.life_expectancy FROM country c WHERE c.name = 'Brazil';",
    "exec_result": 0
  },
  {
    "idx": 715,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"",
    "pred": "SELECT c.Name, c.Population, c.LifeExpectancy FROM country c WHERE c.Code = 'BRA';",
    "exec_result": 0
  },
  {
    "idx": 716,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT c.Region, c.Population FROM country c WHERE c.Code = 'AGO';",
    "exec_result": 1
  },
  {
    "idx": 717,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"",
    "pred": "SELECT c.Region, c.Population FROM country c WHERE c.Code = 'AGO';",
    "exec_result": 1
  },
  {
    "idx": 718,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(c.LifeExpectancy) AS average_life_expectancy FROM country c WHERE c.Region = 'Central Africa';",
    "exec_result": 1
  },
  {
    "idx": 719,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"",
    "pred": "SELECT AVG(c.LifeExpectancy) FROM country c WHERE c.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 720,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT c.Name FROM country c WHERE c.Continent = 'Asia' AND c.LifeExpectancy = (SELECT MIN(c2.LifeExpectancy) FROM country c2 WHERE c2.Continent = 'Asia');",
    "exec_result": 1
  },
  {
    "idx": 721,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1",
    "pred": "SELECT c.Name FROM country c WHERE c.Continent = 'Asia' AND c.LifeExpectancy = (SELECT MIN(c2.LifeExpectancy) FROM country c2 WHERE c2.Continent = 'Asia');",
    "exec_result": 1
  },
  {
    "idx": 722,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT SUM(c.Population) AS total_population, MAX(c.GNP) AS max_gnp FROM country c WHERE c.Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 723,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"",
    "pred": "SELECT SUM(c.Population) AS total_population, MAX(c.GNP) AS max_gnp FROM country c WHERE c.Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 724,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(c.LifeExpectancy) AS average_life_expectancy FROM country c WHERE c.GovernmentForm = 'Republic' AND c.Continent = 'Africa';",
    "exec_result": 1
  },
  {
    "idx": 725,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"",
    "pred": "SELECT AVG(c.LifeExpectancy) AS average_life_expectancy FROM country c WHERE c.GovernmentForm = 'Republic' AND c.Continent = 'Africa';",
    "exec_result": 1
  },
  {
    "idx": 726,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(c.SurfaceArea) AS total_surface_area FROM country c WHERE c.Continent IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 727,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"",
    "pred": "SELECT SUM(c.SurfaceArea) AS total_surface_area FROM country c WHERE c.Continent IN ('Asia', 'Europe');",
    "exec_result": 1
  },
  {
    "idx": 728,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT SUM(c.Population) AS total_population FROM city c WHERE LOWER(c.District) = 'gelderland';",
    "exec_result": 1
  },
  {
    "idx": 729,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"",
    "pred": "SELECT SUM(c.population) AS total_population FROM city c WHERE LOWER(c.district) = 'gelderland';",
    "exec_result": 1
  },
  {
    "idx": 730,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(c.GNP), SUM(c.Population) AS total_population FROM country c WHERE c.GovernmentForm LIKE '%US territory%' GROUP BY c.GovernmentForm;",
    "exec_result": 1
  },
  {
    "idx": 731,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"",
    "pred": "SELECT AVG(c.GNP), SUM(c.Population) AS total_population FROM country c WHERE c.Code2 = 'US';",
    "exec_result": 0
  },
  {
    "idx": 732,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT cl.Language) FROM countrylanguage cl;",
    "exec_result": 1
  },
  {
    "idx": 733,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage",
    "pred": "SELECT COUNT(DISTINCT cl.Language) FROM countrylanguage cl;",
    "exec_result": 1
  },
  {
    "idx": 734,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT g.GovernmentForm) FROM country c JOIN city ci ON c.Code = ci.CountryCode JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 735,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"",
    "pred": "SELECT COUNT(DISTINCT c.GovernmentForm) FROM country c WHERE c.Continent = 'Asia';",
    "exec_result": 0
  },
  {
    "idx": 736,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT SUM(cl.Percentage) AS total_percentage FROM countrylanguage cl WHERE cl.CountryCode = 'ABC';",
    "exec_result": 0
  },
  {
    "idx": 737,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"",
    "pred": "SELECT COUNT(DISTINCT cl.Language) AS NumberOfLanguages FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Code = 'ABW';",
    "exec_result": 1
  },
  {
    "idx": 738,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*) FROM countrylanguage cl WHERE cl.countrycode = 'AFG' AND cl.isofficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 739,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(*) AS num_of_languages FROM countrylanguage WHERE countrycode = 'AFG' AND iso = 'T';",
    "exec_result": 0
  },
  {
    "idx": 740,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name, COUNT(cl.Language) AS num_languages FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name ORDER BY num_languages DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 741,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name, COUNT(cl.Language) AS language_count FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name ORDER BY language_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 742,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Continent, COUNT(cl.Language) AS LanguageCount FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Continent ORDER BY LanguageCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 743,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "WITH LanguageCount AS (SELECT c.Continent, COUNT(cl.Language) AS LanguageCount FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Continent) SELECT Continent FROM LanguageCount ORDER BY LanguageCount DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 744,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(*) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE LOWER(cl.language) = 'english' AND LOWER(cl.language) = 'dutch';",
    "exec_result": 0
  },
  {
    "idx": 745,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")",
    "pred": "SELECT COUNT(DISTINCT c.Code) FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE LOWER(cl.Language) = 'english' AND LOWER(cl.Language) = 'dutch';",
    "exec_result": 0
  },
  {
    "idx": 746,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'French') GROUP BY c.Name;",
    "exec_result": 0
  },
  {
    "idx": 747,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'French');",
    "exec_result": 0
  },
  {
    "idx": 748,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French' AND cl1.IsOfficial = 'T' AND cl2.IsOfficial = 'T' GROUP BY c.Name;",
    "exec_result": 1
  },
  {
    "idx": 749,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'English' AND cl.IsOfficial = 'T' AND cl.Language IN (SELECT cl2.Language FROM countrylanguage cl2 WHERE cl2.Language = 'French' AND cl2.IsOfficial = 'T');",
    "exec_result": 0
  },
  {
    "idx": 750,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(DISTINCT c.Continent) FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Chinese';",
    "exec_result": 1
  },
  {
    "idx": 751,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"",
    "pred": "SELECT COUNT(DISTINCT c.Continent) FROM country c WHERE c.Name LIKE '%Chinese%' AND c.Continent IN ('Asia', 'Africa', 'Europe', 'North America', 'South America', 'Oceania', 'Antarctica');",
    "exec_result": 0
  },
  {
    "idx": 752,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT DISTINCT c.Region FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'Dutch') ORDER BY c.Region NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 753,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"",
    "pred": "SELECT c.Region, cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('Dutch', 'English');",
    "exec_result": 0
  },
  {
    "idx": 754,
    "db_id": "world_1",
    "question": "",
    "gold": "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language IN ('English', 'Dutch');",
    "exec_result": 0
  },
  {
    "idx": 755,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"",
    "pred": "SELECT c.Name, cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial = 'T' AND (cl.Language = 'English' OR cl.Language = 'Dutch');",
    "exec_result": 0
  },
  {
    "idx": 756,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT cl.Language, SUM(cl.Percentage) AS TotalPercentage FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Continent = 'Asia' GROUP BY cl.Language ORDER BY TotalPercentage DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 757,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
    "pred": "SELECT cl.Language, COUNT(cl.CountryCode) AS NumberOfCountries FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.Continent = 'Asia' GROUP BY cl.Language ORDER BY NumberOfCountries DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 758,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT cl.Language FROM countrylanguage cl JOIN country c ON cl.CountryCode = c.Code WHERE c.GovernmentForm ='republic' GROUP BY cl.Language HAVING COUNT(cl.CountryCode) = 1;",
    "exec_result": 0
  },
  {
    "idx": 759,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1",
    "pred": "SELECT cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.GovernmentForm ='republic' GROUP BY cl.Language HAVING COUNT(c.Code) = 1;",
    "exec_result": 0
  },
  {
    "idx": 760,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE cl.Language = 'English' ORDER BY c.Population DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 761,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population FROM city c JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE cl.Language = 'English' ORDER BY c.Population DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 762,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, c.LifeExpectancy FROM country c WHERE c.Continent = 'Asia' ORDER BY c.SurfaceArea DESC NULLS LAST LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 763,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, c.LifeExpectancy FROM country c WHERE c.Continent = 'Asia' ORDER BY c.SurfaceArea DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 764,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(c.LifeExpectancy) AS average_life_expectancy FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial!= 'T';",
    "exec_result": 0
  },
  {
    "idx": 765,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")",
    "pred": "SELECT AVG(c.LifeExpectancy) AS average_life_expectancy FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial!= 'T';",
    "exec_result": 0
  },
  {
    "idx": 766,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT SUM(c.population) AS total_population FROM city c JOIN country l ON c.countrycode = l.code JOIN countrylanguage cl ON l.code = cl.countrycode WHERE cl.language!= 'English';",
    "exec_result": 0
  },
  {
    "idx": 767,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")",
    "pred": "SELECT SUM(c.Population) AS total_population FROM city c JOIN country cl ON c.CountryCode = cl.Code LEFT JOIN countrylanguage cl2 ON cl.Code = cl2.CountryCode WHERE cl2.Language!= 'English' AND cl2.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.HeadOfState = 'Beatrix';",
    "exec_result": 0
  },
  {
    "idx": 769,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.HeadOfState ilike '%Beatrix%' ORDER BY cl.Language NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 770,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT cl.Language) AS total_official_languages FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.IndepYear < 1930 AND cl.IsOfficial = 'T';",
    "exec_result": 1
  },
  {
    "idx": 771,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"",
    "pred": "SELECT COUNT(DISTINCT cl.Language) FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE c.IndepYear < 1930;",
    "exec_result": 0
  },
  {
    "idx": 772,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT c.Name FROM country c WHERE c.SurfaceArea > (SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe');",
    "exec_result": 0
  },
  {
    "idx": 773,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")",
    "pred": "SELECT c.Name FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial = 'T' AND c.SurfaceArea > (SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe') ORDER BY c.Name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 774,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT c.Name FROM country c JOIN country c2 ON c.Population < c2.Population AND c.Continent = 'Africa' AND c2.Continent = 'Asia' ORDER BY c.Name;",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")",
    "pred": "SELECT c.Name FROM country c JOIN city ci ON c.Code = ci.CountryCode WHERE c.Continent = 'Asia' AND ci.Population > (SELECT MIN(Population) FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Africa')) ORDER BY c.Name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 776,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT c.Name FROM country c JOIN city ci ON c.Code = ci.CountryCode WHERE c.Continent = 'Asia' AND c.Population > (SELECT MAX(Population) FROM country c2 WHERE c2.Continent = 'Africa');",
    "exec_result": 0
  },
  {
    "idx": 777,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")",
    "pred": "SELECT c.Name, c.Population FROM country c JOIN city d ON c.Code = d.CountryCode WHERE c.Continent = 'Asia' AND c.Population > (SELECT MAX(Population) FROM country c2 JOIN city d2 ON c2.Code = d2.CountryCode WHERE c2.Continent = 'Africa');",
    "exec_result": 0
  },
  {
    "idx": 778,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT c.Code FROM country c LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language!= 'English' AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 779,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT c.Code FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language!= 'English' AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 780,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT DISTINCT cl.CountryCode FROM countrylanguage cl WHERE cl.Language!= 'English';",
    "exec_result": 1
  },
  {
    "idx": 781,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"",
    "pred": "SELECT c.Code FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language!= 'English' AND cl.IsOfficial = 'T' GROUP BY c.Code ORDER BY c.Code NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 782,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT c.Code FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language!= 'English' AND c.GovernmentForm!= 'Republic';",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"",
    "pred": "SELECT c.Code FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language!= 'English' AND c.GovernmentForm!= 'Republic' ORDER BY c.Code NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 784,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT c.Name FROM city c JOIN country co ON c.CountryCode = co.Code JOIN countrylanguage cl ON co.Code = cl.CountryCode WHERE cl.IsOfficial!= 'T' AND cl.Language!= 'English' AND co.Continent = 'Europe';",
    "exec_result": 0
  },
  {
    "idx": 785,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')",
    "pred": "SELECT c.Name FROM city c JOIN country cl ON c.CountryCode = cl.Code WHERE cl.Continent = 'Europe' AND cl.Code NOT IN (SELECT cl.CountryCode FROM countrylanguage cl WHERE LOWER(cl.Language) = 'english');",
    "exec_result": 0
  },
  {
    "idx": 786,
    "db_id": "world_1",
    "question": "",
    "gold": "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"",
    "pred": "SELECT DISTINCT c.Name FROM city c JOIN country co ON c.CountryCode = co.Code JOIN countrylanguage cl ON c.CountryCode = cl.CountryCode WHERE LOWER(cl.Language) = 'chinese' AND LOWER(co.Continent) = 'asia';",
    "exec_result": 0
  },
  {
    "idx": 787,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"",
    "pred": "SELECT DISTINCT c.Name FROM city c JOIN country cl ON c.CountryCode = cl.Code JOIN countrylanguage cl2 ON c.CountryCode = cl2.CountryCode WHERE cl.Continent = 'Asia' AND cl2.Language = 'Chinese';",
    "exec_result": 0
  },
  {
    "idx": 788,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT c.Name, c.IndepYear, c.SurfaceArea FROM country c ORDER BY c.Population ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 789,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1",
    "pred": "SELECT c.Name, c.IndepYear, c.SurfaceArea FROM country c WHERE c.Population = (SELECT MIN(c2.Population) FROM country c2);",
    "exec_result": 0
  },
  {
    "idx": 790,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.HeadOfState, MAX(c.SurfaceArea) AS MaxSurfaceArea FROM country c GROUP BY c.Name, c.HeadOfState ORDER BY MaxSurfaceArea DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 791,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Population, c.HeadOfState FROM country c ORDER BY c.SurfaceArea DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 792,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT c.Name, COUNT(cl.Language) AS num_languages FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name HAVING COUNT(cl.Language) >= 3 ORDER BY num_languages DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 793,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",
    "pred": "SELECT c.Name, COUNT(cl.Language) AS num_languages FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name HAVING COUNT(cl.Language) > 2 ORDER BY num_languages DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 794,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT c.District, COUNT(c.ID) AS number_of_cities FROM city c WHERE c.Population > (SELECT AVG(c2.Population) FROM city c2) GROUP BY c.District ORDER BY number_of_cities DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 795,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
    "pred": "SELECT c.District, COUNT(*) AS number_of_cities FROM city c WHERE c.Population > (SELECT AVG(c2.Population) FROM city c2) GROUP BY c.District ORDER BY number_of_cities DESC;",
    "exec_result": 1
  },
  {
    "idx": 796,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT g.GovernmentForm, AVG(c.LifeExpectancy) AS average_life_expectancy, SUM(c.Population) AS total_population FROM country c WHERE c.LifeExpectancy > 72 GROUP BY g.GovernmentForm HAVING AVG(c.LifeExpectancy) > 72 ORDER BY total_population DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 797,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72",
    "pred": "SELECT c.GovernmentForm, SUM(c.Population) AS total_population FROM country c WHERE c.LifeExpectancy > 72 GROUP BY c.GovernmentForm ORDER BY total_population DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 798,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT c.Continent, AVG(clife.LifeExpectancy) AS avg_life_expectancy, SUM(c.Population) AS total_population FROM country c JOIN countrylanguage clife ON c.Code = clife.CountryCode WHERE clife.LifeExpectancy < 72 GROUP BY c.Continent HAVING AVG(clife.LifeExpectancy) < 72 ORDER BY avg_life_expectancy DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 799,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72",
    "pred": "SELECT c.Continent, SUM(c.Population) AS total_population, AVG(c.LifeExpectancy) AS average_life_expectancy FROM country c WHERE c.LifeExpectancy < 72 GROUP BY c.Continent HAVING AVG(c.LifeExpectancy) < 72 ORDER BY total_population DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 800,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT c.Name, c.SurfaceArea FROM country c ORDER BY c.SurfaceArea DESC LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 801,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",
    "pred": "SELECT c.Name, c.SurfaceArea FROM country c ORDER BY c.SurfaceArea DESC NULLS LAST LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 802,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT c.Name FROM country c ORDER BY c.Population DESC LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 803,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3",
    "pred": "SELECT c.Name, c.Population FROM country c ORDER BY c.Population DESC NULLS LAST LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 804,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT c.Name FROM country c ORDER BY c.Population ASC LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 805,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3",
    "pred": "SELECT c.Name, c.Population FROM country c ORDER BY c.Population ASC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 806,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(DISTINCT c.Code) FROM country c WHERE c.Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 807,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"",
    "pred": "SELECT COUNT(*) AS number_of_countries FROM country WHERE Continent = 'Asia';",
    "exec_result": 1
  },
  {
    "idx": 808,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT c.Name FROM country c WHERE c.Continent = 'Europe' AND c.Population = 80000;",
    "exec_result": 1
  },
  {
    "idx": 809,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"",
    "pred": "SELECT c.Name FROM country c WHERE c.Population = 80000 AND c.Continent = 'Europe';",
    "exec_result": 1
  },
  {
    "idx": 810,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT SUM(c.population) AS total_population, AVG(c.SurfaceArea) AS average_area FROM country c WHERE c.Continent = 'North America' AND c.SurfaceArea > 3000;",
    "exec_result": 0
  },
  {
    "idx": 811,
    "db_id": "world_1",
    "question": "",
    "gold": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000",
    "pred": "SELECT SUM(c.Population), AVG(c.SurfaceArea) AS average_surface_area FROM country c WHERE c.Continent = 'North America' AND c.SurfaceArea > 3000;",
    "exec_result": 0
  },
  {
    "idx": 812,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000",
    "pred": "SELECT c.Name FROM city c WHERE c.Population BETWEEN 160000 AND 900000;",
    "exec_result": 1
  },
  {
    "idx": 813,
    "db_id": "world_1",
    "question": "",
    "gold": "select name from city where population between 160000 and 900000",
    "pred": "SELECT c.Name FROM city c WHERE c.Population BETWEEN 160000 AND 900000 ORDER BY c.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 814,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT cl.Language, COUNT(cl.CountryCode) AS Number_of_Countries FROM countrylanguage cl GROUP BY cl.Language ORDER BY Number_of_Countries DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 815,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.Language, COUNT(c.Language) AS Count FROM countrylanguage c GROUP BY c.Language ORDER BY c.Language LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 816,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT c.Name, cl.Language, MAX(cl.Percentage) AS Max_Percentage FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name, cl.Language ORDER BY c.Name, Max_Percentage DESC;",
    "exec_result": 0
  },
  {
    "idx": 817,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode",
    "pred": "SELECT c.Code, MAX(cl.Percentage) AS Max_Percentage, cl.Language FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code, cl.Language ORDER BY Max_Percentage DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(DISTINCT c.Code) AS number_of_countries FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Spanish' AND cl.Percentage = (SELECT MAX(cl2.Percentage) FROM countrylanguage cl2 WHERE cl2.Language = 'Spanish');",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT COUNT(DISTINCT c.Code) FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE LOWER(cl.Language) ='spanish' AND cl.IsOfficial = 'T';",
    "exec_result": 0
  },
  {
    "idx": 820,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT c.Code, cl.Percentage FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Spanish' ORDER BY cl.Percentage DESC;",
    "exec_result": 1
  },
  {
    "idx": 821,
    "db_id": "world_1",
    "question": "",
    "gold": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode",
    "pred": "SELECT c.Code FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language = 'Spanish' AND cl.Percentage = (SELECT MAX(cl2.Percentage) FROM countrylanguage cl2 WHERE cl2.Language = 'Spanish');",
    "exec_result": 0
  },
  {
    "idx": 822,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(*) AS conductor_count FROM \"conductor\";",
    "exec_result": 1
  },
  {
    "idx": 823,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(*) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT c.Conductor_ID) FROM conductor c;",
    "exec_result": 1
  },
  {
    "idx": 824,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT c.Name, c.Age FROM conductor c ORDER BY c.Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 825,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Age ASC",
    "pred": "SELECT c.Name, c.Age FROM conductor c ORDER BY c.Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 826,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT c.Name FROM conductor c WHERE c.Nationality!= 'USA';",
    "exec_result": 1
  },
  {
    "idx": 827,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor WHERE Nationality != 'USA'",
    "pred": "SELECT c.Name FROM conductor c WHERE c.Nationality!= 'USA';",
    "exec_result": 1
  },
  {
    "idx": 828,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT o.Record_Company, o.Year_of_Founded FROM orchestra o ORDER BY o.Year_of_Founded DESC;",
    "exec_result": 0
  },
  {
    "idx": 829,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
    "pred": "SELECT o.Record_Company, o.Year_of_Founded FROM orchestra o ORDER BY o.Year_of_Founded DESC;",
    "exec_result": 0
  },
  {
    "idx": 830,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(s.Attendance) FROM show s;",
    "exec_result": 1
  },
  {
    "idx": 831,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT avg(Attendance) FROM SHOW",
    "pred": "SELECT AVG(s.Attendance) AS average_attendance FROM show s;",
    "exec_result": 1
  },
  {
    "idx": 832,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MAX(CAST(p.Share AS FLOAT), MIN(CAST(p.Share AS FLOAT)) FROM performance p WHERE p.Type!= 'Live final';",
    "exec_result": 0
  },
  {
    "idx": 833,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"",
    "pred": "SELECT MAX(p.Share) AS max_share, MIN(p.Share) AS min_share FROM performance p WHERE p.Type!= 'Live final';",
    "exec_result": 1
  },
  {
    "idx": 834,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT c.Nationality) FROM conductor c;",
    "exec_result": 1
  },
  {
    "idx": 835,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT count(DISTINCT Nationality) FROM conductor",
    "pred": "SELECT COUNT(DISTINCT c.Nationality) FROM conductor c;",
    "exec_result": 1
  },
  {
    "idx": 836,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT c.Name, c.Age, c.Nationality, c.Year_of_Work FROM conductor c ORDER BY c.Year_of_Work DESC;",
    "exec_result": 0
  },
  {
    "idx": 837,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC",
    "pred": "SELECT c.Name, COUNT(o.Orchestra_ID) AS years_of_work FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY years_of_work DESC;",
    "exec_result": 0
  },
  {
    "idx": 838,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "SELECT c.Name, MAX(c.Year_of_Work) AS max_year_of_work FROM conductor c GROUP BY c.Name ORDER BY max_year_of_work DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 839,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1",
    "pred": "WITH conductor_years AS (SELECT c.Conductor_ID, MAX(o.Year_of_Founded) AS latest_year FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Conductor_ID) SELECT c.Name, cy.latest_year - c.Age AS years_of_experience FROM conductor_years cy JOIN conductor c ON cy.Conductor_ID = c.Conductor_ID ORDER BY years_of_experience DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 840,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT c.Name, o.Orchestra FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID ORDER BY c.Name;",
    "exec_result": 1
  },
  {
    "idx": 841,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID",
    "pred": "SELECT c.Name, o.Orchestra FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID ORDER BY c.Name;",
    "exec_result": 1
  },
  {
    "idx": 842,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT c.\"Name\" FROM \"conductor\" c JOIN \"orchestra\" o ON c.\"Conductor_ID\" = o.\"Conductor_ID\" GROUP BY c.\"Name\" HAVING COUNT(o.\"Orchestra_ID\") > 1 ORDER BY c.\"Name\" NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 843,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 844,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name, COUNT(o.Orchestra_ID) AS Number_of_Orchestras FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY Number_of_Orchestras DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 845,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.Name, COUNT(o.Orchestra_ID) AS NumberOfOrchestrasConducted FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY NumberOfOrchestrasConducted DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Year_of_Founded > 2008;",
    "exec_result": 1
  },
  {
    "idx": 847,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008",
    "pred": "SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID WHERE o.Year_of_Founded > 2008 ORDER BY c.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 848,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT o.Record_Company, COUNT(o.Orchestra_ID) AS number_of_orchestras FROM orchestra o GROUP BY o.Record_Company ORDER BY number_of_orchestras DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 849,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",
    "pred": "SELECT r.Record_Company, COUNT(o.Orchestra_ID) AS number_of_orchestras FROM orchestra o JOIN conductor c ON o.Conductor_ID = c.Conductor_ID JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID GROUP BY r.Record_Company;",
    "exec_result": 0
  },
  {
    "idx": 850,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT m.Major_Record_Format, COUNT(m.Major_Record_Format) AS count FROM orchestra m GROUP BY m.Major_Record_Format ORDER BY count ASC;",
    "exec_result": 0
  },
  {
    "idx": 851,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC",
    "pred": "SELECT o.Major_Record_Format, COUNT(*) AS COUNT FROM orchestra o GROUP BY o.Major_Record_Format ORDER BY COUNT DESC;",
    "exec_result": 0
  },
  {
    "idx": 852,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT r.Record_Company, COUNT(r.Record_Company) AS Count FROM orchestra r GROUP BY r.Record_Company ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 853,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "WITH rc AS (SELECT o.Record_Company, COUNT(o.Orchestra_ID) AS COUNT FROM orchestra o GROUP BY o.Record_Company) SELECT rc.Record_Company, rc.COUNT FROM rc WHERE rc.COUNT = (SELECT MAX(COUNT) FROM rc);",
    "exec_result": 0
  },
  {
    "idx": 854,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT o.orchestra FROM orchestra o WHERE o.orchestra_ID NOT IN (SELECT p.orchestra_ID FROM performance p);",
    "exec_result": 1
  },
  {
    "idx": 855,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
    "pred": "SELECT o.Orchestra FROM orchestra o WHERE o.Orchestra_ID NOT IN (SELECT p.Orchestra_ID FROM performance p);",
    "exec_result": 1
  },
  {
    "idx": 856,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT DISTINCT oc.Record_Company FROM orchestra oc WHERE oc.Year_of_Founded < 2003 INTERSECT SELECT DISTINCT oc.Record_Company FROM orchestra oc WHERE oc.Year_of_Founded >= 2003;",
    "exec_result": 1
  },
  {
    "idx": 857,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003",
    "pred": "SELECT DISTINCT o.Record_Company FROM orchestra o WHERE o.Year_of_Founded < 2003 AND o.Record_Company IN (SELECT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003);",
    "exec_result": 1
  },
  {
    "idx": 858,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(DISTINCT o.Orchestra_ID) FROM orchestra o WHERE LOWER(o.Major_Record_Format) IN ('cd', 'dvd');",
    "exec_result": 1
  },
  {
    "idx": 859,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"",
    "pred": "SELECT COUNT(DISTINCT o.Orchestra_ID) FROM orchestra o WHERE o.Major_Record_Format ilike '%CD%' OR o.Major_Record_Format ilike '%DVD%';",
    "exec_result": 0
  },
  {
    "idx": 860,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT o.Year_of_Founded FROM orchestra o JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID GROUP BY o.Year_of_Founded, o.Orchestra_ID HAVING COUNT(p.Performance_ID) > 1 ORDER BY o.Year_of_Founded NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 861,
    "db_id": "orchestra",
    "question": "",
    "gold": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT o.Year_of_Founded, COUNT(p.Performance_ID) AS number_of_performances FROM orchestra o JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID GROUP BY o.Year_of_Founded HAVING COUNT(p.Performance_ID) > 1 ORDER BY o.Year_of_Founded ASC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 862,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(DISTINCT h.ID) FROM Highschooler h;",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler",
    "pred": "SELECT COUNT(*) FROM Highschooler;",
    "exec_result": 1
  },
  {
    "idx": 864,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT h.name, h.grade FROM Highschooler h ORDER BY h.name NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 865,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name ,  grade FROM Highschooler",
    "pred": "SELECT h.name, h.grade FROM Highschooler h ORDER BY h.name NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 866,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT h.grade FROM Highschooler h ORDER BY h.grade ASC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 867,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler",
    "pred": "SELECT h.ID, h.name, h.grade FROM Highschooler h ORDER BY h.grade NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 868,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT h.grade FROM Highschooler h WHERE h.name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 869,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT h.grade FROM Highschooler h WHERE h.name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 870,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT h.name FROM Highschooler h WHERE h.grade = 10;",
    "exec_result": 1
  },
  {
    "idx": 871,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler WHERE grade  =  10",
    "pred": "SELECT h.name, h.grade FROM Highschooler h WHERE h.grade = 10;",
    "exec_result": 0
  },
  {
    "idx": 872,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT h.ID FROM Highschooler h WHERE h.name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 873,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"",
    "pred": "SELECT h.id FROM Highschooler h WHERE h.name = 'Kyle';",
    "exec_result": 1
  },
  {
    "idx": 874,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(DISTINCT h.id) FROM Highschooler h WHERE h.grade IN (9, 10);",
    "exec_result": 1
  },
  {
    "idx": 875,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10",
    "pred": "SELECT COUNT(*) FROM Highschooler h WHERE h.grade IN (9, 10);",
    "exec_result": 1
  },
  {
    "idx": 876,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT h.grade, COUNT(*) AS number_of_students FROM Highschooler h GROUP BY h.grade ORDER BY h.grade NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 877,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",
    "pred": "SELECT h.grade, COUNT(h.id) FROM Highschooler h GROUP BY h.grade ORDER BY h.grade NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 878,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.grade, COUNT(*) AS number_of_students FROM Highschooler h GROUP BY h.grade ORDER BY number_of_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 879,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.grade, COUNT(h.id) AS total_students FROM Highschooler h GROUP BY h.grade ORDER BY total_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 880,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT g.grade, COUNT(h.id) AS number_of_students FROM Highschooler h JOIN Friend f ON h.id = f.student_id GROUP BY g.grade HAVING COUNT(h.id) >= 4 ORDER BY number_of_students DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 881,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4",
    "pred": "SELECT DISTINCT h.grade FROM Highschooler h GROUP BY h.grade HAVING COUNT(h.ID) >= 4;",
    "exec_result": 1
  },
  {
    "idx": 882,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT h.ID, COUNT(f.student_id) AS num_friends FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.ID ORDER BY num_friends DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 883,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",
    "pred": "SELECT h.name, COUNT(*) AS num_friends FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.name;",
    "exec_result": 0
  },
  {
    "idx": 884,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name, COUNT(f.student_id) AS num_friends FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.name ORDER BY num_friends DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 885,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name, COUNT(f.student_id) AS friend_count FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.name;",
    "exec_result": 0
  },
  {
    "idx": 886,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.name FROM Highschooler h JOIN (SELECT f.student_id, COUNT(f.student_id) AS friend_count FROM Friend f GROUP BY f.student_id ORDER BY friend_count DESC LIMIT 1) AS m ON h.ID = m.student_id;",
    "exec_result": 1
  },
  {
    "idx": 887,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.name, COUNT(f.student_id) AS friend_count FROM Highschooler h JOIN Friend f ON h.ID = f.student_id GROUP BY h.name ORDER BY friend_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 888,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT h.name FROM Highschooler h JOIN (SELECT f.student_id FROM Friend f GROUP BY f.student_id HAVING COUNT(f.friend_id) >= 3) f2 ON h.ID = f2.student_id ORDER BY h.name NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 889,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3",
    "pred": "SELECT h.name FROM Highschooler h JOIN (SELECT f.student_id FROM Friend f GROUP BY f.student_id HAVING COUNT(f.friend_id) >= 3) AS f ON h.ID = f.student_id;",
    "exec_result": 1
  },
  {
    "idx": 890,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE h.name ilike '%Kyle%' GROUP BY h.name;",
    "exec_result": 0
  },
  {
    "idx": 891,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT f.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE h.name = 'Kyle' UNION SELECT f.name FROM Highschooler h JOIN Friend f ON h.ID = f.friend_id WHERE h.name = 'Kyle';",
    "exec_result": 0
  },
  {
    "idx": 892,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(friend_id) AS number_of_friends FROM Friend f WHERE f.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');",
    "exec_result": 1
  },
  {
    "idx": 893,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) FROM Friend f WHERE f.student_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle');",
    "exec_result": 1
  },
  {
    "idx": 894,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT h.ID FROM Highschooler h WHERE h.ID NOT IN (SELECT f.student_id FROM Friend f UNION SELECT f.friend_id FROM Friend f);",
    "exec_result": 0
  },
  {
    "idx": 895,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
    "pred": "SELECT h.id FROM Highschooler h WHERE h.id NOT IN (SELECT f.student_id FROM Friend f UNION SELECT f.friend_id FROM Friend f);",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT h.name FROM Highschooler h WHERE NOT EXISTS (SELECT 1 FROM Friend f WHERE f.student_id = h.ID) OR NOT EXISTS (SELECT 1 FROM Friend f WHERE f.friend_id = h.ID);",
    "exec_result": 0
  },
  {
    "idx": 897,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
    "pred": "SELECT h.name FROM Highschooler h WHERE NOT EXISTS (SELECT 1 FROM Friend f WHERE f.student_id = h.ID) OR NOT EXISTS (SELECT 1 FROM Friend f WHERE f.friend_id = h.ID);",
    "exec_result": 0
  },
  {
    "idx": 898,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT DISTINCT h.id FROM Highschooler h JOIN Friend f ON h.id = f.student_id JOIN Likes l ON h.id = l.student_id WHERE h.id IN (SELECT f.friend_id FROM Friend f) AND h.id IN (SELECT l.liked_id FROM Likes l) ORDER BY h.id NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 899,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
    "pred": "SELECT DISTINCT h.ID FROM Highschooler h JOIN Friend f ON h.ID = f.student_id JOIN Likes l ON h.ID = l.student_id;",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT h.name FROM Highschooler h JOIN Friend f ON h.ID = f.student_id JOIN Likes l ON h.ID = l.student_id WHERE f.friend_id IN (SELECT student_id FROM Friend) AND h.ID IN (SELECT liked_id FROM Likes) GROUP BY h.name;",
    "exec_result": 0
  },
  {
    "idx": 901,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
    "pred": "SELECT h.name FROM Highschooler h WHERE EXISTS (SELECT 1 FROM Friend f WHERE f.student_id = h.ID) AND EXISTS (SELECT 1 FROM Likes l WHERE l.student_id = h.ID);",
    "exec_result": 0
  },
  {
    "idx": 902,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT l.student_id, COUNT(l.student_id) AS likes_count FROM Likes l GROUP BY l.student_id ORDER BY likes_count DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 903,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",
    "pred": "SELECT h.id, COUNT(l.student_id) AS num_likes FROM Highschooler h LEFT JOIN Likes l ON h.id = l.student_id GROUP BY h.id ORDER BY num_likes DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 904,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name, COUNT(*) AS num_likes FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.name;",
    "exec_result": 0
  },
  {
    "idx": 905,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",
    "pred": "SELECT h.name, COUNT(l.student_id) AS likes_count FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.name ORDER BY likes_count DESC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 906,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "WITH total_likes AS (SELECT h.name, COUNT(*) AS total_like FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.name) SELECT name, total_like FROM total_likes ORDER BY total_like DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 907,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT h.name, COUNT(l.student_id) AS num_likes FROM Highschooler h JOIN Likes l ON h.ID = l.student_id GROUP BY h.name ORDER BY num_likes DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 908,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN (SELECT l.student_id FROM Likes l GROUP BY l.student_id HAVING COUNT(l.liked_id) >= 2) AS t ON h.ID = t.student_id ORDER BY h.name;",
    "exec_result": 1
  },
  {
    "idx": 909,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(liked_id) >= 2) l ON h.ID = l.student_id;",
    "exec_result": 1
  },
  {
    "idx": 910,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN (SELECT f.student_id FROM Friend f GROUP BY f.student_id HAVING COUNT(f.student_id) >= 2) AS f2 ON h.ID = f2.student_id WHERE h.grade > 5;",
    "exec_result": 1
  },
  {
    "idx": 911,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2",
    "pred": "SELECT h.name FROM Highschooler h JOIN (SELECT f.student_id FROM Friend f GROUP BY f.student_id HAVING COUNT(f.friend_id) >= 2) AS f2 ON h.ID = f2.student_id WHERE h.grade > 5 ORDER BY h.name NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 912,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) AS likes_count FROM Likes l WHERE l.student_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle');",
    "exec_result": 1
  },
  {
    "idx": 913,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"",
    "pred": "SELECT COUNT(*) FROM Likes l WHERE l.student_id IN (SELECT ID FROM Highschooler WHERE name = 'Kyle');",
    "exec_result": 1
  },
  {
    "idx": 914,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(h.grade) AS average_grade FROM Highschooler h JOIN Friend f ON h.ID = f.student_id;",
    "exec_result": 0
  },
  {
    "idx": 915,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT AVG(h.grade) FROM Highschooler h JOIN Friend f ON h.ID = f.student_id UNION ALL SELECT AVG(h.grade) FROM Highschooler h JOIN Friend f ON h.ID = f.friend_id;",
    "exec_result": 0
  },
  {
    "idx": 916,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(h.grade) FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id WHERE f.student_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 917,
    "db_id": "network_1",
    "question": "",
    "gold": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
    "pred": "SELECT MIN(h.grade) FROM Highschooler h LEFT JOIN Friend f ON h.ID = f.student_id WHERE f.student_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 918,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT DISTINCT o.state, p.state FROM Owners o JOIN Professionals p ON o.state = p.state WHERE o.state IS NOT NULL AND p.state IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 919,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
    "pred": "SELECT o.state, p.state FROM Owners o JOIN Professionals p ON o.state = p.state;",
    "exec_result": 0
  },
  {
    "idx": 920,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(d.age) AS average_age FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id;",
    "exec_result": 0
  },
  {
    "idx": 921,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT AVG(CAST(d.age AS INT)) AS average_age FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id;",
    "exec_result": 0
  },
  {
    "idx": 922,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p WHERE p.state = 'IN' UNION SELECT t.professional_id, p.last_name, p.cell_number FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.last_name, p.cell_number HAVING COUNT(t.treatment_id) > 2;",
    "exec_result": 0
  },
  {
    "idx": 923,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",
    "pred": "SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p WHERE p.state = 'IN' UNION SELECT t.professional_id, p.last_name, p.cell_number FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id GROUP BY t.professional_id, p.last_name, p.cell_number HAVING COUNT(t.treatment_id) > 2;",
    "exec_result": 0
  },
  {
    "idx": 924,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT d.name FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000;",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )",
    "pred": "SELECT d.name FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000;",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT DISTINCT p.first_name FROM Professionals p WHERE p.first_name NOT IN (SELECT d.name FROM Dogs d);",
    "exec_result": 0
  },
  {
    "idx": 927,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs",
    "pred": "SELECT DISTINCT p.first_name FROM Professionals p WHERE p.first_name NOT IN (SELECT d.name FROM Dogs d); UNION SELECT DISTINCT o.first_name FROM Owners o WHERE o.first_name NOT IN (SELECT d.name FROM Dogs d); ORDER BY p.first_name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 928,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT p.professional_id, p.role_code, p.email_address FROM Professionals p WHERE p.professional_id NOT IN (SELECT t.professional_id FROM Treatments t);",
    "exec_result": 1
  },
  {
    "idx": 929,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT p.professional_id, p.role_code, p.email_address FROM Professionals p WHERE p.professional_id NOT IN (SELECT t.professional_id FROM Treatments t);",
    "exec_result": 1
  },
  {
    "idx": 930,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 931,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN (SELECT d.owner_id, COUNT(d.dog_id) AS num_dogs FROM Dogs d GROUP BY d.owner_id ORDER BY num_dogs DESC LIMIT 1) AS subquery ON o.owner_id = subquery.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 932,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN (SELECT t.professional_id FROM Treatments t GROUP BY t.professional_id HAVING COUNT(t.treatment_id) >= 2) AS t2 ON p.professional_id = t2.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 933,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN (SELECT t.professional_id, COUNT(t.treatment_id) AS treatment_count FROM Treatments t GROUP BY t.professional_id HAVING COUNT(t.treatment_id) >= 2) AS t2 ON p.professional_id = t2.professional_id ORDER BY p.professional_id NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 934,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT b.breed_name, COUNT(d.dog_id) AS num_dogs FROM Dogs d JOIN Breeds b ON d.breed_code = b.breed_code GROUP BY b.breed_name ORDER BY num_dogs DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 935,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT b.breed_name FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code GROUP BY b.breed_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 936,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.last_name, COUNT(t.treatment_id) AS total_treatments FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY total_treatments DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 937,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT o.owner_id, o.last_name, SUM(t.cost_of_treatment) AS total_cost FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY total_cost DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT tt.treatment_type_description, SUM(t.cost_of_treatment) AS total_cost FROM Treatments t JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code GROUP BY tt.treatment_type_description ORDER BY total_cost ASC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 939,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
    "pred": "SELECT tt.treatment_type_description, MIN(t.cost_of_treatment) AS min_cost FROM Treatments t JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code GROUP BY tt.treatment_type_description ORDER BY min_cost ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 940,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "WITH total_charges AS (SELECT o.owner_id, SUM(c.charge_amount) AS total_charge FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id JOIN Charges c ON t.treatment_id = c.charge_id GROUP BY o.owner_id) SELECT tc.owner_id, o.zip_code FROM total_charges tc JOIN Owners o ON tc.owner_id = o.owner_id ORDER BY tc.total_charge DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 941,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
    "pred": "WITH total_spend AS (SELECT d.owner_id, SUM(t.cost_of_treatment) AS total_cost FROM Treatments t JOIN Dogs d ON t.dog_id = d.dog_id GROUP BY d.owner_id) SELECT ts.owner_id, ts.total_cost, o.zip_code FROM total_spend ts JOIN Owners o ON ts.owner_id = o.owner_id ORDER BY ts.total_cost DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 942,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.cell_number FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id GROUP BY p.professional_id, p.cell_number HAVING COUNT(DISTINCT t.treatment_type_code) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 943,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",
    "pred": "SELECT p.professional_id, p.cell_number FROM Professionals p JOIN (SELECT t.dog_id, COUNT(DISTINCT t.treatment_type_code) AS treatment_count FROM Treatments t GROUP BY t.dog_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2) AS subquery ON p.professional_id = subquery.dog_id;",
    "exec_result": 0
  },
  {
    "idx": 944,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT p.first_name, p.last_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(t2.cost_of_treatment) FROM Treatments t2);",
    "exec_result": 0
  },
  {
    "idx": 945,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
    "pred": "SELECT p.first_name, p.last_name FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id WHERE t.cost_of_treatment < (SELECT AVG(t2.cost_of_treatment) FROM Treatments t2);",
    "exec_result": 0
  },
  {
    "idx": 946,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT t.date_of_treatment, p.first_name FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id ORDER BY t.date_of_treatment NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 947,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",
    "pred": "SELECT t.date_of_treatment, p.first_name FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 948,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT t.cost_of_treatment, tt.treatment_type_description FROM Treatments t JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code;",
    "exec_result": 1
  },
  {
    "idx": 949,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",
    "pred": "SELECT t.treatment_id, t.cost_of_treatment, tt.treatment_type_description FROM Treatments t JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code ORDER BY t.treatment_id NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 950,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT o.first_name, o.last_name, s.size_description FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Sizes s ON d.size_code = s.size_code;",
    "exec_result": 0
  },
  {
    "idx": 951,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT o.first_name, o.last_name, s.size_description FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Sizes s ON d.size_code = s.size_code ORDER BY o.first_name NULLS LAST, o.last_name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 952,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT o.first_name, d.name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 953,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",
    "pred": "SELECT o.first_name, d.name FROM Dogs d JOIN Owners o ON d.owner_id = o.owner_id;",
    "exec_result": 1
  },
  {
    "idx": 954,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT d.name, t.date_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code WHERE d.breed_code = (SELECT breed_code FROM Breeds ORDER BY COUNT(dog_id) ASC LIMIT 1) ORDER BY t.date_of_treatment ASC;",
    "exec_result": 0
  },
  {
    "idx": 955,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "WITH BreedFrequency AS (SELECT b.breed_code, COUNT(*) AS frequency FROM Dogs d JOIN Breeds b ON d.breed_code = b.breed_code GROUP BY b.breed_code), RarestBreed AS (SELECT bf.breed_code FROM BreedFrequency bf ORDER BY bf.frequency ASC LIMIT 1) SELECT d.name, t.date_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id JOIN RarestBreed rb ON d.breed_code = rb.breed_code;",
    "exec_result": 1
  },
  {
    "idx": 956,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT o.first_name, d.name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE o.state = 'Virginia';",
    "exec_result": 1
  },
  {
    "idx": 957,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",
    "pred": "SELECT o.first_name, d.name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE o.state = 'Virginia';",
    "exec_result": 1
  },
  {
    "idx": 958,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id;",
    "exec_result": 1
  },
  {
    "idx": 959,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id;",
    "exec_result": 1
  },
  {
    "idx": 960,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT o.last_name FROM Dogs d JOIN Owners o ON d.owner_id = o.owner_id WHERE d.age = (SELECT MIN(d2.age) FROM Dogs d2);",
    "exec_result": 0
  },
  {
    "idx": 961,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
    "pred": "SELECT o.last_name FROM Dogs d JOIN Owners o ON d.owner_id = o.owner_id WHERE d.date_of_birth = (SELECT MAX(d2.date_of_birth) FROM Dogs d2);",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT p.email_address FROM Professionals p WHERE p.state IN ('Hawaii', 'Wisconsin');",
    "exec_result": 1
  },
  {
    "idx": 963,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'",
    "pred": "SELECT p.email_address FROM Professionals p WHERE p.state IN ('Hawaii', 'Wisconsin');",
    "exec_result": 1
  },
  {
    "idx": 964,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 965,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT date_arrived ,  date_departed FROM Dogs",
    "pred": "SELECT d.date_arrived, d.date_departed FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 966,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(*) AS total_dogs_treated FROM Treatments;",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT dog_id) FROM Treatments",
    "pred": "SELECT COUNT(*) AS total_dogs_treated FROM Treatments t;",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT p.professional_id) FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(DISTINCT professional_id) FROM Treatments",
    "pred": "SELECT COUNT(DISTINCT p.professional_id) FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id;",
    "exec_result": 1
  },
  {
    "idx": 970,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT p.role_code, p.street, p.city, p.state FROM Professionals p WHERE p.city ilike '%West%' ORDER BY p.city NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 971,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",
    "pred": "SELECT p.role_code, p.street, p.city, p.state FROM Professionals p WHERE p.city ilike '%West%';",
    "exec_result": 0
  },
  {
    "idx": 972,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT o.first_name, o.last_name, o.email_address FROM Owners o WHERE o.state LIKE '%North%' ORDER BY o.first_name ASC;",
    "exec_result": 1
  },
  {
    "idx": 973,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'",
    "pred": "SELECT o.first_name, o.last_name, o.email_address FROM Owners o WHERE o.state ilike '%North%' ORDER BY o.first_name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 974,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT d.name, d.age FROM Dogs d WHERE CAST(d.age AS INTEGER) < (SELECT AVG(CAST(age AS INTEGER)) FROM Dogs);",
    "exec_result": 0
  },
  {
    "idx": 975,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
    "pred": "SELECT d.name, COUNT(d.dog_id) FROM Dogs d WHERE d.age < (SELECT AVG(d.age) FROM Dogs) GROUP BY d.name ORDER BY d.name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 976,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT MAX(t.cost_of_treatment) AS most_recent_treatment_cost FROM Treatments t ORDER BY most_recent_treatment_cost DESC NULLS LAST LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 977,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1",
    "pred": "SELECT t.cost_of_treatment FROM Treatments t ORDER BY t.date_of_treatment DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 978,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )",
    "pred": "SELECT COUNT(*) AS num_dogs_without_treatment FROM Dogs d WHERE d.dog_id NOT IN (SELECT t.dog_id FROM Treatments t);",
    "exec_result": 1
  },
  {
    "idx": 979,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )",
    "pred": "SELECT COUNT(*) AS number_of_dogs_without_treatment FROM Dogs d WHERE d.dog_id NOT IN (SELECT t.dog_id FROM Treatments t);",
    "exec_result": 1
  },
  {
    "idx": 980,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(*) FROM Owners o WHERE o.owner_id NOT IN (SELECT d.owner_id FROM Dogs d);",
    "exec_result": 1
  },
  {
    "idx": 981,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )",
    "pred": "SELECT COUNT(DISTINCT o.owner_id) AS number_of_owners FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.owner_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 982,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(DISTINCT p.professional_id) FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.professional_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 983,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
    "pred": "SELECT COUNT(DISTINCT p.professional_id) FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.professional_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 984,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT d.name, d.age, d.weight FROM Dogs d WHERE d.abandoned_yn = '1';",
    "exec_result": 1
  },
  {
    "idx": 985,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",
    "pred": "SELECT d.name, d.age, d.weight FROM Dogs d WHERE d.abandoned_yn = '1';",
    "exec_result": 1
  },
  {
    "idx": 986,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(CAST(d.age AS INTEGER)) AS average_age FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 987,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT avg(age) FROM Dogs",
    "pred": "SELECT AVG(CAST(d.age AS INTEGER)) AS average_age FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 988,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(d.age) AS age FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 989,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(age) FROM Dogs",
    "pred": "SELECT MAX(DATEDIFF(YEAR, d.date_of_birth, CURRENT_DATE())) AS age FROM Dogs d;",
    "exec_result": 0
  },
  {
    "idx": 990,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT c.charge_type, c.charge_amount FROM Charges c;",
    "exec_result": 1
  },
  {
    "idx": 991,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT charge_type ,  charge_amount FROM Charges",
    "pred": "SELECT c.charge_type, c.charge_amount FROM Charges c ORDER BY c.charge_type;",
    "exec_result": 1
  },
  {
    "idx": 992,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT MAX(c.charge_amount) FROM Charges c;",
    "exec_result": 1
  },
  {
    "idx": 993,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT max(charge_amount) FROM Charges",
    "pred": "SELECT c.charge_amount FROM Charges c WHERE c.charge_amount = (SELECT MAX(c2.charge_amount) FROM Charges c2);",
    "exec_result": 1
  },
  {
    "idx": 994,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT p.email_address, p.cell_number, p.home_phone FROM Professionals p;",
    "exec_result": 1
  },
  {
    "idx": 995,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT email_address ,  cell_number ,  home_phone FROM professionals",
    "pred": "SELECT p.email_address, p.cell_number, p.home_phone FROM Professionals p;",
    "exec_result": 1
  },
  {
    "idx": 996,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT d.breed_code, d.size_code FROM Dogs d;",
    "exec_result": 1
  },
  {
    "idx": 997,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT breed_code ,  size_code FROM dogs",
    "pred": "SELECT d.breed_code, d.size_code FROM Dogs d GROUP BY d.breed_code, d.size_code;",
    "exec_result": 0
  },
  {
    "idx": 998,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT p.first_name, tt.treatment_type_description FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code;",
    "exec_result": 1
  },
  {
    "idx": 999,
    "db_id": "dog_kennels",
    "question": "",
    "gold": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",
    "pred": "SELECT p.first_name, tt.treatment_type_description FROM Treatments t JOIN Professionals p ON t.professional_id = p.professional_id JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code;",
    "exec_result": 1
  },
  {
    "idx": 1000,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(DISTINCT s.\"Singer_ID\") FROM \"singer\" s;",
    "exec_result": 1
  },
  {
    "idx": 1001,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT count(*) FROM singer",
    "pred": "SELECT COUNT(*) FROM singer;",
    "exec_result": 1
  },
  {
    "idx": 1002,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT s.Name FROM singer s ORDER BY s.Net_Worth_Millions ASC;",
    "exec_result": 1
  },
  {
    "idx": 1003,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC",
    "pred": "SELECT s.Name, s.Net_Worth_Millions FROM singer s ORDER BY s.Net_Worth_Millions ASC;",
    "exec_result": 0
  },
  {
    "idx": 1004,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT s.\"Birth_Year\", s.\"Citizenship\" FROM \"singer\" s;",
    "exec_result": 1
  },
  {
    "idx": 1005,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Birth_Year ,  Citizenship FROM singer",
    "pred": "SELECT s.\"Birth_Year\", s.\"Citizenship\" FROM \"singer\" s ORDER BY s.\"Birth_Year\" ASC;",
    "exec_result": 1
  },
  {
    "idx": 1006,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT s.Name FROM \"singer\" s WHERE s.Citizenship!= 'France' ORDER BY s.Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 1007,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Citizenship != \"France\"",
    "pred": "SELECT s.Name FROM \"singer\" s WHERE s.Citizenship!= 'French' ORDER BY s.Name ASC NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 1008,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT s.\"Name\" FROM \"singer\" s WHERE s.\"Birth_Year\" = 1948 OR s.\"Birth_Year\" = 1949;",
    "exec_result": 1
  },
  {
    "idx": 1009,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949",
    "pred": "SELECT s.Name FROM singer s WHERE s.\"Birth_Year\" = 1948 OR s.\"Birth_Year\" = 1949;",
    "exec_result": 1
  },
  {
    "idx": 1010,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT s.Name, s.Net_Worth_Millions FROM singer s ORDER BY s.Net_Worth_Millions DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1011,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1",
    "pred": "SELECT s.Name, s.Net_Worth_Millions FROM singer s ORDER BY s.Net_Worth_Millions DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1012,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT s.Citizenship, COUNT(s.Citizenship) AS number_of_singers FROM \"singer\" s GROUP BY s.Citizenship ORDER BY number_of_singers DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 1013,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",
    "pred": "SELECT s.Citizenship, COUNT(s.Singer_ID) AS Number_of_Singers FROM \"singer\" s GROUP BY s.Citizenship ORDER BY Number_of_Singers DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 1014,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT s.Citizenship, COUNT(s.Citizenship) AS Count FROM singer s GROUP BY s.Citizenship ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1015,
    "db_id": "singer",
    "question": "",
    "gold": "select citizenship from singer group by citizenship order by count(*) desc limit 1",
    "pred": "SELECT s.Citizenship, COUNT(*) AS COUNT FROM \"singer\" s GROUP BY s.Citizenship ORDER BY COUNT DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1016,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT s.Citizenship, MAX(s.Net_Worth_Millions) AS max_net_worth FROM singer s GROUP BY s.Citizenship ORDER BY max_net_worth DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 1017,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",
    "pred": "SELECT s.Citizenship, MAX(s.Net_Worth_Millions) AS Max_Net_Worth FROM \"singer\" s GROUP BY s.Citizenship ORDER BY Max_Net_Worth DESC NULLS LAST;",
    "exec_result": 1
  },
  {
    "idx": 1018,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT s.\"Title\", s.\"Singer_ID\", s.\"Name\" FROM \"song\" s JOIN \"singer\" si ON s.\"Singer_ID\" = si.\"Singer_ID\";",
    "exec_result": 0
  },
  {
    "idx": 1019,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID",
    "pred": "SELECT s.\"Name\", s.\"Title\" FROM \"singer\" s JOIN \"song\" st ON s.\"Singer_ID\" = st.\"Singer_ID\" ORDER BY s.\"Name\";",
    "exec_result": 0
  },
  {
    "idx": 1020,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT s.Name FROM singer s JOIN song t ON s.Singer_ID = t.Singer_ID WHERE t.Sales > 300000;",
    "exec_result": 1
  },
  {
    "idx": 1021,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000",
    "pred": "SELECT DISTINCT s.Name FROM song s WHERE s.Sales > 300000;",
    "exec_result": 0
  },
  {
    "idx": 1022,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT s.Name FROM singer s JOIN song ss ON s.Singer_ID = ss.Singer_ID GROUP BY s.Name HAVING COUNT(ss.Song_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 1023,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
    "pred": "SELECT s.Name FROM \"singer\" s JOIN (SELECT Singer_ID FROM \"song\" GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1) t ON s.Singer_ID = t.Singer_ID;",
    "exec_result": 1
  },
  {
    "idx": 1024,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT s.Name, SUM(s.Sales) AS Total_Sales FROM song s GROUP BY s.Name;",
    "exec_result": 0
  },
  {
    "idx": 1025,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",
    "pred": "SELECT s.Name, SUM(s.Sales) AS Total_Sales FROM song s GROUP BY s.Name;",
    "exec_result": 0
  },
  {
    "idx": 1026,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT s.Name FROM \"singer\" s WHERE s.Singer_ID NOT IN (SELECT s.Singer_ID FROM \"song\") ORDER BY s.Name NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 1027,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
    "pred": "SELECT s.Name FROM singer s WHERE s.Singer_ID NOT IN (SELECT s.Singer_ID FROM song);",
    "exec_result": 0
  },
  {
    "idx": 1028,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT s.Citizenship FROM singer s WHERE s.Birth_Year < 1945 AND s.Birth_Year > 1955 GROUP BY s.Citizenship ORDER BY s.Citizenship NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 1029,
    "db_id": "singer",
    "question": "",
    "gold": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955",
    "pred": "SELECT s.Citizenship FROM singer s WHERE s.Birth_Year < 1945 AND s.Birth_Year > 1955 GROUP BY s.Citizenship ORDER BY s.Citizenship NULLS LAST;",
    "exec_result": 0
  },
  {
    "idx": 1030,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT count(*) FROM Other_Available_Features",
    "pred": "SELECT COUNT(af.feature_id) FROM Other_Available_Features af;",
    "exec_result": 1
  },
  {
    "idx": 1031,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"",
    "pred": "SELECT rft.feature_type_name FROM Other_Available_Features oaf JOIN Ref_Feature_Types rft ON oaf.feature_type_code = rft.feature_type_code WHERE oaf.feature_name = 'AirCon';",
    "exec_result": 1
  },
  {
    "idx": 1032,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code",
    "pred": "SELECT p.property_type_description FROM Properties p WHERE p.property_type_code = 'P001';",
    "exec_result": 0
  },
  {
    "idx": 1033,
    "db_id": "real_estate_properties",
    "question": "",
    "gold": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1",
    "pred": "SELECT p.property_name FROM Properties p WHERE p.room_count > 1 AND p.property_type_code IN (SELECT property_type_code FROM Ref_Property_Types WHERE property_type_description IN ('House', 'Apartment'));",
    "exec_result": 0
  }
]